/* libdotnet.h generated by valac 0.29.2.5-8632-dirty, the Vala compiler, do not modify */


#ifndef __LIBDOTNET_H__
#define __LIBDOTNET_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE (system_text_regular_expressions_capture_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCapture))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCaptureClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCaptureClass))

typedef struct _SystemTextRegularExpressionsCapture SystemTextRegularExpressionsCapture;
typedef struct _SystemTextRegularExpressionsCaptureClass SystemTextRegularExpressionsCaptureClass;
typedef struct _SystemTextRegularExpressionsCapturePrivate SystemTextRegularExpressionsCapturePrivate;

#define SYSTEM_COLLECTIONS_TYPE_ICOLLECTION (system_collections_icollection_get_type ())
#define SYSTEM_COLLECTIONS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollection))
#define SYSTEM_COLLECTIONS_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollectionIface))

typedef struct _SystemCollectionsICollection SystemCollectionsICollection;
typedef struct _SystemCollectionsICollectionIface SystemCollectionsICollectionIface;

#define TYPE_OBJECT (object_get_type ())
#define OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_OBJECT, Object))
#define OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_OBJECT, ObjectClass))
#define IS_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_OBJECT))
#define IS_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_OBJECT))
#define OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_OBJECT, ObjectClass))

typedef struct _Object Object;
typedef struct _ObjectClass ObjectClass;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERABLE (system_collections_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerable))
#define SYSTEM_COLLECTIONS_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerableIface))

typedef struct _SystemCollectionsIEnumerable SystemCollectionsIEnumerable;
typedef struct _SystemCollectionsIEnumerableIface SystemCollectionsIEnumerableIface;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERATOR (system_collections_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumerator))
#define SYSTEM_COLLECTIONS_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumeratorIface))

typedef struct _SystemCollectionsIEnumerator SystemCollectionsIEnumerator;
typedef struct _SystemCollectionsIEnumeratorIface SystemCollectionsIEnumeratorIface;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION (system_text_regular_expressions_capture_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollectionClass))

typedef struct _SystemTextRegularExpressionsCaptureCollection SystemTextRegularExpressionsCaptureCollection;
typedef struct _SystemTextRegularExpressionsCaptureCollectionClass SystemTextRegularExpressionsCaptureCollectionClass;
typedef struct _SystemTextRegularExpressionsCaptureCollectionPrivate SystemTextRegularExpressionsCaptureCollectionPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP (system_text_regular_expressions_group_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroup))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroupClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroupClass))

typedef struct _SystemTextRegularExpressionsGroup SystemTextRegularExpressionsGroup;
typedef struct _SystemTextRegularExpressionsGroupClass SystemTextRegularExpressionsGroupClass;
typedef struct _SystemTextRegularExpressionsGroupPrivate SystemTextRegularExpressionsGroupPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION (system_text_regular_expressions_group_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollectionClass))

typedef struct _SystemTextRegularExpressionsGroupCollection SystemTextRegularExpressionsGroupCollection;
typedef struct _SystemTextRegularExpressionsGroupCollectionClass SystemTextRegularExpressionsGroupCollectionClass;
typedef struct _SystemTextRegularExpressionsGroupCollectionPrivate SystemTextRegularExpressionsGroupCollectionPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH (system_text_regular_expressions_match_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatch))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatchClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatchClass))

typedef struct _SystemTextRegularExpressionsMatch SystemTextRegularExpressionsMatch;
typedef struct _SystemTextRegularExpressionsMatchClass SystemTextRegularExpressionsMatchClass;
typedef struct _SystemTextRegularExpressionsMatchPrivate SystemTextRegularExpressionsMatchPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX (system_text_regular_expressions_static_regex_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegex))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegexClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_STATIC_REGEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_STATIC_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegexClass))

typedef struct _SystemTextRegularExpressionsStaticRegex SystemTextRegularExpressionsStaticRegex;
typedef struct _SystemTextRegularExpressionsStaticRegexClass SystemTextRegularExpressionsStaticRegexClass;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX (system_text_regular_expressions_regex_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegex))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegexClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_REGEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegexClass))

typedef struct _SystemTextRegularExpressionsRegex SystemTextRegularExpressionsRegex;
typedef struct _SystemTextRegularExpressionsRegexClass SystemTextRegularExpressionsRegexClass;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION (system_text_regular_expressions_match_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollectionClass))

typedef struct _SystemTextRegularExpressionsMatchCollection SystemTextRegularExpressionsMatchCollection;
typedef struct _SystemTextRegularExpressionsMatchCollectionClass SystemTextRegularExpressionsMatchCollectionClass;
typedef struct _SystemTextRegularExpressionsMatchCollectionPrivate SystemTextRegularExpressionsMatchCollectionPrivate;
typedef struct _SystemTextRegularExpressionsStaticRegexPrivate SystemTextRegularExpressionsStaticRegexPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX_OPTIONS (system_text_regular_expressions_regex_options_get_type ())
typedef struct _SystemTextRegularExpressionsRegexPrivate SystemTextRegularExpressionsRegexPrivate;

#define SYSTEM_LINQ_TYPE_ENUMERABLE (system_linq_enumerable_get_type ())
#define SYSTEM_LINQ_ENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_LINQ_TYPE_ENUMERABLE, SystemLinqEnumerable))
#define SYSTEM_LINQ_ENUMERABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_LINQ_TYPE_ENUMERABLE, SystemLinqEnumerableClass))
#define SYSTEM_LINQ_IS_ENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_LINQ_TYPE_ENUMERABLE))
#define SYSTEM_LINQ_IS_ENUMERABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_LINQ_TYPE_ENUMERABLE))
#define SYSTEM_LINQ_ENUMERABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_LINQ_TYPE_ENUMERABLE, SystemLinqEnumerableClass))

typedef struct _SystemLinqEnumerable SystemLinqEnumerable;
typedef struct _SystemLinqEnumerableClass SystemLinqEnumerableClass;
typedef struct _SystemLinqEnumerablePrivate SystemLinqEnumerablePrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE (system_collections_generic_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerable))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerableIface))

typedef struct _SystemCollectionsGenericIEnumerable SystemCollectionsGenericIEnumerable;
typedef struct _SystemCollectionsGenericIEnumerableIface SystemCollectionsGenericIEnumerableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR (system_collections_generic_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumeratorIface))

typedef struct _SystemCollectionsGenericIEnumerator SystemCollectionsGenericIEnumerator;
typedef struct _SystemCollectionsGenericIEnumeratorIface SystemCollectionsGenericIEnumeratorIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION (system_collections_generic_icollection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollectionIface))

typedef struct _SystemCollectionsGenericICollection SystemCollectionsGenericICollection;
typedef struct _SystemCollectionsGenericICollectionIface SystemCollectionsGenericICollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER (system_collections_generic_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparerIface))

typedef struct _SystemCollectionsGenericIComparer SystemCollectionsGenericIComparer;
typedef struct _SystemCollectionsGenericIComparerIface SystemCollectionsGenericIComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY (system_collections_generic_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionaryIface))

typedef struct _SystemCollectionsGenericIDictionary SystemCollectionsGenericIDictionary;
typedef struct _SystemCollectionsGenericIDictionaryIface SystemCollectionsGenericIDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY_ENUMERATOR (system_collections_generic_idictionary_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsGenericIDictionaryEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY_ENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_ENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsGenericIDictionaryEnumeratorIface))

typedef struct _SystemCollectionsGenericIDictionaryEnumerator SystemCollectionsGenericIDictionaryEnumerator;
typedef struct _SystemCollectionsGenericIDictionaryEnumeratorIface SystemCollectionsGenericIDictionaryEnumeratorIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY (system_collections_generic_dictionary_entry_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY, SystemCollectionsGenericDictionaryEntry))
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY, SystemCollectionsGenericDictionaryEntryClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_GENERIC_IS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY_ENTRY, SystemCollectionsGenericDictionaryEntryClass))

typedef struct _SystemCollectionsGenericDictionaryEntry SystemCollectionsGenericDictionaryEntry;
typedef struct _SystemCollectionsGenericDictionaryEntryClass SystemCollectionsGenericDictionaryEntryClass;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR (system_collections_generic_key_value_pair_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePair))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))

typedef struct _SystemCollectionsGenericKeyValuePair SystemCollectionsGenericKeyValuePair;
typedef struct _SystemCollectionsGenericKeyValuePairClass SystemCollectionsGenericKeyValuePairClass;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER (system_collections_generic_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparerIface))

typedef struct _SystemCollectionsGenericIEqualityComparer SystemCollectionsGenericIEqualityComparer;
typedef struct _SystemCollectionsGenericIEqualityComparerIface SystemCollectionsGenericIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST (system_collections_generic_ilist_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_GENERIC_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIListIface))

typedef struct _SystemCollectionsGenericIList SystemCollectionsGenericIList;
typedef struct _SystemCollectionsGenericIListIface SystemCollectionsGenericIListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET (system_collections_generic_iset_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ISET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISet))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ISET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET))
#define SYSTEM_COLLECTIONS_GENERIC_ISET_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISetIface))

typedef struct _SystemCollectionsGenericISet SystemCollectionsGenericISet;
typedef struct _SystemCollectionsGenericISetIface SystemCollectionsGenericISetIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION (system_collections_generic_iread_only_collection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollectionIface))

typedef struct _SystemCollectionsGenericIReadOnlyCollection SystemCollectionsGenericIReadOnlyCollection;
typedef struct _SystemCollectionsGenericIReadOnlyCollectionIface SystemCollectionsGenericIReadOnlyCollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY (system_collections_generic_iread_only_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionaryIface))

typedef struct _SystemCollectionsGenericIReadOnlyDictionary SystemCollectionsGenericIReadOnlyDictionary;
typedef struct _SystemCollectionsGenericIReadOnlyDictionaryIface SystemCollectionsGenericIReadOnlyDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST (system_collections_generic_iread_only_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyListIface))

typedef struct _SystemCollectionsGenericIReadOnlyList SystemCollectionsGenericIReadOnlyList;
typedef struct _SystemCollectionsGenericIReadOnlyListIface SystemCollectionsGenericIReadOnlyListIface;
typedef struct _SystemCollectionsGenericKeyValuePairPrivate SystemCollectionsGenericKeyValuePairPrivate;
typedef struct _SystemCollectionsGenericDictionaryEntryPrivate SystemCollectionsGenericDictionaryEntryPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER (system_collections_generic_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER, SystemCollectionsGenericComparer))
#define SYSTEM_COLLECTIONS_GENERIC_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER, SystemCollectionsGenericComparerClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IS_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_COMPARER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_COMPARER, SystemCollectionsGenericComparerClass))

typedef struct _SystemCollectionsGenericComparer SystemCollectionsGenericComparer;
typedef struct _SystemCollectionsGenericComparerClass SystemCollectionsGenericComparerClass;
typedef struct _SystemCollectionsGenericComparerPrivate SystemCollectionsGenericComparerPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER (system_collections_generic_equality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_EQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER, SystemCollectionsGenericEqualityComparer))
#define SYSTEM_COLLECTIONS_GENERIC_EQUALITY_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER, SystemCollectionsGenericEqualityComparerClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_EQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IS_EQUALITY_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_EQUALITY_COMPARER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_EQUALITY_COMPARER, SystemCollectionsGenericEqualityComparerClass))

typedef struct _SystemCollectionsGenericEqualityComparer SystemCollectionsGenericEqualityComparer;
typedef struct _SystemCollectionsGenericEqualityComparerClass SystemCollectionsGenericEqualityComparerClass;
typedef struct _SystemCollectionsGenericEqualityComparerPrivate SystemCollectionsGenericEqualityComparerPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY (system_collections_generic_abstract_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY, SystemCollectionsGenericAbstractDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY, SystemCollectionsGenericAbstractDictionaryClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_DICTIONARY, SystemCollectionsGenericAbstractDictionaryClass))

typedef struct _SystemCollectionsGenericAbstractDictionary SystemCollectionsGenericAbstractDictionary;
typedef struct _SystemCollectionsGenericAbstractDictionaryClass SystemCollectionsGenericAbstractDictionaryClass;
typedef struct _SystemCollectionsGenericAbstractDictionaryPrivate SystemCollectionsGenericAbstractDictionaryPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY (system_collections_generic_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY, SystemCollectionsGenericDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY, SystemCollectionsGenericDictionaryClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IS_DICTIONARY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_DICTIONARY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_DICTIONARY, SystemCollectionsGenericDictionaryClass))

typedef struct _SystemCollectionsGenericDictionary SystemCollectionsGenericDictionary;
typedef struct _SystemCollectionsGenericDictionaryClass SystemCollectionsGenericDictionaryClass;
typedef struct _SystemCollectionsGenericDictionaryPrivate SystemCollectionsGenericDictionaryPrivate;
typedef struct _SystemCollectionsGenericNode SystemCollectionsGenericNode;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST (system_collections_generic_abstract_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractList))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractListClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractListClass))

typedef struct _SystemCollectionsGenericAbstractList SystemCollectionsGenericAbstractList;
typedef struct _SystemCollectionsGenericAbstractListClass SystemCollectionsGenericAbstractListClass;
typedef struct _SystemCollectionsGenericAbstractListPrivate SystemCollectionsGenericAbstractListPrivate;

#define SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION (system_collections_object_model_read_only_collection_get_type ())
#define SYSTEM_COLLECTIONS_OBJECT_MODEL_READ_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION, SystemCollectionsObjectModelReadOnlyCollection))
#define SYSTEM_COLLECTIONS_OBJECT_MODEL_READ_ONLY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION, SystemCollectionsObjectModelReadOnlyCollectionClass))
#define SYSTEM_COLLECTIONS_OBJECT_MODEL_IS_READ_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_OBJECT_MODEL_IS_READ_ONLY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_OBJECT_MODEL_READ_ONLY_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_OBJECT_MODEL_TYPE_READ_ONLY_COLLECTION, SystemCollectionsObjectModelReadOnlyCollectionClass))

typedef struct _SystemCollectionsObjectModelReadOnlyCollection SystemCollectionsObjectModelReadOnlyCollection;
typedef struct _SystemCollectionsObjectModelReadOnlyCollectionClass SystemCollectionsObjectModelReadOnlyCollectionClass;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST (system_collections_generic_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericList))
#define SYSTEM_COLLECTIONS_GENERIC_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericListClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericListClass))

typedef struct _SystemCollectionsGenericList SystemCollectionsGenericList;
typedef struct _SystemCollectionsGenericListClass SystemCollectionsGenericListClass;
typedef struct _SystemCollectionsGenericListPrivate SystemCollectionsGenericListPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE (system_collections_generic_queue_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE, SystemCollectionsGenericQueue))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE, SystemCollectionsGenericQueueClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_GENERIC_IS_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_QUEUE, SystemCollectionsGenericQueueClass))

typedef struct _SystemCollectionsGenericQueue SystemCollectionsGenericQueue;
typedef struct _SystemCollectionsGenericQueueClass SystemCollectionsGenericQueueClass;
typedef struct _SystemCollectionsGenericQueuePrivate SystemCollectionsGenericQueuePrivate;

#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR (system_collections_generic_queue_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR, SystemCollectionsGenericQueueEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR, SystemCollectionsGenericQueueEnumeratorClass))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_IS_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_IS_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_QUEUE_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_QUEUE_TYPE_ENUMERATOR, SystemCollectionsGenericQueueEnumeratorClass))

typedef struct _SystemCollectionsGenericQueueEnumerator SystemCollectionsGenericQueueEnumerator;
typedef struct _SystemCollectionsGenericQueueEnumeratorClass SystemCollectionsGenericQueueEnumeratorClass;
typedef struct _SystemCollectionsGenericQueueEnumeratorPrivate SystemCollectionsGenericQueueEnumeratorPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK (system_collections_generic_stack_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK, SystemCollectionsGenericStack))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK, SystemCollectionsGenericStackClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK))
#define SYSTEM_COLLECTIONS_GENERIC_IS_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_STACK, SystemCollectionsGenericStackClass))

typedef struct _SystemCollectionsGenericStack SystemCollectionsGenericStack;
typedef struct _SystemCollectionsGenericStackClass SystemCollectionsGenericStackClass;
typedef struct _SystemCollectionsGenericStackPrivate SystemCollectionsGenericStackPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR (system_collections_generic_stack_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_STACK_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR, SystemCollectionsGenericStackEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR, SystemCollectionsGenericStackEnumeratorClass))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_IS_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_IS_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_STACK_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_STACK_TYPE_ENUMERATOR, SystemCollectionsGenericStackEnumeratorClass))

typedef struct _SystemCollectionsGenericStackEnumerator SystemCollectionsGenericStackEnumerator;
typedef struct _SystemCollectionsGenericStackEnumeratorClass SystemCollectionsGenericStackEnumeratorClass;
typedef struct _SystemCollectionsGenericStackEnumeratorPrivate SystemCollectionsGenericStackEnumeratorPrivate;
typedef struct _SystemCollectionsObjectModelReadOnlyCollectionPrivate SystemCollectionsObjectModelReadOnlyCollectionPrivate;

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE (system_runtime_serialization_iserializable_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializable))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE))
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializableIface))

typedef struct _SystemRuntimeSerializationISerializable SystemRuntimeSerializationISerializable;
typedef struct _SystemRuntimeSerializationISerializableIface SystemRuntimeSerializationISerializableIface;

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK (system_runtime_serialization_ideserialization_callback_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallback))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK))
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallbackIface))

typedef struct _SystemRuntimeSerializationIDeserializationCallback SystemRuntimeSerializationIDeserializationCallback;
typedef struct _SystemRuntimeSerializationIDeserializationCallbackIface SystemRuntimeSerializationIDeserializationCallbackIface;
typedef GString SystemTextStringBuilder;

#define SYSTEM_TYPE_IFORMAT_PROVIDER (system_iformat_provider_get_type ())
#define SYSTEM_IFORMAT_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IFORMAT_PROVIDER, SystemIFormatProvider))
#define SYSTEM_IS_IFORMAT_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IFORMAT_PROVIDER))
#define SYSTEM_IFORMAT_PROVIDER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IFORMAT_PROVIDER, SystemIFormatProviderIface))

typedef struct _SystemIFormatProvider SystemIFormatProvider;
typedef struct _SystemIFormatProviderIface SystemIFormatProviderIface;

#define SYSTEM_TYPE_NULLABLE (system_nullable_get_type ())
#define SYSTEM_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_NULLABLE, SystemNullable))
#define SYSTEM_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TYPE_NULLABLE, SystemNullableClass))
#define SYSTEM_IS_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_IS_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_NULLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TYPE_NULLABLE, SystemNullableClass))

typedef struct _SystemNullable SystemNullable;
typedef struct _SystemNullableClass SystemNullableClass;
typedef struct _SystemNullablePrivate SystemNullablePrivate;
typedef struct _ObjectPrivate ObjectPrivate;

#define SYSTEM_TYPE_OBJECT (system_object_get_type ())
#define SYSTEM_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_OBJECT, Systemobject))
#define SYSTEM_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TYPE_OBJECT, SystemobjectClass))
#define SYSTEM_IS_OBJECT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_OBJECT))
#define SYSTEM_IS_OBJECT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TYPE_OBJECT))
#define SYSTEM_OBJECT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TYPE_OBJECT, SystemobjectClass))

typedef struct _Systemobject Systemobject;
typedef struct _SystemobjectClass SystemobjectClass;
typedef struct _SystemobjectPrivate SystemobjectPrivate;
typedef struct _SystemString SystemString;

#define SYSTEM_TYPE_IDISPOSABLE (system_idisposable_get_type ())
#define SYSTEM_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposable))
#define SYSTEM_IS_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IDISPOSABLE))
#define SYSTEM_IDISPOSABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposableIface))

typedef struct _SystemIDisposable SystemIDisposable;
typedef struct _SystemIDisposableIface SystemIDisposableIface;

#define SYSTEM_TYPE_ICOMPARABLE (system_icomparable_get_type ())
#define SYSTEM_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparable))
#define SYSTEM_IS_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICOMPARABLE))
#define SYSTEM_ICOMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparableIface))

typedef struct _SystemIComparable SystemIComparable;
typedef struct _SystemIComparableIface SystemIComparableIface;

#define SYSTEM_TYPE_IEQUATABLE (system_iequatable_get_type ())
#define SYSTEM_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatable))
#define SYSTEM_IS_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IEQUATABLE))
#define SYSTEM_IEQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatableIface))

typedef struct _SystemIEquatable SystemIEquatable;
typedef struct _SystemIEquatableIface SystemIEquatableIface;

#define SYSTEM_TYPE_IFORMATTABLE (system_iformattable_get_type ())
#define SYSTEM_IFORMATTABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IFORMATTABLE, SystemIFormattable))
#define SYSTEM_IS_IFORMATTABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IFORMATTABLE))
#define SYSTEM_IFORMATTABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IFORMATTABLE, SystemIFormattableIface))

typedef struct _SystemIFormattable SystemIFormattable;
typedef struct _SystemIFormattableIface SystemIFormattableIface;

#define SYSTEM_TYPE_ICUSTOM_FORMATTER (system_icustom_formatter_get_type ())
#define SYSTEM_ICUSTOM_FORMATTER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICUSTOM_FORMATTER, SystemICustomFormatter))
#define SYSTEM_IS_ICUSTOM_FORMATTER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICUSTOM_FORMATTER))
#define SYSTEM_ICUSTOM_FORMATTER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICUSTOM_FORMATTER, SystemICustomFormatterIface))

typedef struct _SystemICustomFormatter SystemICustomFormatter;
typedef struct _SystemICustomFormatterIface SystemICustomFormatterIface;

#define SYSTEM_TYPE_ICLONEABLE (system_icloneable_get_type ())
#define SYSTEM_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneable))
#define SYSTEM_IS_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICLONEABLE))
#define SYSTEM_ICLONEABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneableIface))

typedef struct _SystemICloneable SystemICloneable;
typedef struct _SystemICloneableIface SystemICloneableIface;

#define SYSTEM_GLOBALIZATION_CULTURE_INFO_TYPE_STRING_COMPARISON (system_globalization_culture_info_string_comparison_get_type ())

struct _SystemTextRegularExpressionsCapture {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsCapturePrivate * priv;
	gchar* _text;
	gint _index;
	gint _length;
};

struct _SystemTextRegularExpressionsCaptureClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsCapture *self);
};

struct _SystemCollectionsICollectionIface {
	GTypeInterface parent_iface;
	void (*CopyTo) (SystemCollectionsICollection* self, Object** array, int array_length1, gint arrayIndex);
	gint (*get_size) (SystemCollectionsICollection* self);
	gint (*get_Count) (SystemCollectionsICollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsICollection* self);
	Object* (*get_SyncRoot) (SystemCollectionsICollection* self);
};

struct _SystemCollectionsIEnumeratorIface {
	GTypeInterface parent_iface;
	gboolean (*next) (SystemCollectionsIEnumerator* self);
	gboolean (*MoveNext) (SystemCollectionsIEnumerator* self);
	Object* (*get) (SystemCollectionsIEnumerator* self);
	void (*Reset) (SystemCollectionsIEnumerator* self);
	Object* (*get_Current) (SystemCollectionsIEnumerator* self);
};

struct _SystemCollectionsIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsIEnumerator* (*iterator) (SystemCollectionsIEnumerable* self);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsIEnumerable* self);
};

struct _SystemTextRegularExpressionsCaptureCollection {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsCaptureCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsCaptureCollectionClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsCaptureCollection *self);
};

struct _SystemTextRegularExpressionsGroup {
	SystemTextRegularExpressionsCapture parent_instance;
	SystemTextRegularExpressionsGroupPrivate * priv;
	gint _capcount;
	SystemTextRegularExpressionsCaptureCollection* _capcoll;
};

struct _SystemTextRegularExpressionsGroupClass {
	SystemTextRegularExpressionsCaptureClass parent_class;
};

struct _SystemTextRegularExpressionsGroupCollection {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsGroupCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsGroupCollectionClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsGroupCollection *self);
};

struct _SystemTextRegularExpressionsMatch {
	SystemTextRegularExpressionsGroup parent_instance;
	SystemTextRegularExpressionsMatchPrivate * priv;
	SystemTextRegularExpressionsGroupCollection* _groupcoll;
	GMatchInfo* _matchinfo;
};

struct _SystemTextRegularExpressionsMatchClass {
	SystemTextRegularExpressionsGroupClass parent_class;
	void (*Reset) (SystemTextRegularExpressionsMatch* self, SystemTextRegularExpressionsRegex* regex, const gchar* text, gint textbeg, gint textend, gint textstart);
	gchar* (*Result) (SystemTextRegularExpressionsMatch* self, const gchar* replacement);
	SystemTextRegularExpressionsGroupCollection* (*get_Groups) (SystemTextRegularExpressionsMatch* self);
};

struct _SystemTextRegularExpressionsMatchCollection {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsMatchCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsMatchCollectionClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsMatchCollection *self);
};

struct _SystemTextRegularExpressionsStaticRegex {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsStaticRegexPrivate * priv;
};

struct _SystemTextRegularExpressionsStaticRegexClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsStaticRegex *self);
};

typedef enum  {
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_None = 0x0000,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_IgnoreCase = 0x0001,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Multiline = 0x0002,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_ExplicitCapture = 0x0004,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Compiled = 0x0008,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Singleline = 0x0010,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_IgnorePatternWhitespace = 0x0020,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_RightToLeft = 0x0040,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_ECMAScript = 0x0100,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_CultureInvariant = 0x0200
} SystemTextRegularExpressionsRegexOptions;

struct _SystemTextRegularExpressionsRegex {
	SystemTextRegularExpressionsStaticRegex parent_instance;
	SystemTextRegularExpressionsRegexPrivate * priv;
	gchar* _pattern;
	SystemTextRegularExpressionsRegexOptions _roptions;
	GRegex* _regex;
	GTimeSpan _internalMatchTimeout;
	gint _capsize;
};

struct _SystemTextRegularExpressionsRegexClass {
	SystemTextRegularExpressionsStaticRegexClass parent_class;
};

typedef gchar* (*SystemTextRegularExpressionsMatchEvaluator) (SystemTextRegularExpressionsMatch* match, void* user_data);
typedef enum  {
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_MATCH_TIMEOUT_EXCEPTION_TIMEOUT
} SystemTextRegularExpressionsRegexMatchTimeoutException;
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_MATCH_TIMEOUT_EXCEPTION system_text_regular_expressions_regex_match_timeout_exception_quark ()
typedef gpointer (*SystemFunc) (gconstpointer arg, void* user_data);
struct _SystemCollectionsGenericIEnumeratorIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericIEnumerator* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericIEnumerator* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericIEnumerator* self);
	gpointer (*get) (SystemCollectionsGenericIEnumerator* self);
	gboolean (*MoveNext) (SystemCollectionsGenericIEnumerator* self);
	gboolean (*next) (SystemCollectionsGenericIEnumerator* self);
	void (*Reset) (SystemCollectionsGenericIEnumerator* self);
	gpointer (*get_Current) (SystemCollectionsGenericIEnumerator* self);
};

struct _SystemCollectionsGenericIEnumerableIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericIEnumerable* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericIEnumerable* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericIEnumerable* self);
	GType (*get_element_type) (SystemCollectionsGenericIEnumerable* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericIEnumerable* self);
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericIEnumerable* self);
};

struct _SystemLinqEnumerable {
	GObject parent_instance;
	SystemLinqEnumerablePrivate * priv;
};

struct _SystemLinqEnumerableClass {
	GObjectClass parent_class;
	SystemCollectionsGenericIEnumerable* (*Where) (SystemLinqEnumerable* self, SystemFunc predicate, void* predicate_target);
};

struct _SystemCollectionsGenericICollectionIface {
	GTypeInterface parent_iface;
	void (*Add) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*Clear) (SystemCollectionsGenericICollection* self);
	gboolean (*contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gboolean (*Contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*CopyTo) (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
	gboolean (*Remove) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gint (*get_size) (SystemCollectionsGenericICollection* self);
	gint (*get_Count) (SystemCollectionsGenericICollection* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericICollection* self);
};

struct _SystemCollectionsGenericIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
};

struct _SystemCollectionsGenericIDictionaryIface {
	GTypeInterface parent_iface;
	GType (*get_tkey_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tkey_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tkey_destroy_func) (SystemCollectionsGenericIDictionary* self);
	GType (*get_tvalue_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tvalue_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tvalue_destroy_func) (SystemCollectionsGenericIDictionary* self);
	gpointer (*get) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	void (*set) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	void (*Add) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*ContainsKey) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*Remove) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*TryGetValue) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericICollection* (*get_Keys) (SystemCollectionsGenericIDictionary* self);
	SystemCollectionsGenericICollection* (*get_Values) (SystemCollectionsGenericIDictionary* self);
};

struct _SystemCollectionsGenericIDictionaryEnumeratorIface {
	GTypeInterface parent_iface;
	gpointer (*get_Key) (SystemCollectionsGenericIDictionaryEnumerator* self);
	gpointer (*get_Value) (SystemCollectionsGenericIDictionaryEnumerator* self);
	SystemCollectionsGenericDictionaryEntry* (*get_Entry) (SystemCollectionsGenericIDictionaryEnumerator* self);
	SystemCollectionsGenericKeyValuePair* (*get_Current) (SystemCollectionsGenericIDictionaryEnumerator* self);
};

struct _SystemCollectionsGenericIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
	guint (*GetHashCode) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
};

struct _SystemCollectionsGenericIListIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIList* self, gint index);
	void (*set) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	gint (*IndexOf) (SystemCollectionsGenericIList* self, gconstpointer item, gint index);
	void (*Insert) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericIList* self, gint index);
};

struct _SystemCollectionsGenericISetIface {
	GTypeInterface parent_iface;
	gboolean (*Add) (SystemCollectionsGenericISet* self, gconstpointer value);
	void (*ExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*IntersectWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*Overlaps) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*SetEquals) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*SymmetricExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*UnionWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
};

struct _SystemCollectionsGenericIReadOnlyCollectionIface {
	GTypeInterface parent_iface;
	gint (*get_size) (SystemCollectionsGenericIReadOnlyCollection* self);
	gint (*get_Count) (SystemCollectionsGenericIReadOnlyCollection* self);
};

struct _SystemCollectionsGenericIReadOnlyDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*ContainsKey) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericIEnumerable* (*get_Keys) (SystemCollectionsGenericIReadOnlyDictionary* self);
	SystemCollectionsGenericIEnumerable* (*get_Values) (SystemCollectionsGenericIReadOnlyDictionary* self);
};

struct _SystemCollectionsGenericIReadOnlyListIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericIReadOnlyList* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericIReadOnlyList* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericIReadOnlyList* self);
};

struct _SystemCollectionsGenericKeyValuePair {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsGenericKeyValuePairPrivate * priv;
};

struct _SystemCollectionsGenericKeyValuePairClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsGenericKeyValuePair *self);
};

struct _SystemCollectionsGenericDictionaryEntry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsGenericDictionaryEntryPrivate * priv;
};

struct _SystemCollectionsGenericDictionaryEntryClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsGenericDictionaryEntry *self);
};

typedef gboolean (*SystemCollectionsGenericCompareDataFunc) (gconstpointer a, gconstpointer b, void* user_data);
struct _SystemCollectionsGenericComparer {
	GObject parent_instance;
	SystemCollectionsGenericComparerPrivate * priv;
};

struct _SystemCollectionsGenericComparerClass {
	GObjectClass parent_class;
	gint (*Compare) (SystemCollectionsGenericComparer* self, gconstpointer x, gconstpointer y);
};

typedef gint (*SystemComparison) (gconstpointer x, gconstpointer y, void* user_data);
typedef guint (*SystemCollectionsGenericHashDataFunc) (gconstpointer v, void* user_data);
typedef gboolean (*SystemCollectionsGenericEqualDataFunc) (gconstpointer a, gconstpointer b, void* user_data);
struct _SystemCollectionsGenericEqualityComparer {
	GObject parent_instance;
	SystemCollectionsGenericEqualityComparerPrivate * priv;
};

struct _SystemCollectionsGenericEqualityComparerClass {
	GObjectClass parent_class;
	gboolean (*Equals) (SystemCollectionsGenericEqualityComparer* self, gconstpointer x, gconstpointer y);
	guint (*GetHashCode) (SystemCollectionsGenericEqualityComparer* self, gconstpointer obj);
};

struct _SystemCollectionsGenericAbstractDictionary {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericAbstractDictionaryPrivate * priv;
};

struct _SystemCollectionsGenericAbstractDictionaryClass {
	SystemLinqEnumerableClass parent_class;
	gpointer (*get) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key);
	void (*set) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer item);
	GType (*get_element_type) (SystemCollectionsGenericAbstractDictionary* self);
	void (*Add) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer value);
	void (*Clear) (SystemCollectionsGenericAbstractDictionary* self);
	gboolean (*Contains) (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair* keyValuePair);
	gboolean (*contains) (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair* keyValuePair);
	gboolean (*ContainsKey) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key);
	gboolean (*ContainsValue) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer value);
	void (*CopyTo) (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair** array, int array_length1, gint index);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericAbstractDictionary* self);
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericAbstractDictionary* self);
	void (*OnDeserialization) (SystemCollectionsGenericAbstractDictionary* self, GObject* sender);
	gboolean (*Remove) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*TryGetValue) (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gpointer* value);
	gint (*get_size) (SystemCollectionsGenericAbstractDictionary* self);
	gint (*get_Count) (SystemCollectionsGenericAbstractDictionary* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsGenericAbstractDictionary* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericAbstractDictionary* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsGenericAbstractDictionary* self);
	SystemCollectionsGenericICollection* (*get_Keys) (SystemCollectionsGenericAbstractDictionary* self);
	GObject* (*get_SyncRoot) (SystemCollectionsGenericAbstractDictionary* self);
	SystemCollectionsGenericICollection* (*get_Values) (SystemCollectionsGenericAbstractDictionary* self);
};

struct _SystemCollectionsGenericDictionary {
	SystemCollectionsGenericAbstractDictionary parent_instance;
	SystemCollectionsGenericDictionaryPrivate * priv;
	gint _array_size;
	gint _nnodes;
	SystemCollectionsGenericNode** _nodes;
	gint _nodes_length1;
	gint __nodes_size_;
	gint _stamp;
	GObject* _syncRoot;
};

struct _SystemCollectionsGenericDictionaryClass {
	SystemCollectionsGenericAbstractDictionaryClass parent_class;
};

typedef gboolean (*SystemPredicate) (gconstpointer obj, void* user_data);
typedef void (*SystemAction) (gconstpointer obj, void* user_data);
struct _SystemCollectionsGenericAbstractList {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericAbstractListPrivate * priv;
};

struct _SystemCollectionsGenericAbstractListClass {
	SystemLinqEnumerableClass parent_class;
	GType (*get_element_type) (SystemCollectionsGenericAbstractList* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericAbstractList* self);
	gboolean (*contains) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	gint (*IndexOf) (SystemCollectionsGenericAbstractList* self, gconstpointer item, gint startIndex);
	gpointer (*get) (SystemCollectionsGenericAbstractList* self, gint index);
	void (*set) (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
	void (*Add) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	void (*AddRange) (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIEnumerable* collection);
	SystemCollectionsObjectModelReadOnlyCollection* (*AsReadOnly) (SystemCollectionsGenericAbstractList* self);
	gint (*BinarySearch) (SystemCollectionsGenericAbstractList* self, gint index, gint count, gconstpointer item, SystemCollectionsGenericIComparer* comparer);
	void (*Clear) (SystemCollectionsGenericAbstractList* self);
	void (*CopyTo) (SystemCollectionsGenericAbstractList* self, gpointer* array, int array_length1, gint arrayIndex);
	gboolean (*Exists) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	gpointer (*Find) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	SystemCollectionsGenericList* (*FindAll) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	gint (*FindIndex) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	gpointer (*FindLast) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	gint (*FindLastIndex) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	void (*ForEach) (SystemCollectionsGenericAbstractList* self, SystemAction action, void* action_target);
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericAbstractList* self);
	SystemCollectionsGenericList* (*GetRange) (SystemCollectionsGenericAbstractList* self, gint index, gint count);
	void (*InsertRange) (SystemCollectionsGenericAbstractList* self, gint index, SystemCollectionsGenericIEnumerable* collection);
	void (*Insert) (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
	gint (*LastIndexOf) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	gboolean (*Remove) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericAbstractList* self, gint index);
	gint (*RemoveAll) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	void (*RemoveRange) (SystemCollectionsGenericAbstractList* self, gint index, gint count);
	void (*Reverse) (SystemCollectionsGenericAbstractList* self);
	void (*Sort) (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIComparer* comparer);
	gpointer* (*ToArray) (SystemCollectionsGenericAbstractList* self, int* result_length1);
	void (*TrimExcess) (SystemCollectionsGenericAbstractList* self);
	gboolean (*TrueForAll) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	gint (*get_size) (SystemCollectionsGenericAbstractList* self);
	gint (*get_Capacity) (SystemCollectionsGenericAbstractList* self);
	void (*set_Capacity) (SystemCollectionsGenericAbstractList* self, gint value);
	gint (*get_Count) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsGenericAbstractList* self);
	GObject* (*get_SyncRoot) (SystemCollectionsGenericAbstractList* self);
};

struct _SystemCollectionsGenericList {
	SystemCollectionsGenericAbstractList parent_instance;
	SystemCollectionsGenericListPrivate * priv;
	gpointer* _items;
	gint _items_length1;
	gint __items_size_;
	gint _size;
};

struct _SystemCollectionsGenericListClass {
	SystemCollectionsGenericAbstractListClass parent_class;
};

struct _SystemCollectionsGenericQueue {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericQueuePrivate * priv;
};

struct _SystemCollectionsGenericQueueClass {
	SystemLinqEnumerableClass parent_class;
};

struct _SystemCollectionsGenericQueueEnumerator {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericQueueEnumeratorPrivate * priv;
};

struct _SystemCollectionsGenericQueueEnumeratorClass {
	SystemLinqEnumerableClass parent_class;
};

struct _SystemCollectionsGenericStack {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericStackPrivate * priv;
};

struct _SystemCollectionsGenericStackClass {
	SystemLinqEnumerableClass parent_class;
	gpointer (*get) (SystemCollectionsGenericStack* self, gint item);
};

struct _SystemCollectionsGenericStackEnumerator {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsGenericStackEnumeratorPrivate * priv;
};

struct _SystemCollectionsGenericStackEnumeratorClass {
	SystemLinqEnumerableClass parent_class;
};

struct _SystemCollectionsObjectModelReadOnlyCollection {
	SystemLinqEnumerable parent_instance;
	SystemCollectionsObjectModelReadOnlyCollectionPrivate * priv;
};

struct _SystemCollectionsObjectModelReadOnlyCollectionClass {
	SystemLinqEnumerableClass parent_class;
	gint (*get_size) (SystemCollectionsObjectModelReadOnlyCollection* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsObjectModelReadOnlyCollection* self);
};

struct _SystemRuntimeSerializationISerializableIface {
	GTypeInterface parent_iface;
};

struct _SystemRuntimeSerializationIDeserializationCallbackIface {
	GTypeInterface parent_iface;
};

struct _SystemIFormatProviderIface {
	GTypeInterface parent_iface;
	Object* (*GetFormat) (SystemIFormatProvider* self, GType formatType);
};

struct _SystemNullable {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemNullablePrivate * priv;
	gpointer value;
};

struct _SystemNullableClass {
	GTypeClass parent_class;
	void (*finalize) (SystemNullable *self);
};

struct _Object {
	GObject parent_instance;
	ObjectPrivate * priv;
};

struct _ObjectClass {
	GObjectClass parent_class;
};

struct _Systemobject {
	Object parent_instance;
	SystemobjectPrivate * priv;
};

struct _SystemobjectClass {
	ObjectClass parent_class;
};

struct _SystemString {
	int dummy;
};

typedef enum  {
	SYSTEM_ARRAY_TYPE_MISMATCH_EXCEPTION_ARRAY_TYPE_MISMATCH
} SystemArrayTypeMismatchException;
#define SYSTEM_ARRAY_TYPE_MISMATCH_EXCEPTION system_array_type_mismatch_exception_quark ()
typedef enum  {
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_INDEX,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_VALUE,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_NEED_NON_NEG_NUM,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_BEGIN_INDEX_NOT_NEGATIVE,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_LENGTH_NOT_NEGATIVE,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_NEGATIVE_CAPACITY,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_NEGATIVE_LENGTH,
	SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION_SMALL_CAPACITY
} SystemArgumentOutOfRangeException;
#define SYSTEM_ARGUMENT_OUT_OF_RANGE_EXCEPTION system_argument_out_of_range_exception_quark ()
typedef enum  {
	SYSTEM_ERROR_NOELEMENTS
} SystemError;
#define SYSTEM_ERROR system_error_quark ()
typedef enum  {
	SYSTEM_ARGUMENT_EXCEPTION_NULL,
	SYSTEM_ARGUMENT_EXCEPTION_INVALID_OFFSET_LENGTH,
	SYSTEM_ARGUMENT_EXCEPTION_NOT_FOUND,
	SYSTEM_ARGUMENT_EXCEPTION_IMPLEMENT_ICOMPARABLE,
	SYSTEM_ARGUMENT_EXCEPTION_INVALID_ARRAY_TYPE,
	SYSTEM_ARGUMENT_EXCEPTION_ADDING_DUPLICATE
} SystemArgumentException;
#define SYSTEM_ARGUMENT_EXCEPTION system_argument_exception_quark ()
typedef enum  {
	SYSTEM_ARGUMENT_NULL_EXCEPTION_POINTER,
	SYSTEM_ARGUMENT_NULL_EXCEPTION_VALUE,
	SYSTEM_ARGUMENT_NULL_EXCEPTION_STRING
} SystemArgumentNullException;
#define SYSTEM_ARGUMENT_NULL_EXCEPTION system_argument_null_exception_quark ()
typedef enum  {
	SYSTEM_INVALID_OPERATION_EXCEPTION_ENUM_NOT_STARTED,
	SYSTEM_INVALID_OPERATION_EXCEPTION_ENUM_ENDED,
	SYSTEM_INVALID_OPERATION_EXCEPTION_NOT_IMPLEMENTED,
	SYSTEM_INVALID_OPERATION_EXCEPTION_COMPARE_FAILED
} SystemInvalidOperationException;
#define SYSTEM_INVALID_OPERATION_EXCEPTION system_invalid_operation_exception_quark ()
typedef enum  {
	SYSTEM_NOT_SUPPORTED_EXCEPTION_RANGE_COLLECTION,
	SYSTEM_NOT_SUPPORTED_EXCEPTION_FIXED_SIZE_COLLECTION,
	SYSTEM_NOT_SUPPORTED_EXCEPTION_READ_ONLY_COLLECTION,
	SYSTEM_NOT_SUPPORTED_EXCEPTION_SORTED_LIST_NESTED_WRITE,
	SYSTEM_NOT_SUPPORTED_EXCEPTION_KEY_COLLECTION_SET
} SystemNotSupportedException;
#define SYSTEM_NOT_SUPPORTED_EXCEPTION system_not_supported_exception_quark ()
typedef enum  {
	SYSTEM_SERIALIZATION_EXCEPTION_SERIALIZATION
} SystemSerializationException;
#define SYSTEM_SERIALIZATION_EXCEPTION system_serialization_exception_quark ()
struct _SystemIDisposableIface {
	GTypeInterface parent_iface;
	void (*Dispose) (SystemIDisposable* self);
};

struct _SystemIComparableIface {
	GTypeInterface parent_iface;
	gint (*CompareTo) (SystemIComparable* self, gconstpointer other);
};

struct _SystemIEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemIEquatable* self, gconstpointer other);
};

struct _SystemIFormattableIface {
	GTypeInterface parent_iface;
};

struct _SystemICustomFormatterIface {
	GTypeInterface parent_iface;
};

struct _SystemICloneableIface {
	GTypeInterface parent_iface;
	GObject* (*Clone) (SystemICloneable* self);
};

typedef enum  {
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_CurrentCulture = 0,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_CurrentCultureIgnoreCase = 1,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_InvariantCulture = 2,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_InvariantCultureIgnoreCase = 3,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_Ordinal = 4,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_OrdinalIgnoreCase = 5
} SystemGlobalizationCultureInfoStringComparison;


gpointer system_text_regular_expressions_capture_ref (gpointer instance);
void system_text_regular_expressions_capture_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_capture (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_capture (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_capture (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_capture (const GValue* value);
GType system_text_regular_expressions_capture_get_type (void) G_GNUC_CONST;
gchar* system_text_regular_expressions_capture_ToString (SystemTextRegularExpressionsCapture* self);
gint system_text_regular_expressions_capture_get_Index (SystemTextRegularExpressionsCapture* self);
gint system_text_regular_expressions_capture_get_Length (SystemTextRegularExpressionsCapture* self);
gchar* system_text_regular_expressions_capture_get_Value (SystemTextRegularExpressionsCapture* self);
GType object_get_type (void) G_GNUC_CONST;
GType system_collections_icollection_get_type (void) G_GNUC_CONST;
GType system_collections_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_ienumerable_get_type (void) G_GNUC_CONST;
gpointer system_text_regular_expressions_capture_collection_ref (gpointer instance);
void system_text_regular_expressions_capture_collection_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_capture_collection (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_capture_collection (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_capture_collection (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_capture_collection (const GValue* value);
GType system_text_regular_expressions_capture_collection_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsCapture* system_text_regular_expressions_capture_collection_get (SystemTextRegularExpressionsCaptureCollection* self, gint i);
GType system_text_regular_expressions_group_get_type (void) G_GNUC_CONST;
gboolean system_text_regular_expressions_group_get_Success (SystemTextRegularExpressionsGroup* self);
SystemTextRegularExpressionsCaptureCollection* system_text_regular_expressions_group_get_Captures (SystemTextRegularExpressionsGroup* self);
gpointer system_text_regular_expressions_group_collection_ref (gpointer instance);
void system_text_regular_expressions_group_collection_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_group_collection (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_group_collection (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_group_collection (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_group_collection (const GValue* value);
GType system_text_regular_expressions_group_collection_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_match_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_group_collection_new (SystemTextRegularExpressionsMatch* match);
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_group_collection_construct (GType object_type, SystemTextRegularExpressionsMatch* match);
SystemTextRegularExpressionsGroup* system_text_regular_expressions_group_collection_get (SystemTextRegularExpressionsGroupCollection* self, gint groupnum);
gpointer system_text_regular_expressions_static_regex_ref (gpointer instance);
void system_text_regular_expressions_static_regex_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_static_regex (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_static_regex (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_static_regex (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_static_regex (const GValue* value);
GType system_text_regular_expressions_static_regex_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_regex_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_new (GMatchInfo* matchinfo);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_construct (GType object_type, GMatchInfo* matchinfo);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_NextMatch (SystemTextRegularExpressionsMatch* self);
gchar* system_text_regular_expressions_match_Result (SystemTextRegularExpressionsMatch* self, const gchar* replacement);
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_match_get_Groups (SystemTextRegularExpressionsMatch* self);
gpointer system_text_regular_expressions_match_collection_ref (gpointer instance);
void system_text_regular_expressions_match_collection_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_match_collection (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_match_collection (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_match_collection (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_match_collection (const GValue* value);
GType system_text_regular_expressions_match_collection_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_match_collection_new (GRegex* regex, const gchar* input, gint beginning, gint length, gint startat);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_match_collection_construct (GType object_type, GRegex* regex, const gchar* input, gint beginning, gint length, gint startat);
GType system_text_regular_expressions_regex_options_get_type (void) G_GNUC_CONST;
gboolean system_text_regular_expressions_static_regex_IsMatch (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_static_regex_Match (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_static_regex_Matches (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
gchar* system_text_regular_expressions_static_regex_Replace (const gchar* input, const gchar* pattern, const gchar* replacement, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
gchar** system_text_regular_expressions_static_regex_Split (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout, int* result_length1);
gchar* system_text_regular_expressions_static_regex_Escape (const gchar* str);
gchar* system_text_regular_expressions_static_regex_Unescape (const gchar* str);
GRegexCompileFlags system_text_regular_expressions_static_regex_ConvertOptions (SystemTextRegularExpressionsRegexOptions options);
SystemTextRegularExpressionsStaticRegex* system_text_regular_expressions_static_regex_construct (GType object_type);
extern GTimeSpan system_text_regular_expressions_regex_InfiniteMatchTimeout;
SystemTextRegularExpressionsRegex* system_text_regular_expressions_regex_new (const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
SystemTextRegularExpressionsRegex* system_text_regular_expressions_regex_construct (GType object_type, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
gchar* system_text_regular_expressions_regex_ToString (SystemTextRegularExpressionsRegex* self);
gchar** system_text_regular_expressions_regex_GetGroupNames (SystemTextRegularExpressionsRegex* self, int* result_length1);
gint* system_text_regular_expressions_regex_GetGroupNumbers (SystemTextRegularExpressionsRegex* self, int* result_length1);
gchar* system_text_regular_expressions_regex_GroupNameFromNumber (SystemTextRegularExpressionsRegex* self, gint i);
gint system_text_regular_expressions_regex_GroupNumberFromName (SystemTextRegularExpressionsRegex* self, const gchar* name);
gboolean system_text_regular_expressions_regex_IsMatch (SystemTextRegularExpressionsRegex* self, const gchar* input, gint startat);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_regex_Match (SystemTextRegularExpressionsRegex* self, const gchar* input, gint beginning, gint length);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_regex_Matches (SystemTextRegularExpressionsRegex* self, const gchar* input, gint startat);
gchar* system_text_regular_expressions_regex_Replace (SystemTextRegularExpressionsRegex* self, const gchar* input, const gchar* replacement, gint count, gint startat);
gchar** system_text_regular_expressions_regex_Split (SystemTextRegularExpressionsRegex* self, const gchar* input, gint count, gint startat, int* result_length1);
gint system_text_regular_expressions_regex_get_CacheSize (void);
void system_text_regular_expressions_regex_set_CacheSize (gint value);
SystemTextRegularExpressionsRegexOptions system_text_regular_expressions_regex_get_Options (SystemTextRegularExpressionsRegex* self);
GTimeSpan system_text_regular_expressions_regex_get_MatchTimeout (SystemTextRegularExpressionsRegex* self);
gboolean system_text_regular_expressions_regex_get_RightToLeft (SystemTextRegularExpressionsRegex* self);
GQuark system_text_regular_expressions_regex_match_timeout_exception_quark (void);
void system_collections_icollection_CopyTo (SystemCollectionsICollection* self, Object** array, int array_length1, gint arrayIndex);
gint system_collections_icollection_get_size (SystemCollectionsICollection* self);
gint system_collections_icollection_get_Count (SystemCollectionsICollection* self);
gboolean system_collections_icollection_get_IsSynchronized (SystemCollectionsICollection* self);
Object* system_collections_icollection_get_SyncRoot (SystemCollectionsICollection* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_iterator (SystemCollectionsIEnumerable* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_GetEnumerator (SystemCollectionsIEnumerable* self);
gboolean system_collections_ienumerator_next (SystemCollectionsIEnumerator* self);
gboolean system_collections_ienumerator_MoveNext (SystemCollectionsIEnumerator* self);
Object* system_collections_ienumerator_get (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_Reset (SystemCollectionsIEnumerator* self);
Object* system_collections_ienumerator_get_Current (SystemCollectionsIEnumerator* self);
GType system_linq_enumerable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerable_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericIEnumerable* system_linq_enumerable_Where (SystemLinqEnumerable* self, SystemFunc predicate, void* predicate_target);
SystemLinqEnumerable* system_linq_enumerable_construct (GType object_type, GType tsource_type, GBoxedCopyFunc tsource_dup_func, GDestroyNotify tsource_destroy_func);
GType system_collections_generic_icollection_get_type (void) G_GNUC_CONST;
void system_collections_generic_icollection_Add (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_Clear (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_contains (SystemCollectionsGenericICollection* self, gconstpointer item);
gboolean system_collections_generic_icollection_Contains (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_CopyTo (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
gboolean system_collections_generic_icollection_Remove (SystemCollectionsGenericICollection* self, gconstpointer item);
gint system_collections_generic_icollection_get_size (SystemCollectionsGenericICollection* self);
gint system_collections_generic_icollection_get_Count (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_get_IsReadOnly (SystemCollectionsGenericICollection* self);
GType system_collections_generic_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_generic_icomparer_Compare (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
GType system_collections_generic_idictionary_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_idictionary_get (SystemCollectionsGenericIDictionary* self, gconstpointer key);
void system_collections_generic_idictionary_set (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
void system_collections_generic_idictionary_Add (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_idictionary_ContainsKey (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_Remove (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_idictionary_TryGetValue (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Keys (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Values (SystemCollectionsGenericIDictionary* self);
gpointer system_collections_generic_dictionary_entry_ref (gpointer instance);
void system_collections_generic_dictionary_entry_unref (gpointer instance);
GParamSpec* system_collections_generic_param_spec_dictionary_entry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_generic_value_set_dictionary_entry (GValue* value, gpointer v_object);
void system_collections_generic_value_take_dictionary_entry (GValue* value, gpointer v_object);
gpointer system_collections_generic_value_get_dictionary_entry (const GValue* value);
GType system_collections_generic_dictionary_entry_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_key_value_pair_ref (gpointer instance);
void system_collections_generic_key_value_pair_unref (gpointer instance);
GParamSpec* system_collections_generic_param_spec_key_value_pair (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_generic_value_set_key_value_pair (GValue* value, gpointer v_object);
void system_collections_generic_value_take_key_value_pair (GValue* value, gpointer v_object);
gpointer system_collections_generic_value_get_key_value_pair (const GValue* value);
GType system_collections_generic_key_value_pair_get_type (void) G_GNUC_CONST;
GType system_collections_generic_idictionary_enumerator_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_idictionary_enumerator_get_Key (SystemCollectionsGenericIDictionaryEnumerator* self);
gpointer system_collections_generic_idictionary_enumerator_get_Value (SystemCollectionsGenericIDictionaryEnumerator* self);
SystemCollectionsGenericDictionaryEntry* system_collections_generic_idictionary_enumerator_get_Entry (SystemCollectionsGenericIDictionaryEnumerator* self);
SystemCollectionsGenericKeyValuePair* system_collections_generic_idictionary_enumerator_get_Current (SystemCollectionsGenericIDictionaryEnumerator* self);
GType system_collections_generic_ienumerable_get_element_type (SystemCollectionsGenericIEnumerable* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_iterator (SystemCollectionsGenericIEnumerable* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_GetEnumerator (SystemCollectionsGenericIEnumerable* self);
gpointer system_collections_generic_ienumerator_get (SystemCollectionsGenericIEnumerator* self);
gboolean system_collections_generic_ienumerator_MoveNext (SystemCollectionsGenericIEnumerator* self);
gboolean system_collections_generic_ienumerator_next (SystemCollectionsGenericIEnumerator* self);
void system_collections_generic_ienumerator_Reset (SystemCollectionsGenericIEnumerator* self);
gpointer system_collections_generic_ienumerator_get_Current (SystemCollectionsGenericIEnumerator* self);
GType system_collections_generic_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iequality_comparer_Equals (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
guint system_collections_generic_iequality_comparer_GetHashCode (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
GType system_collections_generic_ilist_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_ilist_get (SystemCollectionsGenericIList* self, gint index);
void system_collections_generic_ilist_set (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
gint system_collections_generic_ilist_IndexOf (SystemCollectionsGenericIList* self, gconstpointer item, gint index);
void system_collections_generic_ilist_Insert (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
void system_collections_generic_ilist_RemoveAt (SystemCollectionsGenericIList* self, gint index);
GType system_collections_generic_iset_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iset_Add (SystemCollectionsGenericISet* self, gconstpointer value);
void system_collections_generic_iset_ExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_IntersectWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_Overlaps (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_SetEquals (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_SymmetricExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_UnionWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
GType system_collections_generic_iread_only_collection_get_type (void) G_GNUC_CONST;
gint system_collections_generic_iread_only_collection_get_size (SystemCollectionsGenericIReadOnlyCollection* self);
gint system_collections_generic_iread_only_collection_get_Count (SystemCollectionsGenericIReadOnlyCollection* self);
GType system_collections_generic_iread_only_dictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iread_only_dictionary_ContainsKey (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
gboolean system_collections_generic_iread_only_dictionary_TryGetValue (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Keys (SystemCollectionsGenericIReadOnlyDictionary* self);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Values (SystemCollectionsGenericIReadOnlyDictionary* self);
GType system_collections_generic_iread_only_list_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
gchar* system_collections_generic_key_value_pair_ToString (SystemCollectionsGenericKeyValuePair* self, GString* s);
gconstpointer system_collections_generic_key_value_pair_get_Key (SystemCollectionsGenericKeyValuePair* self);
gconstpointer system_collections_generic_key_value_pair_get_Value (SystemCollectionsGenericKeyValuePair* self);
SystemCollectionsGenericDictionaryEntry* system_collections_generic_dictionary_entry_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
SystemCollectionsGenericDictionaryEntry* system_collections_generic_dictionary_entry_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
gconstpointer system_collections_generic_dictionary_entry_get_Key (SystemCollectionsGenericDictionaryEntry* self);
void system_collections_generic_dictionary_entry_set_Key (SystemCollectionsGenericDictionaryEntry* self, gconstpointer value);
gconstpointer system_collections_generic_dictionary_entry_get_Value (SystemCollectionsGenericDictionaryEntry* self);
void system_collections_generic_dictionary_entry_set_Value (SystemCollectionsGenericDictionaryEntry* self, gconstpointer value);
GType system_collections_generic_comparer_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericComparer* system_collections_generic_comparer_Default (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
SystemCollectionsGenericComparer* system_collections_generic_comparer_Create (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemComparison comparison, void* comparison_target);
gint system_collections_generic_comparer_Compare (SystemCollectionsGenericComparer* self, gconstpointer x, gconstpointer y);
SystemCollectionsGenericComparer* system_collections_generic_comparer_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
GType system_collections_generic_equality_comparer_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericEqualityComparer* system_collections_generic_equality_comparer_Default (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
gboolean system_collections_generic_equality_comparer_Equals (SystemCollectionsGenericEqualityComparer* self, gconstpointer x, gconstpointer y);
guint system_collections_generic_equality_comparer_GetHashCode (SystemCollectionsGenericEqualityComparer* self, gconstpointer obj);
SystemCollectionsGenericEqualityComparer* system_collections_generic_equality_comparer_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
GType system_collections_generic_abstract_dictionary_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_abstract_dictionary_get (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key);
void system_collections_generic_abstract_dictionary_set (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer item);
GType system_collections_generic_abstract_dictionary_get_element_type (SystemCollectionsGenericAbstractDictionary* self);
void system_collections_generic_abstract_dictionary_Add (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer value);
void system_collections_generic_abstract_dictionary_Clear (SystemCollectionsGenericAbstractDictionary* self);
gboolean system_collections_generic_abstract_dictionary_Contains (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair* keyValuePair);
gboolean system_collections_generic_abstract_dictionary_contains (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair* keyValuePair);
gboolean system_collections_generic_abstract_dictionary_ContainsKey (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key);
gboolean system_collections_generic_abstract_dictionary_ContainsValue (SystemCollectionsGenericAbstractDictionary* self, gconstpointer value);
void system_collections_generic_abstract_dictionary_CopyTo (SystemCollectionsGenericAbstractDictionary* self, SystemCollectionsGenericKeyValuePair** array, int array_length1, gint index);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_dictionary_iterator (SystemCollectionsGenericAbstractDictionary* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_dictionary_GetEnumerator (SystemCollectionsGenericAbstractDictionary* self);
void system_collections_generic_abstract_dictionary_OnDeserialization (SystemCollectionsGenericAbstractDictionary* self, GObject* sender);
gboolean system_collections_generic_abstract_dictionary_Remove (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_abstract_dictionary_TryGetValue (SystemCollectionsGenericAbstractDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericAbstractDictionary* system_collections_generic_abstract_dictionary_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func);
gint system_collections_generic_abstract_dictionary_get_size (SystemCollectionsGenericAbstractDictionary* self);
gint system_collections_generic_abstract_dictionary_get_Count (SystemCollectionsGenericAbstractDictionary* self);
gboolean system_collections_generic_abstract_dictionary_get_IsFixedSize (SystemCollectionsGenericAbstractDictionary* self);
gboolean system_collections_generic_abstract_dictionary_get_IsReadOnly (SystemCollectionsGenericAbstractDictionary* self);
gboolean system_collections_generic_abstract_dictionary_get_IsSynchronized (SystemCollectionsGenericAbstractDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_abstract_dictionary_get_Keys (SystemCollectionsGenericAbstractDictionary* self);
GObject* system_collections_generic_abstract_dictionary_get_SyncRoot (SystemCollectionsGenericAbstractDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_abstract_dictionary_get_Values (SystemCollectionsGenericAbstractDictionary* self);
GType system_collections_generic_dictionary_get_type (void) G_GNUC_CONST;
void system_collections_generic_node_free (SystemCollectionsGenericNode* self);
SystemCollectionsGenericDictionary* system_collections_generic_dictionary_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, SystemCollectionsGenericIEqualityComparer* key_equal_func);
SystemCollectionsGenericDictionary* system_collections_generic_dictionary_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, SystemCollectionsGenericIEqualityComparer* key_equal_func);
SystemCollectionsGenericDictionary* system_collections_generic_dictionary_new_WithDictionary (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, SystemCollectionsGenericIDictionary* dictionary, SystemCollectionsGenericIEqualityComparer* comparer);
SystemCollectionsGenericDictionary* system_collections_generic_dictionary_construct_WithDictionary (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, SystemCollectionsGenericIDictionary* dictionary, SystemCollectionsGenericIEqualityComparer* comparer);
GType system_collections_generic_abstract_list_get_type (void) G_GNUC_CONST;
GType system_collections_object_model_read_only_collection_get_type (void) G_GNUC_CONST;
GType system_collections_generic_list_get_type (void) G_GNUC_CONST;
GType system_collections_generic_abstract_list_get_element_type (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_list_iterator (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_contains (SystemCollectionsGenericAbstractList* self, gconstpointer item);
gint system_collections_generic_abstract_list_IndexOf (SystemCollectionsGenericAbstractList* self, gconstpointer item, gint startIndex);
gpointer system_collections_generic_abstract_list_get (SystemCollectionsGenericAbstractList* self, gint index);
void system_collections_generic_abstract_list_set (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
void system_collections_generic_abstract_list_Add (SystemCollectionsGenericAbstractList* self, gconstpointer item);
void system_collections_generic_abstract_list_AddRange (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIEnumerable* collection);
SystemCollectionsObjectModelReadOnlyCollection* system_collections_generic_abstract_list_AsReadOnly (SystemCollectionsGenericAbstractList* self);
gint system_collections_generic_abstract_list_BinarySearch (SystemCollectionsGenericAbstractList* self, gint index, gint count, gconstpointer item, SystemCollectionsGenericIComparer* comparer);
void system_collections_generic_abstract_list_Clear (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_CopyTo (SystemCollectionsGenericAbstractList* self, gpointer* array, int array_length1, gint arrayIndex);
gboolean system_collections_generic_abstract_list_Exists (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
gpointer system_collections_generic_abstract_list_Find (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
SystemCollectionsGenericList* system_collections_generic_abstract_list_FindAll (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
gint system_collections_generic_abstract_list_FindIndex (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
gpointer system_collections_generic_abstract_list_FindLast (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
gint system_collections_generic_abstract_list_FindLastIndex (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
void system_collections_generic_abstract_list_ForEach (SystemCollectionsGenericAbstractList* self, SystemAction action, void* action_target);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_list_GetEnumerator (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericList* system_collections_generic_abstract_list_GetRange (SystemCollectionsGenericAbstractList* self, gint index, gint count);
void system_collections_generic_abstract_list_InsertRange (SystemCollectionsGenericAbstractList* self, gint index, SystemCollectionsGenericIEnumerable* collection);
void system_collections_generic_abstract_list_Insert (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
gint system_collections_generic_abstract_list_LastIndexOf (SystemCollectionsGenericAbstractList* self, gconstpointer item);
gboolean system_collections_generic_abstract_list_Remove (SystemCollectionsGenericAbstractList* self, gconstpointer item);
void system_collections_generic_abstract_list_RemoveAt (SystemCollectionsGenericAbstractList* self, gint index);
gint system_collections_generic_abstract_list_RemoveAll (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
void system_collections_generic_abstract_list_RemoveRange (SystemCollectionsGenericAbstractList* self, gint index, gint count);
void system_collections_generic_abstract_list_Reverse (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_Sort (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIComparer* comparer);
gpointer* system_collections_generic_abstract_list_ToArray (SystemCollectionsGenericAbstractList* self, int* result_length1);
void system_collections_generic_abstract_list_TrimExcess (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_TrueForAll (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
SystemCollectionsGenericAbstractList* system_collections_generic_abstract_list_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
gint system_collections_generic_abstract_list_get_size (SystemCollectionsGenericAbstractList* self);
gint system_collections_generic_abstract_list_get_Capacity (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_set_Capacity (SystemCollectionsGenericAbstractList* self, gint value);
gint system_collections_generic_abstract_list_get_Count (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsFixedSize (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsReadOnly (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsSynchronized (SystemCollectionsGenericAbstractList* self);
GObject* system_collections_generic_abstract_list_get_SyncRoot (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericList* system_collections_generic_list_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* enumerable);
SystemCollectionsGenericList* system_collections_generic_list_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* enumerable);
SystemCollectionsGenericList* system_collections_generic_list_new_WithCapacity (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint defaultCapacity);
SystemCollectionsGenericList* system_collections_generic_list_construct_WithCapacity (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint defaultCapacity);
GType system_collections_generic_queue_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericQueue* system_collections_generic_queue_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* collection);
SystemCollectionsGenericQueue* system_collections_generic_queue_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* collection);
gpointer system_collections_generic_queue_get (SystemCollectionsGenericQueue* self, gint item);
void system_collections_generic_queue_Enqueue (SystemCollectionsGenericQueue* self, gconstpointer item);
gpointer system_collections_generic_queue_Dequeue (SystemCollectionsGenericQueue* self);
gpointer system_collections_generic_queue_Peek (SystemCollectionsGenericQueue* self);
gpointer* system_collections_generic_queue_ToArray (SystemCollectionsGenericQueue* self, int* result_length1);
void system_collections_generic_queue_TrimExcess (SystemCollectionsGenericQueue* self);
gboolean system_collections_generic_queue_get_IsSynchronized (SystemCollectionsGenericQueue* self);
GObject* system_collections_generic_queue_get_SyncRoot (SystemCollectionsGenericQueue* self);
GType system_collections_generic_queue_enumerator_get_type (void) G_GNUC_CONST;
void system_collections_generic_queue_enumerator_Dispose (SystemCollectionsGenericQueueEnumerator* self);
GType system_collections_generic_stack_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericStack* system_collections_generic_stack_new_WithCapacity (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint capacity);
SystemCollectionsGenericStack* system_collections_generic_stack_construct_WithCapacity (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint capacity);
SystemCollectionsGenericStack* system_collections_generic_stack_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* collection);
SystemCollectionsGenericStack* system_collections_generic_stack_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* collection);
gpointer system_collections_generic_stack_get (SystemCollectionsGenericStack* self, gint item);
void system_collections_generic_stack_TrimExcess (SystemCollectionsGenericStack* self);
gpointer system_collections_generic_stack_Peek (SystemCollectionsGenericStack* self);
gpointer system_collections_generic_stack_Pop (SystemCollectionsGenericStack* self);
void system_collections_generic_stack_Push (SystemCollectionsGenericStack* self, gconstpointer item);
gpointer* system_collections_generic_stack_ToArray (SystemCollectionsGenericStack* self, int* result_length1);
gboolean system_collections_generic_stack_get_IsSynchronized (SystemCollectionsGenericStack* self);
GObject* system_collections_generic_stack_get_SyncRoot (SystemCollectionsGenericStack* self);
GType system_collections_generic_stack_enumerator_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericStackEnumerator* system_collections_generic_stack_enumerator_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericStack* stack);
SystemCollectionsGenericStackEnumerator* system_collections_generic_stack_enumerator_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericStack* stack);
void system_collections_generic_stack_enumerator_Dispose (SystemCollectionsGenericStackEnumerator* self);
SystemCollectionsObjectModelReadOnlyCollection* system_collections_object_model_read_only_collection_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIList* list);
SystemCollectionsObjectModelReadOnlyCollection* system_collections_object_model_read_only_collection_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIList* list);
gpointer system_collections_object_model_read_only_collection_get (SystemCollectionsObjectModelReadOnlyCollection* self, gint index);
void system_collections_object_model_read_only_collection_set (SystemCollectionsObjectModelReadOnlyCollection* self, gint index, gconstpointer value);
gint system_collections_object_model_read_only_collection_IndexOf (SystemCollectionsObjectModelReadOnlyCollection* self, gconstpointer value, gint index);
void system_collections_object_model_read_only_collection_Insert (SystemCollectionsObjectModelReadOnlyCollection* self, gint index, gconstpointer value);
void system_collections_object_model_read_only_collection_RemoveAt (SystemCollectionsObjectModelReadOnlyCollection* self, gint index);
gint system_collections_object_model_read_only_collection_get_size (SystemCollectionsObjectModelReadOnlyCollection* self);
SystemCollectionsGenericIList* system_collections_object_model_read_only_collection_get_Items (SystemCollectionsObjectModelReadOnlyCollection* self);
gboolean system_collections_object_model_read_only_collection_get_IsReadOnly (SystemCollectionsObjectModelReadOnlyCollection* self);
gboolean system_collections_object_model_read_only_collection_get_IsSynchronized (SystemCollectionsObjectModelReadOnlyCollection* self);
gboolean system_collections_object_model_read_only_collection_get_IsFixedSize (SystemCollectionsObjectModelReadOnlyCollection* self);
GType system_runtime_serialization_iserializable_get_type (void) G_GNUC_CONST;
GType system_runtime_serialization_ideserialization_callback_get_type (void) G_GNUC_CONST;
SystemTextStringBuilder* system_text_string_builder_new (const gchar* value);
SystemTextStringBuilder* system_text_string_builder_new (const gchar* value);
gint system_text_string_builder_EnsureCapacity (SystemTextStringBuilder* self, gint capacity);
gchar* system_text_string_builder_ToString (SystemTextStringBuilder* self, gint startIndex, gint length);
SystemTextStringBuilder* system_text_string_builder_Clear (SystemTextStringBuilder* self);
gchar system_text_string_builder_get (SystemTextStringBuilder* self, gint index);
void system_text_string_builder_set (SystemTextStringBuilder* self, gint index, const gchar* value);
SystemTextStringBuilder* system_text_string_builder_AppendCopies (SystemTextStringBuilder* self, gchar value, gint repeatCount);
SystemTextStringBuilder* system_text_string_builder_AppendCharArrayFromIndex (SystemTextStringBuilder* self, gchar* value, int value_length1, gint startIndex, gint charCount);
SystemTextStringBuilder* system_text_string_builder_AppendString (SystemTextStringBuilder* self, const gchar* value);
SystemTextStringBuilder* system_text_string_builder_Append (SystemTextStringBuilder* self, const gchar* value, gint startIndex, gint count);
SystemTextStringBuilder* system_text_string_builder_AppendLine (SystemTextStringBuilder* self, const gchar* value);
void system_text_string_builder_CopyTo (SystemTextStringBuilder* self, gint sourceIndex, gchar* destination, int destination_length1, gint destinationIndex, gint count);
SystemTextStringBuilder* system_text_string_builder_InserWithCount (SystemTextStringBuilder* self, gint index, const gchar* value, gint count);
SystemTextStringBuilder* system_text_string_builder_Remove (SystemTextStringBuilder* self, gint startIndex, gint length);
SystemTextStringBuilder* system_text_string_builder_AppendBoolean (SystemTextStringBuilder* self, gboolean value);
SystemTextStringBuilder* system_text_string_builder_AppendSbyte (SystemTextStringBuilder* self, gint8 value);
SystemTextStringBuilder* system_text_string_builder_AppendByte (SystemTextStringBuilder* self, guint8 value);
SystemTextStringBuilder* system_text_string_builder_AppendChar (SystemTextStringBuilder* self, gchar value);
SystemTextStringBuilder* system_text_string_builder_AppendShort (SystemTextStringBuilder* self, gshort value);
SystemTextStringBuilder* system_text_string_builder_AppendInt (SystemTextStringBuilder* self, gint value);
SystemTextStringBuilder* system_text_string_builder_AppendLong (SystemTextStringBuilder* self, glong value);
SystemTextStringBuilder* system_text_string_builder_AppendFloat (SystemTextStringBuilder* self, gfloat value);
SystemTextStringBuilder* system_text_string_builder_AppendDouble (SystemTextStringBuilder* self, gdouble value);
SystemTextStringBuilder* system_text_string_builder_AppendUshort (SystemTextStringBuilder* self, gushort value);
SystemTextStringBuilder* system_text_string_builder_AppendUint (SystemTextStringBuilder* self, guint value);
SystemTextStringBuilder* system_text_string_builder_AppendUlong (SystemTextStringBuilder* self, gulong value);
SystemTextStringBuilder* system_text_string_builder_AppendObject (SystemTextStringBuilder* self, Object* value);
SystemTextStringBuilder* system_text_string_builder_AppendCharArray (SystemTextStringBuilder* self, gchar* value, int value_length1);
SystemTextStringBuilder* system_text_string_builder_Insert (SystemTextStringBuilder* self, gint index, const gchar* value, gint valueCount);
SystemTextStringBuilder* system_text_string_builder_InsertBoolean (SystemTextStringBuilder* self, gint index, gboolean value);
SystemTextStringBuilder* system_text_string_builder_InsertSbyte (SystemTextStringBuilder* self, gint index, gint8 value);
SystemTextStringBuilder* system_text_string_builder_InsertByte (SystemTextStringBuilder* self, gint index, guint8 value);
SystemTextStringBuilder* system_text_string_builder_InsertShort (SystemTextStringBuilder* self, gint index, gshort value);
SystemTextStringBuilder* system_text_string_builder_InsertChar (SystemTextStringBuilder* self, gint index, gchar value);
SystemTextStringBuilder* system_text_string_builder_InsertCharArray (SystemTextStringBuilder* self, gint index, gchar* value, int value_length1);
SystemTextStringBuilder* system_text_string_builder_InsertCharWithCount (SystemTextStringBuilder* self, gint index, gchar* value, int value_length1, gint startIndex, gint charCount);
SystemTextStringBuilder* system_text_string_builder_InsertInt (SystemTextStringBuilder* self, gint index, gint value);
SystemTextStringBuilder* system_text_string_builder_InsertLong (SystemTextStringBuilder* self, gint index, glong value);
SystemTextStringBuilder* system_text_string_builder_InsertFloat (SystemTextStringBuilder* self, gint index, gfloat value);
SystemTextStringBuilder* system_text_string_builder_InsertDouble (SystemTextStringBuilder* self, gint index, gdouble value);
SystemTextStringBuilder* system_text_string_builder_InsertUshort (SystemTextStringBuilder* self, gint index, gushort value);
SystemTextStringBuilder* system_text_string_builder_InsertUint (SystemTextStringBuilder* self, gint index, guint value);
SystemTextStringBuilder* system_text_string_builder_InsertUlong (SystemTextStringBuilder* self, gint index, gulong value);
SystemTextStringBuilder* system_text_string_builder_InsertObject (SystemTextStringBuilder* self, gint index, Object* value);
SystemTextStringBuilder* system_text_string_builder_AppendFormat (SystemTextStringBuilder* self, const gchar* format, Object** args, int args_length1);
GType system_iformat_provider_get_type (void) G_GNUC_CONST;
SystemTextStringBuilder* system_text_string_builder_AppendFormatWithProvider (SystemTextStringBuilder* self, SystemIFormatProvider* provider, const gchar* format, Object** args, int args_length1);
gboolean system_text_string_builder_Equals (SystemTextStringBuilder* self, SystemTextStringBuilder* sb);
SystemTextStringBuilder* system_text_string_builder_Replace (SystemTextStringBuilder* self, const gchar* oldValue, const gchar* newValue, gint startIndex, gint count);
SystemTextStringBuilder* system_text_string_builder_ReplaceChar (SystemTextStringBuilder* self, gchar oldChar, gchar newChar, gint startIndex, gint count);
gint system_text_string_builder_get_Capacity (SystemTextStringBuilder* self);
void system_text_string_builder_set_Capacity (SystemTextStringBuilder* self, gint value);
gint system_text_string_builder_get_MaxCapacity (SystemTextStringBuilder* self);
gint system_text_string_builder_get_Length (SystemTextStringBuilder* self);
void system_text_string_builder_set_Length (SystemTextStringBuilder* self, gint value);
gpointer system_nullable_ref (gpointer instance);
void system_nullable_unref (gpointer instance);
GParamSpec* system_param_spec_nullable (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_value_set_nullable (GValue* value, gpointer v_object);
void system_value_take_nullable (GValue* value, gpointer v_object);
gpointer system_value_get_nullable (const GValue* value);
GType system_nullable_get_type (void) G_GNUC_CONST;
SystemNullable* system_nullable_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
SystemNullable* system_nullable_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
gpointer system_nullable_GetValueOrDefault (SystemNullable* self, gconstpointer defaultValue);
gboolean system_nullable_Equals (SystemNullable* self, GObject* other);
gint system_nullable_GetHashCode (SystemNullable* self);
gchar* system_nullable_ToString (SystemNullable* self);
gboolean system_nullable_get_HasValue (SystemNullable* self);
gconstpointer system_nullable_get_Value (SystemNullable* self);
Object* object_new (void);
Object* object_construct (GType object_type);
GType system_object_get_type (void) G_GNUC_CONST;
Systemobject* system_object_new (void);
Systemobject* system_object_construct (GType object_type);
void system_string_free (SystemString* self);
gchar* system_string_Join (const gchar* separator, SystemCollectionsGenericIEnumerable* enumerable);
const SystemString* system_string_new (void);
const SystemString* system_string_new (void);
GQuark system_array_type_mismatch_exception_quark (void);
GQuark system_argument_out_of_range_exception_quark (void);
GQuark system_error_quark (void);
GQuark system_argument_exception_quark (void);
GQuark system_argument_null_exception_quark (void);
GQuark system_invalid_operation_exception_quark (void);
GQuark system_not_supported_exception_quark (void);
GQuark system_serialization_exception_quark (void);
GType system_idisposable_get_type (void) G_GNUC_CONST;
void system_idisposable_Dispose (SystemIDisposable* self);
GType system_icomparable_get_type (void) G_GNUC_CONST;
gint system_icomparable_CompareTo (SystemIComparable* self, gconstpointer other);
GType system_iequatable_get_type (void) G_GNUC_CONST;
gboolean system_iequatable_Equals (SystemIEquatable* self, gconstpointer other);
GType system_iformattable_get_type (void) G_GNUC_CONST;
Object* system_iformat_provider_GetFormat (SystemIFormatProvider* self, GType formatType);
GType system_icustom_formatter_get_type (void) G_GNUC_CONST;
GType system_icloneable_get_type (void) G_GNUC_CONST;
GObject* system_icloneable_Clone (SystemICloneable* self);
GType system_globalization_culture_info_string_comparison_get_type (void) G_GNUC_CONST;


G_END_DECLS

#endif
