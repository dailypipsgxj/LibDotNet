/* libdotnet.h generated by valac 0.26.2, the Vala compiler, do not modify */


#ifndef __LIBDOTNET_H__
#define __LIBDOTNET_H__

#include <glib.h>
#include <gee.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define SYSTEM_COLLECTIONS_TYPE_IENUMERABLE (system_collections_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerable))
#define SYSTEM_COLLECTIONS_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerableIface))

typedef struct _SystemCollectionsIEnumerable SystemCollectionsIEnumerable;
typedef struct _SystemCollectionsIEnumerableIface SystemCollectionsIEnumerableIface;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERATOR (system_collections_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumerator))
#define SYSTEM_COLLECTIONS_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumeratorIface))

typedef struct _SystemCollectionsIEnumerator SystemCollectionsIEnumerator;
typedef struct _SystemCollectionsIEnumeratorIface SystemCollectionsIEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_ICOLLECTION (system_collections_icollection_get_type ())
#define SYSTEM_COLLECTIONS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollection))
#define SYSTEM_COLLECTIONS_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollectionIface))

typedef struct _SystemCollectionsICollection SystemCollectionsICollection;
typedef struct _SystemCollectionsICollectionIface SystemCollectionsICollectionIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY (system_collections_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionary))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionaryIface))

typedef struct _SystemCollectionsIDictionary SystemCollectionsIDictionary;
typedef struct _SystemCollectionsIDictionaryIface SystemCollectionsIDictionaryIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR (system_collections_idictionary_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumerator))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR))
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumeratorIface))

typedef struct _SystemCollectionsIDictionaryEnumerator SystemCollectionsIDictionaryEnumerator;
typedef struct _SystemCollectionsIDictionaryEnumeratorIface SystemCollectionsIDictionaryEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY (system_collections_dictionary_entry_get_type ())
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntry))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))

typedef struct _SystemCollectionsDictionaryEntry SystemCollectionsDictionaryEntry;
typedef struct _SystemCollectionsDictionaryEntryClass SystemCollectionsDictionaryEntryClass;

#define SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER (system_collections_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparer))
#define SYSTEM_COLLECTIONS_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparerIface))

typedef struct _SystemCollectionsIEqualityComparer SystemCollectionsIEqualityComparer;
typedef struct _SystemCollectionsIEqualityComparerIface SystemCollectionsIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER (system_collections_ihash_code_provider_get_type ())
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProvider))
#define SYSTEM_COLLECTIONS_IS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER))
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProviderIface))

typedef struct _SystemCollectionsIHashCodeProvider SystemCollectionsIHashCodeProvider;
typedef struct _SystemCollectionsIHashCodeProviderIface SystemCollectionsIHashCodeProviderIface;

#define SYSTEM_COLLECTIONS_TYPE_ILIST (system_collections_ilist_get_type ())
#define SYSTEM_COLLECTIONS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIList))
#define SYSTEM_COLLECTIONS_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIListIface))

typedef struct _SystemCollectionsIList SystemCollectionsIList;
typedef struct _SystemCollectionsIListIface SystemCollectionsIListIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE (system_collections_istructural_comparable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparableIface))

typedef struct _SystemCollectionsIStructuralComparable SystemCollectionsIStructuralComparable;
typedef struct _SystemCollectionsIStructuralComparableIface SystemCollectionsIStructuralComparableIface;

#define SYSTEM_COLLECTIONS_TYPE_ICOMPARER (system_collections_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparer))
#define SYSTEM_COLLECTIONS_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparerIface))

typedef struct _SystemCollectionsIComparer SystemCollectionsIComparer;
typedef struct _SystemCollectionsIComparerIface SystemCollectionsIComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE (system_collections_istructural_equatable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatableIface))

typedef struct _SystemCollectionsIStructuralEquatable SystemCollectionsIStructuralEquatable;
typedef struct _SystemCollectionsIStructuralEquatableIface SystemCollectionsIStructuralEquatableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE (system_collections_generic_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerable))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerableIface))

typedef struct _SystemCollectionsGenericIEnumerable SystemCollectionsGenericIEnumerable;
typedef struct _SystemCollectionsGenericIEnumerableIface SystemCollectionsGenericIEnumerableIface;

#define SYSTEM_TYPE_IDISPOSABLE (system_idisposable_get_type ())
#define SYSTEM_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposable))
#define SYSTEM_IS_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IDISPOSABLE))
#define SYSTEM_IDISPOSABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposableIface))

typedef struct _SystemIDisposable SystemIDisposable;
typedef struct _SystemIDisposableIface SystemIDisposableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR (system_collections_generic_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumeratorIface))

typedef struct _SystemCollectionsGenericIEnumerator SystemCollectionsGenericIEnumerator;
typedef struct _SystemCollectionsGenericIEnumeratorIface SystemCollectionsGenericIEnumeratorIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION (system_collections_generic_icollection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollectionIface))

typedef struct _SystemCollectionsGenericICollection SystemCollectionsGenericICollection;
typedef struct _SystemCollectionsGenericICollectionIface SystemCollectionsGenericICollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER (system_collections_generic_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparerIface))

typedef struct _SystemCollectionsGenericIComparer SystemCollectionsGenericIComparer;
typedef struct _SystemCollectionsGenericIComparerIface SystemCollectionsGenericIComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY (system_collections_generic_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionaryIface))

typedef struct _SystemCollectionsGenericIDictionary SystemCollectionsGenericIDictionary;
typedef struct _SystemCollectionsGenericIDictionaryIface SystemCollectionsGenericIDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER (system_collections_generic_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparerIface))

typedef struct _SystemCollectionsGenericIEqualityComparer SystemCollectionsGenericIEqualityComparer;
typedef struct _SystemCollectionsGenericIEqualityComparerIface SystemCollectionsGenericIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET (system_collections_generic_iset_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ISET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISet))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ISET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET))
#define SYSTEM_COLLECTIONS_GENERIC_ISET_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISetIface))

typedef struct _SystemCollectionsGenericISet SystemCollectionsGenericISet;
typedef struct _SystemCollectionsGenericISetIface SystemCollectionsGenericISetIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION (system_collections_generic_iread_only_collection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollectionIface))

typedef struct _SystemCollectionsGenericIReadOnlyCollection SystemCollectionsGenericIReadOnlyCollection;
typedef struct _SystemCollectionsGenericIReadOnlyCollectionIface SystemCollectionsGenericIReadOnlyCollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY (system_collections_generic_iread_only_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionaryIface))

typedef struct _SystemCollectionsGenericIReadOnlyDictionary SystemCollectionsGenericIReadOnlyDictionary;
typedef struct _SystemCollectionsGenericIReadOnlyDictionaryIface SystemCollectionsGenericIReadOnlyDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST (system_collections_generic_iread_only_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyListIface))

typedef struct _SystemCollectionsGenericIReadOnlyList SystemCollectionsGenericIReadOnlyList;
typedef struct _SystemCollectionsGenericIReadOnlyListIface SystemCollectionsGenericIReadOnlyListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST (system_collections_generic_ilist_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_GENERIC_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIListIface))

typedef struct _SystemCollectionsGenericIList SystemCollectionsGenericIList;
typedef struct _SystemCollectionsGenericIListIface SystemCollectionsGenericIListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR (system_collections_generic_key_value_pair_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePair))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))

typedef struct _SystemCollectionsGenericKeyValuePair SystemCollectionsGenericKeyValuePair;
typedef struct _SystemCollectionsGenericKeyValuePairClass SystemCollectionsGenericKeyValuePairClass;
typedef struct _SystemCollectionsGenericKeyValuePairPrivate SystemCollectionsGenericKeyValuePairPrivate;

#define SYSTEM_COLLECTIONS_TYPE_HASHTABLE (system_collections_hashtable_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtable))
#define SYSTEM_COLLECTIONS_HASHTABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtableClass))
#define SYSTEM_COLLECTIONS_IS_HASHTABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE))
#define SYSTEM_COLLECTIONS_IS_HASHTABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_HASHTABLE))
#define SYSTEM_COLLECTIONS_HASHTABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtableClass))

typedef struct _SystemCollectionsHashtable SystemCollectionsHashtable;
typedef struct _SystemCollectionsHashtableClass SystemCollectionsHashtableClass;
typedef struct _SystemCollectionsHashtablePrivate SystemCollectionsHashtablePrivate;
typedef struct _SystemCollectionsKeyValuePairs SystemCollectionsKeyValuePairs;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION (system_collections_hashtable_key_collection_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollection))
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollectionClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_KEY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_KEY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollectionClass))

typedef struct _SystemCollectionsHashtableKeyCollection SystemCollectionsHashtableKeyCollection;
typedef struct _SystemCollectionsHashtableKeyCollectionClass SystemCollectionsHashtableKeyCollectionClass;
typedef struct _SystemCollectionsHashtableKeyCollectionPrivate SystemCollectionsHashtableKeyCollectionPrivate;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION (system_collections_hashtable_value_collection_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollection))
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollectionClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_VALUE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_VALUE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollectionClass))

typedef struct _SystemCollectionsHashtableValueCollection SystemCollectionsHashtableValueCollection;
typedef struct _SystemCollectionsHashtableValueCollectionClass SystemCollectionsHashtableValueCollectionClass;
typedef struct _SystemCollectionsHashtableValueCollectionPrivate SystemCollectionsHashtableValueCollectionPrivate;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR (system_collections_hashtable_hashtable_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumerator))
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumeratorClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_HASHTABLE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_HASHTABLE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumeratorClass))

typedef struct _SystemCollectionsHashtableHashtableEnumerator SystemCollectionsHashtableHashtableEnumerator;
typedef struct _SystemCollectionsHashtableHashtableEnumeratorClass SystemCollectionsHashtableHashtableEnumeratorClass;
typedef struct _SystemCollectionsHashtableHashtableEnumeratorPrivate SystemCollectionsHashtableHashtableEnumeratorPrivate;

#define SYSTEM_COLLECTIONS_TYPE_QUEUE (system_collections_queue_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueue))
#define SYSTEM_COLLECTIONS_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueueClass))
#define SYSTEM_COLLECTIONS_IS_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_IS_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueueClass))

typedef struct _SystemCollectionsQueue SystemCollectionsQueue;
typedef struct _SystemCollectionsQueueClass SystemCollectionsQueueClass;
typedef struct _SystemCollectionsQueuePrivate SystemCollectionsQueuePrivate;

#define SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE (system_collections_queue_synchronized_queue_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueue))
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueueClass))
#define SYSTEM_COLLECTIONS_QUEUE_IS_SYNCHRONIZED_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_IS_SYNCHRONIZED_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueueClass))

typedef struct _SystemCollectionsQueueSynchronizedQueue SystemCollectionsQueueSynchronizedQueue;
typedef struct _SystemCollectionsQueueSynchronizedQueueClass SystemCollectionsQueueSynchronizedQueueClass;
typedef struct _SystemCollectionsQueueSynchronizedQueuePrivate SystemCollectionsQueueSynchronizedQueuePrivate;

#define SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR (system_collections_queue_queue_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumerator))
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumeratorClass))
#define SYSTEM_COLLECTIONS_QUEUE_IS_QUEUE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_QUEUE_IS_QUEUE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumeratorClass))

typedef struct _SystemCollectionsQueueQueueEnumerator SystemCollectionsQueueQueueEnumerator;
typedef struct _SystemCollectionsQueueQueueEnumeratorClass SystemCollectionsQueueQueueEnumeratorClass;
typedef struct _SystemCollectionsQueueQueueEnumeratorPrivate SystemCollectionsQueueQueueEnumeratorPrivate;

#define SYSTEM_COLLECTIONS_TYPE_SORTED_LIST (system_collections_sorted_list_get_type ())
#define SYSTEM_COLLECTIONS_SORTED_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedList))
#define SYSTEM_COLLECTIONS_SORTED_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedListClass))
#define SYSTEM_COLLECTIONS_IS_SORTED_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST))
#define SYSTEM_COLLECTIONS_IS_SORTED_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST))
#define SYSTEM_COLLECTIONS_SORTED_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedListClass))

typedef struct _SystemCollectionsSortedList SystemCollectionsSortedList;
typedef struct _SystemCollectionsSortedListClass SystemCollectionsSortedListClass;
typedef struct _SystemCollectionsSortedListPrivate SystemCollectionsSortedListPrivate;
typedef struct _SystemCollectionsDictionaryEntryPrivate SystemCollectionsDictionaryEntryPrivate;

#define SYSTEM_TYPE_ICOMPARABLE (system_icomparable_get_type ())
#define SYSTEM_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparable))
#define SYSTEM_IS_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICOMPARABLE))
#define SYSTEM_ICOMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparableIface))

typedef struct _SystemIComparable SystemIComparable;
typedef struct _SystemIComparableIface SystemIComparableIface;

#define SYSTEM_TYPE_IEQUATABLE (system_iequatable_get_type ())
#define SYSTEM_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatable))
#define SYSTEM_IS_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IEQUATABLE))
#define SYSTEM_IEQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatableIface))

typedef struct _SystemIEquatable SystemIEquatable;
typedef struct _SystemIEquatableIface SystemIEquatableIface;

#define SYSTEM_GLOBALIZATION_TYPE_CULTURE_INFO (system_globalization_culture_info_get_type ())

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE (system_runtime_serialization_iserializable_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializable))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE))
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializableIface))

typedef struct _SystemRuntimeSerializationISerializable SystemRuntimeSerializationISerializable;
typedef struct _SystemRuntimeSerializationISerializableIface SystemRuntimeSerializationISerializableIface;

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK (system_runtime_serialization_ideserialization_callback_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallback))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK))
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallbackIface))

typedef struct _SystemRuntimeSerializationIDeserializationCallback SystemRuntimeSerializationIDeserializationCallback;
typedef struct _SystemRuntimeSerializationIDeserializationCallbackIface SystemRuntimeSerializationIDeserializationCallbackIface;

struct _SystemCollectionsIEnumeratorIface {
	GTypeInterface parent_iface;
	gboolean (*MoveNext) (SystemCollectionsIEnumerator* self);
	gboolean (*next) (SystemCollectionsIEnumerator* self);
	GObject* (*get) (SystemCollectionsIEnumerator* self);
	void (*Reset) (SystemCollectionsIEnumerator* self);
	GObject* (*get__currentElement) (SystemCollectionsIEnumerator* self);
	void (*set__currentElement) (SystemCollectionsIEnumerator* self, GObject* value);
	GeeIterator* (*get__iterator) (SystemCollectionsIEnumerator* self);
	void (*set__iterator) (SystemCollectionsIEnumerator* self, GeeIterator* value);
	GObject* (*get_Current) (SystemCollectionsIEnumerator* self);
};

struct _SystemCollectionsIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsIEnumerable* self);
};

struct _SystemCollectionsICollectionIface {
	GTypeInterface parent_iface;
	void (*CopyTo) (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
	SystemCollectionsIEnumerator* (*iterator) (SystemCollectionsICollection* self);
	gint (*get_Count) (SystemCollectionsICollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsICollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsICollection* self);
};

struct _SystemCollectionsIDictionaryEnumeratorIface {
	GTypeInterface parent_iface;
	GeeMapIterator* (*get__iterator) (SystemCollectionsIDictionaryEnumerator* self);
	void (*set__iterator) (SystemCollectionsIDictionaryEnumerator* self, GeeMapIterator* value);
	GObject* (*get_Key) (SystemCollectionsIDictionaryEnumerator* self);
	GObject* (*get_Value) (SystemCollectionsIDictionaryEnumerator* self);
	SystemCollectionsDictionaryEntry* (*get_Entry) (SystemCollectionsIDictionaryEnumerator* self);
};

struct _SystemCollectionsIDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*Contains) (SystemCollectionsIDictionary* self, GObject* key);
	void (*Add) (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
	void (*Clear) (SystemCollectionsIDictionary* self);
	SystemCollectionsIDictionaryEnumerator* (*GetEnumerator) (SystemCollectionsIDictionary* self);
	void (*Remove) (SystemCollectionsIDictionary* self, GObject* key);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsIDictionary* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsIDictionary* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsIDictionary* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsIDictionary* self);
};

struct _SystemCollectionsIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
	gint (*GetHashCode) (SystemCollectionsIEqualityComparer* self, GObject* obj);
};

struct _SystemCollectionsIHashCodeProviderIface {
	GTypeInterface parent_iface;
	gint (*GetHashCode) (SystemCollectionsIHashCodeProvider* self, GObject* obj);
};

struct _SystemCollectionsIListIface {
	GTypeInterface parent_iface;
	gint (*Add) (SystemCollectionsIList* self, GObject* value);
	gboolean (*Contains) (SystemCollectionsIList* self, GObject* value);
	void (*Clear) (SystemCollectionsIList* self);
	gint (*IndexOf) (SystemCollectionsIList* self, GObject* value);
	void (*Insert) (SystemCollectionsIList* self, gint index, GObject* value);
	void (*Remove) (SystemCollectionsIList* self, GObject* value);
	void (*RemoveAt) (SystemCollectionsIList* self, gint index);
	gboolean (*get_IsReadOnly) (SystemCollectionsIList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsIList* self);
};

struct _SystemCollectionsIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsIComparer* self, GObject* x, GObject* y);
};

struct _SystemCollectionsIStructuralComparableIface {
	GTypeInterface parent_iface;
	gint32 (*CompareTo) (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
};

struct _SystemCollectionsIStructuralEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
	gint (*GetHashCode) (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
};

struct _SystemIDisposableIface {
	GTypeInterface parent_iface;
	void (*Dispose) (SystemIDisposable* self);
};

struct _SystemCollectionsGenericIEnumeratorIface {
	GTypeInterface parent_iface;
	gconstpointer (*get_Current) (SystemCollectionsGenericIEnumerator* self);
};

struct _SystemCollectionsGenericIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericIEnumerable* self);
};

struct _SystemCollectionsGenericICollectionIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericICollection* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericICollection* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericICollection* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericICollection* self);
	void (*Add) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*Clear) (SystemCollectionsGenericICollection* self);
	gboolean (*Contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*CopyTo) (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
	gboolean (*Remove) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gint (*get_Count) (SystemCollectionsGenericICollection* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericICollection* self);
};

struct _SystemCollectionsGenericIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
};

struct _SystemCollectionsGenericIDictionaryIface {
	GTypeInterface parent_iface;
	GType (*get_tkey_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tkey_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tkey_destroy_func) (SystemCollectionsGenericIDictionary* self);
	GType (*get_tvalue_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tvalue_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tvalue_destroy_func) (SystemCollectionsGenericIDictionary* self);
	gboolean (*ContainsKey) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*ContainsValue) (SystemCollectionsGenericIDictionary* self, gconstpointer value);
	void (*Add) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*Remove) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
	gboolean (*IsCompatibleKey) (SystemCollectionsGenericIDictionary* self, GObject* key);
	SystemCollectionsGenericICollection* (*get_Keys) (SystemCollectionsGenericIDictionary* self);
	SystemCollectionsGenericICollection* (*get_Values) (SystemCollectionsGenericIDictionary* self);
};

struct _SystemCollectionsGenericIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
	gint (*GetHashCode) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
};

struct _SystemCollectionsGenericISetIface {
	GTypeInterface parent_iface;
	gboolean (*Add) (SystemCollectionsGenericISet* self, gconstpointer value);
	void (*ExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*IntersectWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*Overlaps) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*SetEquals) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*SymmetricExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*UnionWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
};

struct _SystemCollectionsGenericIReadOnlyCollectionIface {
	GTypeInterface parent_iface;
	gint (*get_Count) (SystemCollectionsGenericIReadOnlyCollection* self);
};

struct _SystemCollectionsGenericIReadOnlyDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*ContainsKey) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericIEnumerable* (*get_Keys) (SystemCollectionsGenericIReadOnlyDictionary* self);
	SystemCollectionsGenericIEnumerable* (*get_Values) (SystemCollectionsGenericIReadOnlyDictionary* self);
};

struct _SystemCollectionsGenericIReadOnlyListIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIReadOnlyList* self, gint index);
};

struct _SystemCollectionsGenericIListIface {
	GTypeInterface parent_iface;
	gint (*IndexOf) (SystemCollectionsGenericIList* self, gconstpointer item);
	void (*Insert) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericIList* self, gint index);
};

struct _SystemCollectionsGenericKeyValuePair {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsGenericKeyValuePairPrivate * priv;
};

struct _SystemCollectionsGenericKeyValuePairClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsGenericKeyValuePair *self);
};

struct _SystemCollectionsHashtable {
	GeeHashMap parent_instance;
	SystemCollectionsHashtablePrivate * priv;
	GObject* _syncRoot;
};

struct _SystemCollectionsHashtableClass {
	GeeHashMapClass parent_class;
	GObject* (*Clone) (SystemCollectionsHashtable* self);
	gboolean (*ContainsKey) (SystemCollectionsHashtable* self, GObject* key);
	gboolean (*ContainsValue) (SystemCollectionsHashtable* self, GObject* value);
	SystemCollectionsKeyValuePairs** (*ToKeyValuePairsArray) (SystemCollectionsHashtable* self, int* result_length1);
	gint (*GetHash) (SystemCollectionsHashtable* self, GObject* key);
	gboolean (*get_IsReadOnly) (SystemCollectionsHashtable* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsHashtable* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtable* self);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsHashtable* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsHashtable* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtable* self);
	gint (*get_Count) (SystemCollectionsHashtable* self);
};

struct _SystemCollectionsHashtableKeyCollection {
	GObject parent_instance;
	SystemCollectionsHashtableKeyCollectionPrivate * priv;
};

struct _SystemCollectionsHashtableKeyCollectionClass {
	GObjectClass parent_class;
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsHashtableKeyCollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtableKeyCollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtableKeyCollection* self);
	gint (*get_Count) (SystemCollectionsHashtableKeyCollection* self);
};

struct _SystemCollectionsHashtableValueCollection {
	GObject parent_instance;
	SystemCollectionsHashtableValueCollectionPrivate * priv;
};

struct _SystemCollectionsHashtableValueCollectionClass {
	GObjectClass parent_class;
	void (*CopyTo) (SystemCollectionsHashtableValueCollection* self, GArray* array, gint arrayIndex);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsHashtableValueCollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtableValueCollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtableValueCollection* self);
	gint (*get_Count) (SystemCollectionsHashtableValueCollection* self);
};

struct _SystemCollectionsHashtableHashtableEnumerator {
	GObject parent_instance;
	SystemCollectionsHashtableHashtableEnumeratorPrivate * priv;
};

struct _SystemCollectionsHashtableHashtableEnumeratorClass {
	GObjectClass parent_class;
	void (*Reset) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Key) (SystemCollectionsHashtableHashtableEnumerator* self);
	SystemCollectionsDictionaryEntry* (*get_Entry) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Current) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Value) (SystemCollectionsHashtableHashtableEnumerator* self);
};

struct _SystemCollectionsQueue {
	GeePriorityQueue parent_instance;
	SystemCollectionsQueuePrivate * priv;
};

struct _SystemCollectionsQueueClass {
	GeePriorityQueueClass parent_class;
	GObject* (*Clone) (SystemCollectionsQueue* self);
	void (*Clear) (SystemCollectionsQueue* self);
	void (*CopyTo) (SystemCollectionsQueue* self, GArray* array, gint index);
	void (*Enqueue) (SystemCollectionsQueue* self, GObject* obj);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsQueue* self);
	GObject* (*Dequeue) (SystemCollectionsQueue* self);
	GObject* (*Peek) (SystemCollectionsQueue* self);
	gboolean (*Contains) (SystemCollectionsQueue* self, GObject* obj);
	GObject** (*ToArray) (SystemCollectionsQueue* self, int* result_length1);
	void (*TrimToSize) (SystemCollectionsQueue* self);
	gint (*get_Count) (SystemCollectionsQueue* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsQueue* self);
	GObject* (*get_SyncRoot) (SystemCollectionsQueue* self);
};

struct _SystemCollectionsQueueSynchronizedQueue {
	SystemCollectionsQueue parent_instance;
	SystemCollectionsQueueSynchronizedQueuePrivate * priv;
};

struct _SystemCollectionsQueueSynchronizedQueueClass {
	SystemCollectionsQueueClass parent_class;
};

struct _SystemCollectionsQueueQueueEnumerator {
	GObject parent_instance;
	SystemCollectionsQueueQueueEnumeratorPrivate * priv;
};

struct _SystemCollectionsQueueQueueEnumeratorClass {
	GObjectClass parent_class;
	gboolean (*MoveNext) (SystemCollectionsQueueQueueEnumerator* self);
	void (*Reset) (SystemCollectionsQueueQueueEnumerator* self);
	GObject* (*get_Current) (SystemCollectionsQueueQueueEnumerator* self);
};

struct _SystemCollectionsSortedList {
	GeeTreeMap parent_instance;
	SystemCollectionsSortedListPrivate * priv;
};

struct _SystemCollectionsSortedListClass {
	GeeTreeMapClass parent_class;
	GObject* (*Clone) (SystemCollectionsSortedList* self);
	gboolean (*ContainsKey) (SystemCollectionsSortedList* self, GObject* key);
	gboolean (*ContainsValue) (SystemCollectionsSortedList* self, GObject* value);
	SystemCollectionsKeyValuePairs** (*ToKeyValuePairsArray) (SystemCollectionsSortedList* self, int* result_length1);
	GObject* (*GetByIndex) (SystemCollectionsSortedList* self, gint index);
	SystemCollectionsIDictionaryEnumerator* (*GetEnumerator) (SystemCollectionsSortedList* self);
	GObject* (*GetKey) (SystemCollectionsSortedList* self, gint index);
	SystemCollectionsIList* (*GetKeyList) (SystemCollectionsSortedList* self);
	SystemCollectionsIList* (*GetValueList) (SystemCollectionsSortedList* self);
	gint (*IndexOfKey) (SystemCollectionsSortedList* self, GObject* key);
	gint (*IndexOfValue) (SystemCollectionsSortedList* self, GObject* value);
	void (*RemoveAt) (SystemCollectionsSortedList* self, gint index);
	void (*Remove) (SystemCollectionsSortedList* self, GObject* key);
	void (*SetByIndex) (SystemCollectionsSortedList* self, gint index, GObject* value);
	void (*TrimToSize) (SystemCollectionsSortedList* self);
	gint (*get_Capacity) (SystemCollectionsSortedList* self);
	void (*set_Capacity) (SystemCollectionsSortedList* self, gint value);
	gint (*get_Count) (SystemCollectionsSortedList* self);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsSortedList* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsSortedList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsSortedList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsSortedList* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsSortedList* self);
	GObject* (*get_SyncRoot) (SystemCollectionsSortedList* self);
};

struct _SystemCollectionsKeyValuePairs {
	GObject* _key;
	GObject* _value;
};

struct _SystemCollectionsDictionaryEntry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsDictionaryEntryPrivate * priv;
};

struct _SystemCollectionsDictionaryEntryClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsDictionaryEntry *self);
};

struct _SystemIComparableIface {
	GTypeInterface parent_iface;
	gint (*CompareTo) (SystemIComparable* self, gconstpointer other);
};

struct _SystemIEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemIEquatable* self, gconstpointer other);
};

typedef enum  {
	SYSTEM_GLOBALIZATION_CULTURE_INFO_InvariantCulture,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_CurrentCulture
} SystemGlobalizationCultureInfo;

struct _SystemRuntimeSerializationISerializableIface {
	GTypeInterface parent_iface;
};

struct _SystemRuntimeSerializationIDeserializationCallbackIface {
	GTypeInterface parent_iface;
};


GType system_collections_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_ienumerable_get_type (void) G_GNUC_CONST;
GType system_collections_icollection_get_type (void) G_GNUC_CONST;
gpointer system_collections_dictionary_entry_ref (gpointer instance);
void system_collections_dictionary_entry_unref (gpointer instance);
GParamSpec* system_collections_param_spec_dictionary_entry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_value_set_dictionary_entry (GValue* value, gpointer v_object);
void system_collections_value_take_dictionary_entry (GValue* value, gpointer v_object);
gpointer system_collections_value_get_dictionary_entry (const GValue* value);
GType system_collections_dictionary_entry_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_enumerator_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_idictionary_Contains (SystemCollectionsIDictionary* self, GObject* key);
void system_collections_idictionary_Add (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
void system_collections_idictionary_Clear (SystemCollectionsIDictionary* self);
SystemCollectionsIDictionaryEnumerator* system_collections_idictionary_GetEnumerator (SystemCollectionsIDictionary* self);
void system_collections_idictionary_Remove (SystemCollectionsIDictionary* self, GObject* key);
SystemCollectionsICollection* system_collections_idictionary_get_Keys (SystemCollectionsIDictionary* self);
SystemCollectionsICollection* system_collections_idictionary_get_Values (SystemCollectionsIDictionary* self);
GeeMapIterator* system_collections_idictionary_enumerator_get__iterator (SystemCollectionsIDictionaryEnumerator* self);
void system_collections_idictionary_enumerator_set__iterator (SystemCollectionsIDictionaryEnumerator* self, GeeMapIterator* value);
GObject* system_collections_idictionary_enumerator_get_Key (SystemCollectionsIDictionaryEnumerator* self);
GObject* system_collections_idictionary_enumerator_get_Value (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsDictionaryEntry* system_collections_idictionary_enumerator_get_Entry (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_GetEnumerator (SystemCollectionsIEnumerable* self);
gboolean system_collections_ienumerator_MoveNext (SystemCollectionsIEnumerator* self);
gboolean system_collections_ienumerator_next (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_Reset (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get__currentElement (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_set__currentElement (SystemCollectionsIEnumerator* self, GObject* value);
GeeIterator* system_collections_ienumerator_get__iterator (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_set__iterator (SystemCollectionsIEnumerator* self, GeeIterator* value);
GObject* system_collections_ienumerator_get_Current (SystemCollectionsIEnumerator* self);
GType system_collections_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_iequality_comparer_Equals (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
gint system_collections_iequality_comparer_GetHashCode (SystemCollectionsIEqualityComparer* self, GObject* obj);
GType system_collections_ihash_code_provider_get_type (void) G_GNUC_CONST;
gint system_collections_ihash_code_provider_GetHashCode (SystemCollectionsIHashCodeProvider* self, GObject* obj);
GType system_collections_ilist_get_type (void) G_GNUC_CONST;
gint system_collections_ilist_Add (SystemCollectionsIList* self, GObject* value);
gboolean system_collections_ilist_Contains (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_Clear (SystemCollectionsIList* self);
gint system_collections_ilist_IndexOf (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_Insert (SystemCollectionsIList* self, gint index, GObject* value);
void system_collections_ilist_Remove (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_RemoveAt (SystemCollectionsIList* self, gint index);
gboolean system_collections_ilist_get_IsReadOnly (SystemCollectionsIList* self);
gboolean system_collections_ilist_get_IsFixedSize (SystemCollectionsIList* self);
GType system_collections_icomparer_get_type (void) G_GNUC_CONST;
GType system_collections_istructural_comparable_get_type (void) G_GNUC_CONST;
gint32 system_collections_istructural_comparable_CompareTo (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
GType system_collections_istructural_equatable_get_type (void) G_GNUC_CONST;
gboolean system_collections_istructural_equatable_Equals (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
gint system_collections_istructural_equatable_GetHashCode (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
void system_collections_icollection_CopyTo (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
SystemCollectionsIEnumerator* system_collections_icollection_iterator (SystemCollectionsICollection* self);
gint system_collections_icollection_get_Count (SystemCollectionsICollection* self);
GObject* system_collections_icollection_get_SyncRoot (SystemCollectionsICollection* self);
gboolean system_collections_icollection_get_IsSynchronized (SystemCollectionsICollection* self);
gint system_collections_icomparer_Compare (SystemCollectionsIComparer* self, GObject* x, GObject* y);
GType system_idisposable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_icollection_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericIEnumerator* system_collections_generic_icollection_iterator (SystemCollectionsGenericICollection* self);
void system_collections_generic_icollection_Add (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_Clear (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_Contains (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_CopyTo (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
gboolean system_collections_generic_icollection_Remove (SystemCollectionsGenericICollection* self, gconstpointer item);
gint system_collections_generic_icollection_get_Count (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_get_IsReadOnly (SystemCollectionsGenericICollection* self);
GType system_collections_generic_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_generic_icomparer_Compare (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
GType system_collections_generic_idictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_idictionary_ContainsKey (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_ContainsValue (SystemCollectionsGenericIDictionary* self, gconstpointer value);
void system_collections_generic_idictionary_Add (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_idictionary_Remove (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_TryGetValue (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
gboolean system_collections_generic_idictionary_IsCompatibleKey (SystemCollectionsGenericIDictionary* self, GObject* key);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Keys (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Values (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_GetEnumerator (SystemCollectionsGenericIEnumerable* self);
GType system_collections_generic_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iequality_comparer_Equals (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
gint system_collections_generic_iequality_comparer_GetHashCode (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
GType system_collections_generic_iset_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iset_Add (SystemCollectionsGenericISet* self, gconstpointer value);
void system_collections_generic_iset_ExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_IntersectWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_Overlaps (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_SetEquals (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_SymmetricExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_UnionWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
GType system_collections_generic_iread_only_collection_get_type (void) G_GNUC_CONST;
gint system_collections_generic_iread_only_collection_get_Count (SystemCollectionsGenericIReadOnlyCollection* self);
GType system_collections_generic_iread_only_dictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iread_only_dictionary_ContainsKey (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
gboolean system_collections_generic_iread_only_dictionary_TryGetValue (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Keys (SystemCollectionsGenericIReadOnlyDictionary* self);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Values (SystemCollectionsGenericIReadOnlyDictionary* self);
GType system_collections_generic_iread_only_list_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_iread_only_list_get (SystemCollectionsGenericIReadOnlyList* self, gint index);
GType system_collections_generic_ilist_get_type (void) G_GNUC_CONST;
gint system_collections_generic_ilist_IndexOf (SystemCollectionsGenericIList* self, gconstpointer item);
void system_collections_generic_ilist_Insert (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
void system_collections_generic_ilist_RemoveAt (SystemCollectionsGenericIList* self, gint index);
gpointer system_collections_generic_key_value_pair_ref (gpointer instance);
void system_collections_generic_key_value_pair_unref (gpointer instance);
GParamSpec* system_collections_generic_param_spec_key_value_pair (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_generic_value_set_key_value_pair (GValue* value, gpointer v_object);
void system_collections_generic_value_take_key_value_pair (GValue* value, gpointer v_object);
gpointer system_collections_generic_value_get_key_value_pair (const GValue* value);
GType system_collections_generic_key_value_pair_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
gchar* system_collections_generic_key_value_pair_ToString (SystemCollectionsGenericKeyValuePair* self, GString* s);
gconstpointer system_collections_generic_key_value_pair_get_Key (SystemCollectionsGenericKeyValuePair* self);
gconstpointer system_collections_generic_key_value_pair_get_Value (SystemCollectionsGenericKeyValuePair* self);
GType system_collections_hashtable_get_type (void) G_GNUC_CONST;
void system_collections_key_value_pairs_free (SystemCollectionsKeyValuePairs* self);
SystemCollectionsHashtable* system_collections_hashtable_new (SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct (GType object_type, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_new_WithCapacity (gint capacity, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct_WithCapacity (GType object_type, gint capacity, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_new_WithDictionary (SystemCollectionsIDictionary* d, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct_WithDictionary (GType object_type, SystemCollectionsIDictionary* d, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
GObject* system_collections_hashtable_Clone (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_ContainsKey (SystemCollectionsHashtable* self, GObject* key);
gboolean system_collections_hashtable_ContainsValue (SystemCollectionsHashtable* self, GObject* value);
void system_collections_hashtable_CopyKeys (SystemCollectionsHashtable* self, GArray* array, gint arrayIndex);
gint system_collections_hashtable_GetHash (SystemCollectionsHashtable* self, GObject* key);
SystemCollectionsIEqualityComparer* system_collections_hashtable_get_EqualityComparer (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsReadOnly (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsFixedSize (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsSynchronized (SystemCollectionsHashtable* self);
SystemCollectionsICollection* system_collections_hashtable_get_Keys (SystemCollectionsHashtable* self);
SystemCollectionsICollection* system_collections_hashtable_get_Values (SystemCollectionsHashtable* self);
GObject* system_collections_hashtable_get_SyncRoot (SystemCollectionsHashtable* self);
gint system_collections_hashtable_get_Count (SystemCollectionsHashtable* self);
GType system_collections_hashtable_key_collection_get_type (void) G_GNUC_CONST;
SystemCollectionsIEnumerator* system_collections_hashtable_key_collection_GetEnumerator (SystemCollectionsHashtableKeyCollection* self);
gboolean system_collections_hashtable_key_collection_get_IsSynchronized (SystemCollectionsHashtableKeyCollection* self);
GObject* system_collections_hashtable_key_collection_get_SyncRoot (SystemCollectionsHashtableKeyCollection* self);
gint system_collections_hashtable_key_collection_get_Count (SystemCollectionsHashtableKeyCollection* self);
GType system_collections_hashtable_value_collection_get_type (void) G_GNUC_CONST;
void system_collections_hashtable_value_collection_CopyTo (SystemCollectionsHashtableValueCollection* self, GArray* array, gint arrayIndex);
SystemCollectionsIEnumerator* system_collections_hashtable_value_collection_GetEnumerator (SystemCollectionsHashtableValueCollection* self);
gboolean system_collections_hashtable_value_collection_get_IsSynchronized (SystemCollectionsHashtableValueCollection* self);
GObject* system_collections_hashtable_value_collection_get_SyncRoot (SystemCollectionsHashtableValueCollection* self);
gint system_collections_hashtable_value_collection_get_Count (SystemCollectionsHashtableValueCollection* self);
GType system_collections_hashtable_hashtable_enumerator_get_type (void) G_GNUC_CONST;
void system_collections_hashtable_hashtable_enumerator_Reset (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Key (SystemCollectionsHashtableHashtableEnumerator* self);
SystemCollectionsDictionaryEntry* system_collections_hashtable_hashtable_enumerator_get_Entry (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Current (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Value (SystemCollectionsHashtableHashtableEnumerator* self);
GType system_collections_queue_get_type (void) G_GNUC_CONST;
SystemCollectionsQueue* system_collections_queue_new (gint capacity, gfloat growFactor);
SystemCollectionsQueue* system_collections_queue_construct (GType object_type, gint capacity, gfloat growFactor);
SystemCollectionsQueue* system_collections_queue_new_WithCollection (SystemCollectionsICollection* col);
SystemCollectionsQueue* system_collections_queue_construct_WithCollection (GType object_type, SystemCollectionsICollection* col);
GObject* system_collections_queue_Clone (SystemCollectionsQueue* self);
void system_collections_queue_Clear (SystemCollectionsQueue* self);
void system_collections_queue_CopyTo (SystemCollectionsQueue* self, GArray* array, gint index);
void system_collections_queue_Enqueue (SystemCollectionsQueue* self, GObject* obj);
SystemCollectionsIEnumerator* system_collections_queue_GetEnumerator (SystemCollectionsQueue* self);
GObject* system_collections_queue_Dequeue (SystemCollectionsQueue* self);
GObject* system_collections_queue_Peek (SystemCollectionsQueue* self);
SystemCollectionsQueue* system_collections_queue_Synchronized (SystemCollectionsQueue* queue);
gboolean system_collections_queue_Contains (SystemCollectionsQueue* self, GObject* obj);
GObject** system_collections_queue_ToArray (SystemCollectionsQueue* self, int* result_length1);
void system_collections_queue_TrimToSize (SystemCollectionsQueue* self);
gint system_collections_queue_get_Count (SystemCollectionsQueue* self);
gboolean system_collections_queue_get_IsSynchronized (SystemCollectionsQueue* self);
GObject* system_collections_queue_get_SyncRoot (SystemCollectionsQueue* self);
GType system_collections_queue_synchronized_queue_get_type (void) G_GNUC_CONST;
GType system_collections_queue_queue_enumerator_get_type (void) G_GNUC_CONST;
SystemCollectionsQueueQueueEnumerator* system_collections_queue_queue_enumerator_new (SystemCollectionsQueue* q);
SystemCollectionsQueueQueueEnumerator* system_collections_queue_queue_enumerator_construct (GType object_type, SystemCollectionsQueue* q);
gboolean system_collections_queue_queue_enumerator_MoveNext (SystemCollectionsQueueQueueEnumerator* self);
void system_collections_queue_queue_enumerator_Reset (SystemCollectionsQueueQueueEnumerator* self);
GObject* system_collections_queue_queue_enumerator_get_Current (SystemCollectionsQueueQueueEnumerator* self);
GType system_collections_sorted_list_get_type (void) G_GNUC_CONST;
SystemCollectionsSortedList* system_collections_sorted_list_new (SystemCollectionsIComparer* comparer, gint capacity);
SystemCollectionsSortedList* system_collections_sorted_list_construct (GType object_type, SystemCollectionsIComparer* comparer, gint capacity);
SystemCollectionsSortedList* system_collections_sorted_list_new_FromDictionary (SystemCollectionsIDictionary* d, SystemCollectionsIComparer* comparer);
SystemCollectionsSortedList* system_collections_sorted_list_construct_FromDictionary (GType object_type, SystemCollectionsIDictionary* d, SystemCollectionsIComparer* comparer);
GObject* system_collections_sorted_list_Clone (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_ContainsKey (SystemCollectionsSortedList* self, GObject* key);
gboolean system_collections_sorted_list_ContainsValue (SystemCollectionsSortedList* self, GObject* value);
GObject* system_collections_sorted_list_GetByIndex (SystemCollectionsSortedList* self, gint index);
SystemCollectionsIDictionaryEnumerator* system_collections_sorted_list_GetEnumerator (SystemCollectionsSortedList* self);
GObject* system_collections_sorted_list_GetKey (SystemCollectionsSortedList* self, gint index);
SystemCollectionsIList* system_collections_sorted_list_GetKeyList (SystemCollectionsSortedList* self);
SystemCollectionsIList* system_collections_sorted_list_GetValueList (SystemCollectionsSortedList* self);
gint system_collections_sorted_list_IndexOfKey (SystemCollectionsSortedList* self, GObject* key);
gint system_collections_sorted_list_IndexOfValue (SystemCollectionsSortedList* self, GObject* value);
void system_collections_sorted_list_RemoveAt (SystemCollectionsSortedList* self, gint index);
void system_collections_sorted_list_Remove (SystemCollectionsSortedList* self, GObject* key);
void system_collections_sorted_list_SetByIndex (SystemCollectionsSortedList* self, gint index, GObject* value);
SystemCollectionsSortedList* system_collections_sorted_list_Synchronized (SystemCollectionsSortedList* list);
void system_collections_sorted_list_TrimToSize (SystemCollectionsSortedList* self);
gint system_collections_sorted_list_get_Capacity (SystemCollectionsSortedList* self);
void system_collections_sorted_list_set_Capacity (SystemCollectionsSortedList* self, gint value);
gint system_collections_sorted_list_get_Count (SystemCollectionsSortedList* self);
SystemCollectionsICollection* system_collections_sorted_list_get_Keys (SystemCollectionsSortedList* self);
SystemCollectionsICollection* system_collections_sorted_list_get_Values (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsReadOnly (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsFixedSize (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsSynchronized (SystemCollectionsSortedList* self);
GObject* system_collections_sorted_list_get_SyncRoot (SystemCollectionsSortedList* self);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_new (GObject* key, GObject* value);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_construct (GType object_type, GObject* key, GObject* value);
GObject* system_collections_dictionary_entry_get_Key (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Key (SystemCollectionsDictionaryEntry* self, GObject* value);
GObject* system_collections_dictionary_entry_get_Value (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Value (SystemCollectionsDictionaryEntry* self, GObject* value);
void system_idisposable_Dispose (SystemIDisposable* self);
GType system_icomparable_get_type (void) G_GNUC_CONST;
gint system_icomparable_CompareTo (SystemIComparable* self, gconstpointer other);
GType system_iequatable_get_type (void) G_GNUC_CONST;
gboolean system_iequatable_Equals (SystemIEquatable* self, gconstpointer other);
GType system_globalization_culture_info_get_type (void) G_GNUC_CONST;
GType system_runtime_serialization_iserializable_get_type (void) G_GNUC_CONST;
GType system_runtime_serialization_ideserialization_callback_get_type (void) G_GNUC_CONST;


G_END_DECLS

#endif
