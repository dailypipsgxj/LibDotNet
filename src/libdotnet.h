/* libdotnet.h generated by valac 0.29.2.5-8632-dirty, the Vala compiler, do not modify */


#ifndef __LIBDOTNET_H__
#define __LIBDOTNET_H__

#include <glib.h>
#include <glib-object.h>
#include <gee.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define SYSTEM_COLLECTIONS_TYPE_ICOLLECTION (system_collections_icollection_get_type ())
#define SYSTEM_COLLECTIONS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollection))
#define SYSTEM_COLLECTIONS_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollectionIface))

typedef struct _SystemCollectionsICollection SystemCollectionsICollection;
typedef struct _SystemCollectionsICollectionIface SystemCollectionsICollectionIface;

#define SYSTEM_COLLECTIONS_TYPE_ICOMPARER (system_collections_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparer))
#define SYSTEM_COLLECTIONS_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparerIface))

typedef struct _SystemCollectionsIComparer SystemCollectionsIComparer;
typedef struct _SystemCollectionsIComparerIface SystemCollectionsIComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERABLE (system_collections_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerable))
#define SYSTEM_COLLECTIONS_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerableIface))

typedef struct _SystemCollectionsIEnumerable SystemCollectionsIEnumerable;
typedef struct _SystemCollectionsIEnumerableIface SystemCollectionsIEnumerableIface;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERATOR (system_collections_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumerator))
#define SYSTEM_COLLECTIONS_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumeratorIface))

typedef struct _SystemCollectionsIEnumerator SystemCollectionsIEnumerator;
typedef struct _SystemCollectionsIEnumeratorIface SystemCollectionsIEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY (system_collections_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionary))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionaryIface))

typedef struct _SystemCollectionsIDictionary SystemCollectionsIDictionary;
typedef struct _SystemCollectionsIDictionaryIface SystemCollectionsIDictionaryIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR (system_collections_idictionary_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumerator))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR))
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumeratorIface))

typedef struct _SystemCollectionsIDictionaryEnumerator SystemCollectionsIDictionaryEnumerator;
typedef struct _SystemCollectionsIDictionaryEnumeratorIface SystemCollectionsIDictionaryEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY (system_collections_dictionary_entry_get_type ())
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntry))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))

typedef struct _SystemCollectionsDictionaryEntry SystemCollectionsDictionaryEntry;
typedef struct _SystemCollectionsDictionaryEntryClass SystemCollectionsDictionaryEntryClass;

#define SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER (system_collections_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparer))
#define SYSTEM_COLLECTIONS_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparerIface))

typedef struct _SystemCollectionsIEqualityComparer SystemCollectionsIEqualityComparer;
typedef struct _SystemCollectionsIEqualityComparerIface SystemCollectionsIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER (system_collections_ihash_code_provider_get_type ())
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProvider))
#define SYSTEM_COLLECTIONS_IS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER))
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProviderIface))

typedef struct _SystemCollectionsIHashCodeProvider SystemCollectionsIHashCodeProvider;
typedef struct _SystemCollectionsIHashCodeProviderIface SystemCollectionsIHashCodeProviderIface;

#define SYSTEM_COLLECTIONS_TYPE_ILIST (system_collections_ilist_get_type ())
#define SYSTEM_COLLECTIONS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIList))
#define SYSTEM_COLLECTIONS_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIListIface))

typedef struct _SystemCollectionsIList SystemCollectionsIList;
typedef struct _SystemCollectionsIListIface SystemCollectionsIListIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE (system_collections_istructural_comparable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparableIface))

typedef struct _SystemCollectionsIStructuralComparable SystemCollectionsIStructuralComparable;
typedef struct _SystemCollectionsIStructuralComparableIface SystemCollectionsIStructuralComparableIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE (system_collections_istructural_equatable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatableIface))

typedef struct _SystemCollectionsIStructuralEquatable SystemCollectionsIStructuralEquatable;
typedef struct _SystemCollectionsIStructuralEquatableIface SystemCollectionsIStructuralEquatableIface;
typedef struct _SystemCollectionsDictionaryEntryPrivate SystemCollectionsDictionaryEntryPrivate;
typedef struct _SystemCollectionsKeyValuePairs SystemCollectionsKeyValuePairs;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION (system_collections_generic_icollection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollectionIface))

typedef struct _SystemCollectionsGenericICollection SystemCollectionsGenericICollection;
typedef struct _SystemCollectionsGenericICollectionIface SystemCollectionsGenericICollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER (system_collections_generic_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparerIface))

typedef struct _SystemCollectionsGenericIComparer SystemCollectionsGenericIComparer;
typedef struct _SystemCollectionsGenericIComparerIface SystemCollectionsGenericIComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE (system_collections_generic_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerable))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerableIface))

typedef struct _SystemCollectionsGenericIEnumerable SystemCollectionsGenericIEnumerable;
typedef struct _SystemCollectionsGenericIEnumerableIface SystemCollectionsGenericIEnumerableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR (system_collections_generic_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumeratorIface))

typedef struct _SystemCollectionsGenericIEnumerator SystemCollectionsGenericIEnumerator;
typedef struct _SystemCollectionsGenericIEnumeratorIface SystemCollectionsGenericIEnumeratorIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY (system_collections_generic_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionaryIface))

typedef struct _SystemCollectionsGenericIDictionary SystemCollectionsGenericIDictionary;
typedef struct _SystemCollectionsGenericIDictionaryIface SystemCollectionsGenericIDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER (system_collections_generic_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparerIface))

typedef struct _SystemCollectionsGenericIEqualityComparer SystemCollectionsGenericIEqualityComparer;
typedef struct _SystemCollectionsGenericIEqualityComparerIface SystemCollectionsGenericIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST (system_collections_generic_ilist_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_GENERIC_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIListIface))

typedef struct _SystemCollectionsGenericIList SystemCollectionsGenericIList;
typedef struct _SystemCollectionsGenericIListIface SystemCollectionsGenericIListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET (system_collections_generic_iset_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ISET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISet))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ISET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET))
#define SYSTEM_COLLECTIONS_GENERIC_ISET_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISetIface))

typedef struct _SystemCollectionsGenericISet SystemCollectionsGenericISet;
typedef struct _SystemCollectionsGenericISetIface SystemCollectionsGenericISetIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION (system_collections_generic_iread_only_collection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollectionIface))

typedef struct _SystemCollectionsGenericIReadOnlyCollection SystemCollectionsGenericIReadOnlyCollection;
typedef struct _SystemCollectionsGenericIReadOnlyCollectionIface SystemCollectionsGenericIReadOnlyCollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY (system_collections_generic_iread_only_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionaryIface))

typedef struct _SystemCollectionsGenericIReadOnlyDictionary SystemCollectionsGenericIReadOnlyDictionary;
typedef struct _SystemCollectionsGenericIReadOnlyDictionaryIface SystemCollectionsGenericIReadOnlyDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST (system_collections_generic_iread_only_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyListIface))

typedef struct _SystemCollectionsGenericIReadOnlyList SystemCollectionsGenericIReadOnlyList;
typedef struct _SystemCollectionsGenericIReadOnlyListIface SystemCollectionsGenericIReadOnlyListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR (system_collections_generic_key_value_pair_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePair))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))

typedef struct _SystemCollectionsGenericKeyValuePair SystemCollectionsGenericKeyValuePair;
typedef struct _SystemCollectionsGenericKeyValuePairClass SystemCollectionsGenericKeyValuePairClass;
typedef struct _SystemCollectionsGenericKeyValuePairPrivate SystemCollectionsGenericKeyValuePairPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST (system_collections_generic_abstract_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractList))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractListClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ABSTRACT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_ABSTRACT_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ABSTRACT_LIST, SystemCollectionsGenericAbstractListClass))

typedef struct _SystemCollectionsGenericAbstractList SystemCollectionsGenericAbstractList;
typedef struct _SystemCollectionsGenericAbstractListClass SystemCollectionsGenericAbstractListClass;
typedef struct _SystemCollectionsGenericAbstractListPrivate SystemCollectionsGenericAbstractListPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST (system_collections_generic_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericList))
#define SYSTEM_COLLECTIONS_GENERIC_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericListClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_LIST, SystemCollectionsGenericListClass))

typedef struct _SystemCollectionsGenericList SystemCollectionsGenericList;
typedef struct _SystemCollectionsGenericListClass SystemCollectionsGenericListClass;
typedef struct _SystemCollectionsGenericListPrivate SystemCollectionsGenericListPrivate;

#define SYSTEM_TYPE_NULLABLE (system_nullable_get_type ())
#define SYSTEM_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_NULLABLE, SystemNullable))
#define SYSTEM_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TYPE_NULLABLE, SystemNullableClass))
#define SYSTEM_IS_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_IS_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_NULLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TYPE_NULLABLE, SystemNullableClass))

typedef struct _SystemNullable SystemNullable;
typedef struct _SystemNullableClass SystemNullableClass;
typedef struct _SystemNullablePrivate SystemNullablePrivate;

#define SYSTEM_TYPE_IDISPOSABLE (system_idisposable_get_type ())
#define SYSTEM_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposable))
#define SYSTEM_IS_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IDISPOSABLE))
#define SYSTEM_IDISPOSABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposableIface))

typedef struct _SystemIDisposable SystemIDisposable;
typedef struct _SystemIDisposableIface SystemIDisposableIface;

#define SYSTEM_TYPE_ICOMPARABLE (system_icomparable_get_type ())
#define SYSTEM_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparable))
#define SYSTEM_IS_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICOMPARABLE))
#define SYSTEM_ICOMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparableIface))

typedef struct _SystemIComparable SystemIComparable;
typedef struct _SystemIComparableIface SystemIComparableIface;

#define SYSTEM_TYPE_IEQUATABLE (system_iequatable_get_type ())
#define SYSTEM_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatable))
#define SYSTEM_IS_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IEQUATABLE))
#define SYSTEM_IEQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatableIface))

typedef struct _SystemIEquatable SystemIEquatable;
typedef struct _SystemIEquatableIface SystemIEquatableIface;

#define SYSTEM_TYPE_ICLONEABLE (system_icloneable_get_type ())
#define SYSTEM_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneable))
#define SYSTEM_IS_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICLONEABLE))
#define SYSTEM_ICLONEABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneableIface))

typedef struct _SystemICloneable SystemICloneable;
typedef struct _SystemICloneableIface SystemICloneableIface;

#define SYSTEM_GLOBALIZATION_CULTURE_INFO_TYPE_STRING_COMPARISON (system_globalization_culture_info_string_comparison_get_type ())

struct _SystemCollectionsICollectionIface {
	GTypeInterface parent_iface;
	void (*CopyTo) (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
	gint (*get_size) (SystemCollectionsICollection* self);
	gint (*get_Count) (SystemCollectionsICollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsICollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsICollection* self);
};

struct _SystemCollectionsIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsIComparer* self, GObject* x, GObject* y);
};

struct _SystemCollectionsIEnumeratorIface {
	GTypeInterface parent_iface;
	gboolean (*next) (SystemCollectionsIEnumerator* self);
	gboolean (*MoveNext) (SystemCollectionsIEnumerator* self);
	GObject* (*get) (SystemCollectionsIEnumerator* self);
	void (*Reset) (SystemCollectionsIEnumerator* self);
	GObject* (*get_Current) (SystemCollectionsIEnumerator* self);
};

struct _SystemCollectionsIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsIEnumerator* (*iterator) (SystemCollectionsIEnumerable* self);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsIEnumerable* self);
};

struct _SystemCollectionsIDictionaryEnumeratorIface {
	GTypeInterface parent_iface;
	GObject* (*get_Key) (SystemCollectionsIDictionaryEnumerator* self);
	GObject* (*get_Value) (SystemCollectionsIDictionaryEnumerator* self);
	SystemCollectionsDictionaryEntry* (*get_Entry) (SystemCollectionsIDictionaryEnumerator* self);
};

struct _SystemCollectionsIDictionaryIface {
	GTypeInterface parent_iface;
	GObject* (*get) (SystemCollectionsIDictionary* self, GObject* key);
	void (*set) (SystemCollectionsIDictionary* self, GObject* key);
	void (*Add) (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
	void (*Clear) (SystemCollectionsIDictionary* self);
	gboolean (*Contains) (SystemCollectionsIDictionary* self, GObject* key);
	SystemCollectionsIDictionaryEnumerator* (*GetEnumerator) (SystemCollectionsIDictionary* self);
	void (*Remove) (SystemCollectionsIDictionary* self, GObject* key);
	gboolean (*get_IsFixedSize) (SystemCollectionsIDictionary* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsIDictionary* self);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsIDictionary* self);
	void (*set_Keys) (SystemCollectionsIDictionary* self, SystemCollectionsICollection* value);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsIDictionary* self);
};

struct _SystemCollectionsIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
	gint (*GetHashCode) (SystemCollectionsIEqualityComparer* self, GObject* obj);
};

struct _SystemCollectionsIHashCodeProviderIface {
	GTypeInterface parent_iface;
	gint (*GetHashCode) (SystemCollectionsIHashCodeProvider* self, GObject* obj);
};

struct _SystemCollectionsIListIface {
	GTypeInterface parent_iface;
	GObject* (*get) (SystemCollectionsIList* self, gint index);
	void (*set) (SystemCollectionsIList* self, gint index, GObject* item);
	gint (*Add) (SystemCollectionsIList* self, GObject* item);
	void (*Clear) (SystemCollectionsIList* self);
	gboolean (*contains) (SystemCollectionsIList* self, GObject* item);
	gboolean (*Contains) (SystemCollectionsIList* self, GObject* item);
	gint (*IndexOf) (SystemCollectionsIList* self, GObject* item);
	void (*Insert) (SystemCollectionsIList* self, gint index, GObject* value);
	void (*Remove) (SystemCollectionsIList* self, GObject* value);
	void (*RemoveAt) (SystemCollectionsIList* self, gint index);
	gboolean (*get_IsFixedSize) (SystemCollectionsIList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsIList* self);
};

struct _SystemCollectionsIStructuralComparableIface {
	GTypeInterface parent_iface;
	gint32 (*CompareTo) (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
};

struct _SystemCollectionsIStructuralEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
	gint (*GetHashCode) (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
};

struct _SystemCollectionsDictionaryEntry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsDictionaryEntryPrivate * priv;
};

struct _SystemCollectionsDictionaryEntryClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsDictionaryEntry *self);
};

struct _SystemCollectionsKeyValuePairs {
	GObject* _key;
	GObject* _value;
};

struct _SystemCollectionsGenericICollectionIface {
	GTypeInterface parent_iface;
	void (*Add) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*Clear) (SystemCollectionsGenericICollection* self);
	gboolean (*contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gboolean (*Contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*CopyTo) (SystemCollectionsGenericICollection* self, GArray* array, gint arrayIndex);
	gboolean (*Remove) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gint (*get_size) (SystemCollectionsGenericICollection* self);
	gint (*get_Count) (SystemCollectionsGenericICollection* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericICollection* self);
};

struct _SystemCollectionsGenericIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
};

struct _SystemCollectionsGenericIEnumeratorIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIEnumerator* self);
	gpointer (*get_Current) (SystemCollectionsGenericIEnumerator* self);
};

struct _SystemCollectionsGenericIEnumerableIface {
	GTypeInterface parent_iface;
	GType (*get_element_type) (SystemCollectionsGenericIEnumerable* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericIEnumerable* self);
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericIEnumerable* self);
};

struct _SystemCollectionsGenericIDictionaryIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	void (*set) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	void (*Add) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*ContainsKey) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*ContainsValue) (SystemCollectionsGenericIDictionary* self, gconstpointer value);
	gboolean (*Remove) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericICollection* (*get_Keys) (SystemCollectionsGenericIDictionary* self);
	void (*set_Keys) (SystemCollectionsGenericIDictionary* self, SystemCollectionsGenericICollection* value);
	SystemCollectionsGenericICollection* (*get_Values) (SystemCollectionsGenericIDictionary* self);
};

struct _SystemCollectionsGenericIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
	gint (*GetHashCode) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
};

struct _SystemCollectionsGenericIListIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIList* self, gint index);
	void (*set) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	gint (*IndexOf) (SystemCollectionsGenericIList* self, gconstpointer item, gint index);
	void (*Insert) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericIList* self, gint index);
};

struct _SystemCollectionsGenericISetIface {
	GTypeInterface parent_iface;
	gboolean (*Add) (SystemCollectionsGenericISet* self, gconstpointer value);
	void (*ExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*IntersectWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*Overlaps) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*SetEquals) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*SymmetricExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*UnionWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
};

struct _SystemCollectionsGenericIReadOnlyCollectionIface {
	GTypeInterface parent_iface;
	gint (*get_size) (SystemCollectionsGenericIReadOnlyCollection* self);
	gint (*get_Count) (SystemCollectionsGenericIReadOnlyCollection* self);
};

struct _SystemCollectionsGenericIReadOnlyDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*ContainsKey) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericIEnumerable* (*get_Keys) (SystemCollectionsGenericIReadOnlyDictionary* self);
	SystemCollectionsGenericIEnumerable* (*get_Values) (SystemCollectionsGenericIReadOnlyDictionary* self);
};

struct _SystemCollectionsGenericIReadOnlyListIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericIReadOnlyList* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericIReadOnlyList* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericIReadOnlyList* self);
	gpointer (*get) (SystemCollectionsGenericIReadOnlyList* self, gint index);
};

struct _SystemCollectionsGenericKeyValuePair {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsGenericKeyValuePairPrivate * priv;
};

struct _SystemCollectionsGenericKeyValuePairClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsGenericKeyValuePair *self);
};

typedef void (*SystemAction) (gconstpointer obj, void* user_data);
typedef gboolean (*SystemPredicate) (gconstpointer obj, void* user_data);
struct _SystemCollectionsGenericAbstractList {
	GObject parent_instance;
	SystemCollectionsGenericAbstractListPrivate * priv;
};

struct _SystemCollectionsGenericAbstractListClass {
	GObjectClass parent_class;
	GType (*get_element_type) (SystemCollectionsGenericAbstractList* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericAbstractList* self);
	gboolean (*contains) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	gint (*IndexOf) (SystemCollectionsGenericAbstractList* self, gconstpointer item, gint startIndex);
	gpointer (*get) (SystemCollectionsGenericAbstractList* self, gint index);
	void (*set) (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
	void (*Add) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	void (*AddRange) (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIEnumerable* collection);
	gint (*BinarySearch) (SystemCollectionsGenericAbstractList* self, gint index, gint count, gconstpointer item, SystemCollectionsGenericIComparer* comparer);
	void (*Clear) (SystemCollectionsGenericAbstractList* self);
	void (*CopyTo) (SystemCollectionsGenericAbstractList* self, GArray* array, gint arrayIndex);
	void (*ForEach) (SystemCollectionsGenericAbstractList* self, SystemAction action, void* action_target);
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericAbstractList* self);
	SystemCollectionsGenericIList* (*GetRange) (SystemCollectionsGenericAbstractList* self, gint index, gint count);
	void (*InsertRange) (SystemCollectionsGenericAbstractList* self, gint index, SystemCollectionsGenericIEnumerable* collection);
	void (*Insert) (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
	gint (*LastIndexOf) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	gboolean (*Remove) (SystemCollectionsGenericAbstractList* self, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericAbstractList* self, gint index);
	gint (*RemoveAll) (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
	void (*RemoveRange) (SystemCollectionsGenericAbstractList* self, gint index, gint count);
	void (*Reverse) (SystemCollectionsGenericAbstractList* self);
	void (*Sort) (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIComparer* comparer);
	void (*TrimExcess) (SystemCollectionsGenericAbstractList* self);
	gint (*get_size) (SystemCollectionsGenericAbstractList* self);
	gint (*get_Capacity) (SystemCollectionsGenericAbstractList* self);
	void (*set_Capacity) (SystemCollectionsGenericAbstractList* self, gint value);
	gint (*get_Count) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericAbstractList* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsGenericAbstractList* self);
	GObject* (*get_SyncRoot) (SystemCollectionsGenericAbstractList* self);
};

struct _SystemCollectionsGenericList {
	SystemCollectionsGenericAbstractList parent_instance;
	SystemCollectionsGenericListPrivate * priv;
};

struct _SystemCollectionsGenericListClass {
	SystemCollectionsGenericAbstractListClass parent_class;
};

struct _SystemNullable {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemNullablePrivate * priv;
	gpointer value;
};

struct _SystemNullableClass {
	GTypeClass parent_class;
	void (*finalize) (SystemNullable *self);
};

typedef gint (*SystemComparison) (gconstpointer x, gconstpointer y, void* user_data);
struct _SystemIDisposableIface {
	GTypeInterface parent_iface;
	void (*Dispose) (SystemIDisposable* self);
};

struct _SystemIComparableIface {
	GTypeInterface parent_iface;
	gint (*CompareTo) (SystemIComparable* self, gconstpointer other);
};

struct _SystemIEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemIEquatable* self, gconstpointer other);
};

struct _SystemICloneableIface {
	GTypeInterface parent_iface;
	GObject* (*Clone) (SystemICloneable* self);
};

typedef enum  {
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_CurrentCulture = 0,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_CurrentCultureIgnoreCase = 1,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_InvariantCulture = 2,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_InvariantCultureIgnoreCase = 3,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_Ordinal = 4,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_STRING_COMPARISON_OrdinalIgnoreCase = 5
} SystemGlobalizationCultureInfoStringComparison;


GType system_collections_icollection_get_type (void) G_GNUC_CONST;
void system_collections_icollection_CopyTo (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
gint system_collections_icollection_get_size (SystemCollectionsICollection* self);
gint system_collections_icollection_get_Count (SystemCollectionsICollection* self);
gboolean system_collections_icollection_get_IsSynchronized (SystemCollectionsICollection* self);
GObject* system_collections_icollection_get_SyncRoot (SystemCollectionsICollection* self);
GType system_collections_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_icomparer_Compare (SystemCollectionsIComparer* self, GObject* x, GObject* y);
GType system_collections_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_ienumerable_get_type (void) G_GNUC_CONST;
gpointer system_collections_dictionary_entry_ref (gpointer instance);
void system_collections_dictionary_entry_unref (gpointer instance);
GParamSpec* system_collections_param_spec_dictionary_entry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_value_set_dictionary_entry (GValue* value, gpointer v_object);
void system_collections_value_take_dictionary_entry (GValue* value, gpointer v_object);
gpointer system_collections_value_get_dictionary_entry (const GValue* value);
GType system_collections_dictionary_entry_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_enumerator_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_get_type (void) G_GNUC_CONST;
GObject* system_collections_idictionary_get (SystemCollectionsIDictionary* self, GObject* key);
void system_collections_idictionary_set (SystemCollectionsIDictionary* self, GObject* key);
void system_collections_idictionary_Add (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
void system_collections_idictionary_Clear (SystemCollectionsIDictionary* self);
gboolean system_collections_idictionary_Contains (SystemCollectionsIDictionary* self, GObject* key);
SystemCollectionsIDictionaryEnumerator* system_collections_idictionary_GetEnumerator (SystemCollectionsIDictionary* self);
void system_collections_idictionary_Remove (SystemCollectionsIDictionary* self, GObject* key);
gboolean system_collections_idictionary_get_IsFixedSize (SystemCollectionsIDictionary* self);
gboolean system_collections_idictionary_get_IsReadOnly (SystemCollectionsIDictionary* self);
SystemCollectionsICollection* system_collections_idictionary_get_Keys (SystemCollectionsIDictionary* self);
SystemCollectionsICollection* system_collections_idictionary_get_Values (SystemCollectionsIDictionary* self);
GObject* system_collections_idictionary_enumerator_get_Key (SystemCollectionsIDictionaryEnumerator* self);
GObject* system_collections_idictionary_enumerator_get_Value (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsDictionaryEntry* system_collections_idictionary_enumerator_get_Entry (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_iterator (SystemCollectionsIEnumerable* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_GetEnumerator (SystemCollectionsIEnumerable* self);
gboolean system_collections_ienumerator_next (SystemCollectionsIEnumerator* self);
gboolean system_collections_ienumerator_MoveNext (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_Reset (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get_Current (SystemCollectionsIEnumerator* self);
GType system_collections_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_iequality_comparer_Equals (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
gint system_collections_iequality_comparer_GetHashCode (SystemCollectionsIEqualityComparer* self, GObject* obj);
GType system_collections_ihash_code_provider_get_type (void) G_GNUC_CONST;
gint system_collections_ihash_code_provider_GetHashCode (SystemCollectionsIHashCodeProvider* self, GObject* obj);
GType system_collections_ilist_get_type (void) G_GNUC_CONST;
GObject* system_collections_ilist_get (SystemCollectionsIList* self, gint index);
void system_collections_ilist_set (SystemCollectionsIList* self, gint index, GObject* item);
gint system_collections_ilist_Add (SystemCollectionsIList* self, GObject* item);
void system_collections_ilist_Clear (SystemCollectionsIList* self);
gboolean system_collections_ilist_contains (SystemCollectionsIList* self, GObject* item);
gboolean system_collections_ilist_Contains (SystemCollectionsIList* self, GObject* item);
gint system_collections_ilist_IndexOf (SystemCollectionsIList* self, GObject* item);
void system_collections_ilist_Insert (SystemCollectionsIList* self, gint index, GObject* value);
void system_collections_ilist_Remove (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_RemoveAt (SystemCollectionsIList* self, gint index);
gboolean system_collections_ilist_get_IsFixedSize (SystemCollectionsIList* self);
gboolean system_collections_ilist_get_IsReadOnly (SystemCollectionsIList* self);
GType system_collections_istructural_comparable_get_type (void) G_GNUC_CONST;
gint32 system_collections_istructural_comparable_CompareTo (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
GType system_collections_istructural_equatable_get_type (void) G_GNUC_CONST;
gboolean system_collections_istructural_equatable_Equals (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
gint system_collections_istructural_equatable_GetHashCode (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_new (GObject* key, GObject* value);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_construct (GType object_type, GObject* key, GObject* value);
GObject* system_collections_dictionary_entry_get_Key (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Key (SystemCollectionsDictionaryEntry* self, GObject* value);
GObject* system_collections_dictionary_entry_get_Value (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Value (SystemCollectionsDictionaryEntry* self, GObject* value);
void system_collections_key_value_pairs_free (SystemCollectionsKeyValuePairs* self);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
GType system_collections_generic_icollection_get_type (void) G_GNUC_CONST;
void system_collections_generic_icollection_Add (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_Clear (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_contains (SystemCollectionsGenericICollection* self, gconstpointer item);
gboolean system_collections_generic_icollection_Contains (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_CopyTo (SystemCollectionsGenericICollection* self, GArray* array, gint arrayIndex);
gboolean system_collections_generic_icollection_Remove (SystemCollectionsGenericICollection* self, gconstpointer item);
gint system_collections_generic_icollection_get_size (SystemCollectionsGenericICollection* self);
gint system_collections_generic_icollection_get_Count (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_get_IsReadOnly (SystemCollectionsGenericICollection* self);
GType system_collections_generic_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_generic_icomparer_Compare (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
GType system_collections_generic_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_idictionary_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_idictionary_get (SystemCollectionsGenericIDictionary* self, gconstpointer key);
void system_collections_generic_idictionary_set (SystemCollectionsGenericIDictionary* self, gconstpointer key);
void system_collections_generic_idictionary_Add (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_idictionary_ContainsKey (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_ContainsValue (SystemCollectionsGenericIDictionary* self, gconstpointer value);
gboolean system_collections_generic_idictionary_Remove (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_TryGetValue (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Keys (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Values (SystemCollectionsGenericIDictionary* self);
GType system_collections_generic_ienumerable_get_element_type (SystemCollectionsGenericIEnumerable* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_iterator (SystemCollectionsGenericIEnumerable* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_GetEnumerator (SystemCollectionsGenericIEnumerable* self);
gpointer system_collections_generic_ienumerator_get (SystemCollectionsGenericIEnumerator* self);
gpointer system_collections_generic_ienumerator_get_Current (SystemCollectionsGenericIEnumerator* self);
GType system_collections_generic_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iequality_comparer_Equals (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
gint system_collections_generic_iequality_comparer_GetHashCode (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
GType system_collections_generic_ilist_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_ilist_get (SystemCollectionsGenericIList* self, gint index);
void system_collections_generic_ilist_set (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
gint system_collections_generic_ilist_IndexOf (SystemCollectionsGenericIList* self, gconstpointer item, gint index);
void system_collections_generic_ilist_Insert (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
void system_collections_generic_ilist_RemoveAt (SystemCollectionsGenericIList* self, gint index);
GType system_collections_generic_iset_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iset_Add (SystemCollectionsGenericISet* self, gconstpointer value);
void system_collections_generic_iset_ExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_IntersectWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_Overlaps (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_SetEquals (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_SymmetricExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_UnionWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
GType system_collections_generic_iread_only_collection_get_type (void) G_GNUC_CONST;
gint system_collections_generic_iread_only_collection_get_size (SystemCollectionsGenericIReadOnlyCollection* self);
gint system_collections_generic_iread_only_collection_get_Count (SystemCollectionsGenericIReadOnlyCollection* self);
GType system_collections_generic_iread_only_dictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iread_only_dictionary_ContainsKey (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
gboolean system_collections_generic_iread_only_dictionary_TryGetValue (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Keys (SystemCollectionsGenericIReadOnlyDictionary* self);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Values (SystemCollectionsGenericIReadOnlyDictionary* self);
GType system_collections_generic_iread_only_list_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_iread_only_list_get (SystemCollectionsGenericIReadOnlyList* self, gint index);
gpointer system_collections_generic_key_value_pair_ref (gpointer instance);
void system_collections_generic_key_value_pair_unref (gpointer instance);
GParamSpec* system_collections_generic_param_spec_key_value_pair (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_generic_value_set_key_value_pair (GValue* value, gpointer v_object);
void system_collections_generic_value_take_key_value_pair (GValue* value, gpointer v_object);
gpointer system_collections_generic_value_get_key_value_pair (const GValue* value);
GType system_collections_generic_key_value_pair_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
gchar* system_collections_generic_key_value_pair_ToString (SystemCollectionsGenericKeyValuePair* self, GString* s);
gconstpointer system_collections_generic_key_value_pair_get_Key (SystemCollectionsGenericKeyValuePair* self);
gconstpointer system_collections_generic_key_value_pair_get_Value (SystemCollectionsGenericKeyValuePair* self);
GType system_collections_generic_abstract_list_get_type (void) G_GNUC_CONST;
GType system_collections_generic_abstract_list_get_element_type (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_list_iterator (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_contains (SystemCollectionsGenericAbstractList* self, gconstpointer item);
gint system_collections_generic_abstract_list_IndexOf (SystemCollectionsGenericAbstractList* self, gconstpointer item, gint startIndex);
gpointer system_collections_generic_abstract_list_get (SystemCollectionsGenericAbstractList* self, gint index);
void system_collections_generic_abstract_list_set (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
void system_collections_generic_abstract_list_Add (SystemCollectionsGenericAbstractList* self, gconstpointer item);
void system_collections_generic_abstract_list_AddRange (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIEnumerable* collection);
gint system_collections_generic_abstract_list_BinarySearch (SystemCollectionsGenericAbstractList* self, gint index, gint count, gconstpointer item, SystemCollectionsGenericIComparer* comparer);
void system_collections_generic_abstract_list_Clear (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_CopyTo (SystemCollectionsGenericAbstractList* self, GArray* array, gint arrayIndex);
void system_collections_generic_abstract_list_ForEach (SystemCollectionsGenericAbstractList* self, SystemAction action, void* action_target);
SystemCollectionsGenericIEnumerator* system_collections_generic_abstract_list_GetEnumerator (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericIList* system_collections_generic_abstract_list_GetRange (SystemCollectionsGenericAbstractList* self, gint index, gint count);
void system_collections_generic_abstract_list_InsertRange (SystemCollectionsGenericAbstractList* self, gint index, SystemCollectionsGenericIEnumerable* collection);
void system_collections_generic_abstract_list_Insert (SystemCollectionsGenericAbstractList* self, gint index, gconstpointer item);
gint system_collections_generic_abstract_list_LastIndexOf (SystemCollectionsGenericAbstractList* self, gconstpointer item);
gboolean system_collections_generic_abstract_list_Remove (SystemCollectionsGenericAbstractList* self, gconstpointer item);
void system_collections_generic_abstract_list_RemoveAt (SystemCollectionsGenericAbstractList* self, gint index);
gint system_collections_generic_abstract_list_RemoveAll (SystemCollectionsGenericAbstractList* self, SystemPredicate match, void* match_target);
void system_collections_generic_abstract_list_RemoveRange (SystemCollectionsGenericAbstractList* self, gint index, gint count);
void system_collections_generic_abstract_list_Reverse (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_Sort (SystemCollectionsGenericAbstractList* self, SystemCollectionsGenericIComparer* comparer);
void system_collections_generic_abstract_list_TrimExcess (SystemCollectionsGenericAbstractList* self);
SystemCollectionsGenericAbstractList* system_collections_generic_abstract_list_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func);
gint system_collections_generic_abstract_list_get_size (SystemCollectionsGenericAbstractList* self);
gint system_collections_generic_abstract_list_get_Capacity (SystemCollectionsGenericAbstractList* self);
void system_collections_generic_abstract_list_set_Capacity (SystemCollectionsGenericAbstractList* self, gint value);
gint system_collections_generic_abstract_list_get_Count (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsFixedSize (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsReadOnly (SystemCollectionsGenericAbstractList* self);
gboolean system_collections_generic_abstract_list_get_IsSynchronized (SystemCollectionsGenericAbstractList* self);
GObject* system_collections_generic_abstract_list_get_SyncRoot (SystemCollectionsGenericAbstractList* self);
GType system_collections_generic_list_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericList* system_collections_generic_list_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* enumerable);
SystemCollectionsGenericList* system_collections_generic_list_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, SystemCollectionsGenericIEnumerable* enumerable);
SystemCollectionsGenericList* system_collections_generic_list_new_WithCapacity (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint defaultCapacity);
SystemCollectionsGenericList* system_collections_generic_list_construct_WithCapacity (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gint defaultCapacity);
gpointer system_nullable_ref (gpointer instance);
void system_nullable_unref (gpointer instance);
GParamSpec* system_param_spec_nullable (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_value_set_nullable (GValue* value, gpointer v_object);
void system_value_take_nullable (GValue* value, gpointer v_object);
gpointer system_value_get_nullable (const GValue* value);
GType system_nullable_get_type (void) G_GNUC_CONST;
SystemNullable* system_nullable_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
SystemNullable* system_nullable_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
gpointer system_nullable_GetValueOrDefault (SystemNullable* self, gconstpointer defaultValue);
gboolean system_nullable_Equals (SystemNullable* self, GObject* other);
gint system_nullable_GetHashCode (SystemNullable* self);
gchar* system_nullable_ToString (SystemNullable* self);
gboolean system_nullable_get_HasValue (SystemNullable* self);
gconstpointer system_nullable_get_Value (SystemNullable* self);
GType system_idisposable_get_type (void) G_GNUC_CONST;
void system_idisposable_Dispose (SystemIDisposable* self);
GType system_icomparable_get_type (void) G_GNUC_CONST;
gint system_icomparable_CompareTo (SystemIComparable* self, gconstpointer other);
GType system_iequatable_get_type (void) G_GNUC_CONST;
gboolean system_iequatable_Equals (SystemIEquatable* self, gconstpointer other);
GType system_icloneable_get_type (void) G_GNUC_CONST;
GObject* system_icloneable_Clone (SystemICloneable* self);
GType system_globalization_culture_info_string_comparison_get_type (void) G_GNUC_CONST;


G_END_DECLS

#endif
