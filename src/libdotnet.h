/* libdotnet.h generated by valac 0.26.2, the Vala compiler, do not modify */


#ifndef __LIBDOTNET_H__
#define __LIBDOTNET_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <gee.h>
#include <float.h>
#include <math.h>

G_BEGIN_DECLS


#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE (system_text_regular_expressions_capture_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCapture))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCaptureClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE, SystemTextRegularExpressionsCaptureClass))

typedef struct _SystemTextRegularExpressionsCapture SystemTextRegularExpressionsCapture;
typedef struct _SystemTextRegularExpressionsCaptureClass SystemTextRegularExpressionsCaptureClass;
typedef struct _SystemTextRegularExpressionsCapturePrivate SystemTextRegularExpressionsCapturePrivate;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERABLE (system_collections_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerable))
#define SYSTEM_COLLECTIONS_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERABLE, SystemCollectionsIEnumerableIface))

typedef struct _SystemCollectionsIEnumerable SystemCollectionsIEnumerable;
typedef struct _SystemCollectionsIEnumerableIface SystemCollectionsIEnumerableIface;

#define SYSTEM_COLLECTIONS_TYPE_IENUMERATOR (system_collections_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumerator))
#define SYSTEM_COLLECTIONS_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IENUMERATOR, SystemCollectionsIEnumeratorIface))

typedef struct _SystemCollectionsIEnumerator SystemCollectionsIEnumerator;
typedef struct _SystemCollectionsIEnumeratorIface SystemCollectionsIEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_ICOLLECTION (system_collections_icollection_get_type ())
#define SYSTEM_COLLECTIONS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollection))
#define SYSTEM_COLLECTIONS_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOLLECTION, SystemCollectionsICollectionIface))

typedef struct _SystemCollectionsICollection SystemCollectionsICollection;
typedef struct _SystemCollectionsICollectionIface SystemCollectionsICollectionIface;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION (system_text_regular_expressions_capture_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_CAPTURE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_CAPTURE_COLLECTION, SystemTextRegularExpressionsCaptureCollectionClass))

typedef struct _SystemTextRegularExpressionsCaptureCollection SystemTextRegularExpressionsCaptureCollection;
typedef struct _SystemTextRegularExpressionsCaptureCollectionClass SystemTextRegularExpressionsCaptureCollectionClass;
typedef struct _SystemTextRegularExpressionsCaptureCollectionPrivate SystemTextRegularExpressionsCaptureCollectionPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR (system_text_regular_expressions_capture_collection_enumerator_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsCaptureCollectionEnumerator))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsCaptureCollectionEnumeratorClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_IS_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_IS_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_CAPTURE_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsCaptureCollectionEnumeratorClass))

typedef struct _SystemTextRegularExpressionsCaptureCollectionEnumerator SystemTextRegularExpressionsCaptureCollectionEnumerator;
typedef struct _SystemTextRegularExpressionsCaptureCollectionEnumeratorClass SystemTextRegularExpressionsCaptureCollectionEnumeratorClass;
typedef struct _SystemTextRegularExpressionsCaptureCollectionEnumeratorPrivate SystemTextRegularExpressionsCaptureCollectionEnumeratorPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP (system_text_regular_expressions_group_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroup))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroupClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP, SystemTextRegularExpressionsGroupClass))

typedef struct _SystemTextRegularExpressionsGroup SystemTextRegularExpressionsGroup;
typedef struct _SystemTextRegularExpressionsGroupClass SystemTextRegularExpressionsGroupClass;
typedef struct _SystemTextRegularExpressionsGroupPrivate SystemTextRegularExpressionsGroupPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION (system_text_regular_expressions_group_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_GROUP_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_GROUP_COLLECTION, SystemTextRegularExpressionsGroupCollectionClass))

typedef struct _SystemTextRegularExpressionsGroupCollection SystemTextRegularExpressionsGroupCollection;
typedef struct _SystemTextRegularExpressionsGroupCollectionClass SystemTextRegularExpressionsGroupCollectionClass;
typedef struct _SystemTextRegularExpressionsGroupCollectionPrivate SystemTextRegularExpressionsGroupCollectionPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH (system_text_regular_expressions_match_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatch))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatchClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH, SystemTextRegularExpressionsMatchClass))

typedef struct _SystemTextRegularExpressionsMatch SystemTextRegularExpressionsMatch;
typedef struct _SystemTextRegularExpressionsMatchClass SystemTextRegularExpressionsMatchClass;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR (system_text_regular_expressions_group_collection_enumerator_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsGroupCollectionEnumerator))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsGroupCollectionEnumeratorClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_IS_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_IS_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_GROUP_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsGroupCollectionEnumeratorClass))

typedef struct _SystemTextRegularExpressionsGroupCollectionEnumerator SystemTextRegularExpressionsGroupCollectionEnumerator;
typedef struct _SystemTextRegularExpressionsGroupCollectionEnumeratorClass SystemTextRegularExpressionsGroupCollectionEnumeratorClass;
typedef struct _SystemTextRegularExpressionsGroupCollectionEnumeratorPrivate SystemTextRegularExpressionsGroupCollectionEnumeratorPrivate;
typedef struct _SystemTextRegularExpressionsMatchPrivate SystemTextRegularExpressionsMatchPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX (system_text_regular_expressions_static_regex_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegex))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegexClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_STATIC_REGEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_STATIC_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_STATIC_REGEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_STATIC_REGEX, SystemTextRegularExpressionsStaticRegexClass))

typedef struct _SystemTextRegularExpressionsStaticRegex SystemTextRegularExpressionsStaticRegex;
typedef struct _SystemTextRegularExpressionsStaticRegexClass SystemTextRegularExpressionsStaticRegexClass;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX (system_text_regular_expressions_regex_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegex))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegexClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_REGEX(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_REGEX_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX, SystemTextRegularExpressionsRegexClass))

typedef struct _SystemTextRegularExpressionsRegex SystemTextRegularExpressionsRegex;
typedef struct _SystemTextRegularExpressionsRegexClass SystemTextRegularExpressionsRegexClass;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION (system_text_regular_expressions_match_collection_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollection))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollectionClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_IS_MATCH_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_MATCH_COLLECTION, SystemTextRegularExpressionsMatchCollectionClass))

typedef struct _SystemTextRegularExpressionsMatchCollection SystemTextRegularExpressionsMatchCollection;
typedef struct _SystemTextRegularExpressionsMatchCollectionClass SystemTextRegularExpressionsMatchCollectionClass;
typedef struct _SystemTextRegularExpressionsMatchCollectionPrivate SystemTextRegularExpressionsMatchCollectionPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR (system_text_regular_expressions_match_collection_enumerator_get_type ())
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsMatchCollectionEnumerator))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsMatchCollectionEnumeratorClass))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_IS_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_IS_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR))
#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TEXT_REGULAR_EXPRESSIONS_MATCH_COLLECTION_TYPE_ENUMERATOR, SystemTextRegularExpressionsMatchCollectionEnumeratorClass))

typedef struct _SystemTextRegularExpressionsMatchCollectionEnumerator SystemTextRegularExpressionsMatchCollectionEnumerator;
typedef struct _SystemTextRegularExpressionsMatchCollectionEnumeratorClass SystemTextRegularExpressionsMatchCollectionEnumeratorClass;
typedef struct _SystemTextRegularExpressionsMatchCollectionEnumeratorPrivate SystemTextRegularExpressionsMatchCollectionEnumeratorPrivate;
typedef struct _SystemTextRegularExpressionsStaticRegexPrivate SystemTextRegularExpressionsStaticRegexPrivate;

#define SYSTEM_TEXT_REGULAR_EXPRESSIONS_TYPE_REGEX_OPTIONS (system_text_regular_expressions_regex_options_get_type ())
typedef struct _SystemTextRegularExpressionsRegexPrivate SystemTextRegularExpressionsRegexPrivate;

#define SYSTEM_COLLECTIONS_TYPE_ICOMPARER (system_collections_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparer))
#define SYSTEM_COLLECTIONS_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ICOMPARER, SystemCollectionsIComparerIface))

typedef struct _SystemCollectionsIComparer SystemCollectionsIComparer;
typedef struct _SystemCollectionsIComparerIface SystemCollectionsIComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY (system_collections_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionary))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY, SystemCollectionsIDictionaryIface))

typedef struct _SystemCollectionsIDictionary SystemCollectionsIDictionary;
typedef struct _SystemCollectionsIDictionaryIface SystemCollectionsIDictionaryIface;

#define SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR (system_collections_idictionary_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumerator))
#define SYSTEM_COLLECTIONS_IS_IDICTIONARY_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR))
#define SYSTEM_COLLECTIONS_IDICTIONARY_ENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IDICTIONARY_ENUMERATOR, SystemCollectionsIDictionaryEnumeratorIface))

typedef struct _SystemCollectionsIDictionaryEnumerator SystemCollectionsIDictionaryEnumerator;
typedef struct _SystemCollectionsIDictionaryEnumeratorIface SystemCollectionsIDictionaryEnumeratorIface;

#define SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY (system_collections_dictionary_entry_get_type ())
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntry))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY))
#define SYSTEM_COLLECTIONS_DICTIONARY_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_ENTRY, SystemCollectionsDictionaryEntryClass))

typedef struct _SystemCollectionsDictionaryEntry SystemCollectionsDictionaryEntry;
typedef struct _SystemCollectionsDictionaryEntryClass SystemCollectionsDictionaryEntryClass;

#define SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER (system_collections_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparer))
#define SYSTEM_COLLECTIONS_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IEQUALITY_COMPARER, SystemCollectionsIEqualityComparerIface))

typedef struct _SystemCollectionsIEqualityComparer SystemCollectionsIEqualityComparer;
typedef struct _SystemCollectionsIEqualityComparerIface SystemCollectionsIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER (system_collections_ihash_code_provider_get_type ())
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProvider))
#define SYSTEM_COLLECTIONS_IS_IHASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER))
#define SYSTEM_COLLECTIONS_IHASH_CODE_PROVIDER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_IHASH_CODE_PROVIDER, SystemCollectionsIHashCodeProviderIface))

typedef struct _SystemCollectionsIHashCodeProvider SystemCollectionsIHashCodeProvider;
typedef struct _SystemCollectionsIHashCodeProviderIface SystemCollectionsIHashCodeProviderIface;

#define SYSTEM_COLLECTIONS_TYPE_ILIST (system_collections_ilist_get_type ())
#define SYSTEM_COLLECTIONS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIList))
#define SYSTEM_COLLECTIONS_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ILIST, SystemCollectionsIListIface))

typedef struct _SystemCollectionsIList SystemCollectionsIList;
typedef struct _SystemCollectionsIListIface SystemCollectionsIListIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE (system_collections_istructural_comparable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_COMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_COMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_COMPARABLE, SystemCollectionsIStructuralComparableIface))

typedef struct _SystemCollectionsIStructuralComparable SystemCollectionsIStructuralComparable;
typedef struct _SystemCollectionsIStructuralComparableIface SystemCollectionsIStructuralComparableIface;

#define SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE (system_collections_istructural_equatable_get_type ())
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatable))
#define SYSTEM_COLLECTIONS_IS_ISTRUCTURAL_EQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE))
#define SYSTEM_COLLECTIONS_ISTRUCTURAL_EQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_TYPE_ISTRUCTURAL_EQUATABLE, SystemCollectionsIStructuralEquatableIface))

typedef struct _SystemCollectionsIStructuralEquatable SystemCollectionsIStructuralEquatable;
typedef struct _SystemCollectionsIStructuralEquatableIface SystemCollectionsIStructuralEquatableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE (system_collections_generic_ienumerable_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerable))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERABLE, SystemCollectionsGenericIEnumerableIface))

typedef struct _SystemCollectionsGenericIEnumerable SystemCollectionsGenericIEnumerable;
typedef struct _SystemCollectionsGenericIEnumerableIface SystemCollectionsGenericIEnumerableIface;

#define SYSTEM_TYPE_IDISPOSABLE (system_idisposable_get_type ())
#define SYSTEM_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposable))
#define SYSTEM_IS_IDISPOSABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IDISPOSABLE))
#define SYSTEM_IDISPOSABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IDISPOSABLE, SystemIDisposableIface))

typedef struct _SystemIDisposable SystemIDisposable;
typedef struct _SystemIDisposableIface SystemIDisposableIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR (system_collections_generic_ienumerator_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumerator))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR))
#define SYSTEM_COLLECTIONS_GENERIC_IENUMERATOR_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IENUMERATOR, SystemCollectionsGenericIEnumeratorIface))

typedef struct _SystemCollectionsGenericIEnumerator SystemCollectionsGenericIEnumerator;
typedef struct _SystemCollectionsGenericIEnumeratorIface SystemCollectionsGenericIEnumeratorIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION (system_collections_generic_icollection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_ICOLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOLLECTION, SystemCollectionsGenericICollectionIface))

typedef struct _SystemCollectionsGenericICollection SystemCollectionsGenericICollection;
typedef struct _SystemCollectionsGenericICollectionIface SystemCollectionsGenericICollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER (system_collections_generic_icomparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ICOMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_ICOMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ICOMPARER, SystemCollectionsGenericIComparerIface))

typedef struct _SystemCollectionsGenericIComparer SystemCollectionsGenericIComparer;
typedef struct _SystemCollectionsGenericIComparerIface SystemCollectionsGenericIComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY (system_collections_generic_idictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IDICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IDICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IDICTIONARY, SystemCollectionsGenericIDictionaryIface))

typedef struct _SystemCollectionsGenericIDictionary SystemCollectionsGenericIDictionary;
typedef struct _SystemCollectionsGenericIDictionaryIface SystemCollectionsGenericIDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER (system_collections_generic_iequality_comparer_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparer))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IEQUALITY_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER))
#define SYSTEM_COLLECTIONS_GENERIC_IEQUALITY_COMPARER_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IEQUALITY_COMPARER, SystemCollectionsGenericIEqualityComparerIface))

typedef struct _SystemCollectionsGenericIEqualityComparer SystemCollectionsGenericIEqualityComparer;
typedef struct _SystemCollectionsGenericIEqualityComparerIface SystemCollectionsGenericIEqualityComparerIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST (system_collections_generic_ilist_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ILIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ILIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST))
#define SYSTEM_COLLECTIONS_GENERIC_ILIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ILIST, SystemCollectionsGenericIListIface))

typedef struct _SystemCollectionsGenericIList SystemCollectionsGenericIList;
typedef struct _SystemCollectionsGenericIListIface SystemCollectionsGenericIListIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET (system_collections_generic_iset_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_ISET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISet))
#define SYSTEM_COLLECTIONS_GENERIC_IS_ISET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET))
#define SYSTEM_COLLECTIONS_GENERIC_ISET_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_ISET, SystemCollectionsGenericISetIface))

typedef struct _SystemCollectionsGenericISet SystemCollectionsGenericISet;
typedef struct _SystemCollectionsGenericISetIface SystemCollectionsGenericISetIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION (system_collections_generic_iread_only_collection_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollection))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_COLLECTION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_COLLECTION, SystemCollectionsGenericIReadOnlyCollectionIface))

typedef struct _SystemCollectionsGenericIReadOnlyCollection SystemCollectionsGenericIReadOnlyCollection;
typedef struct _SystemCollectionsGenericIReadOnlyCollectionIface SystemCollectionsGenericIReadOnlyCollectionIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY (system_collections_generic_iread_only_dictionary_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionary))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_DICTIONARY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_DICTIONARY_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_DICTIONARY, SystemCollectionsGenericIReadOnlyDictionaryIface))

typedef struct _SystemCollectionsGenericIReadOnlyDictionary SystemCollectionsGenericIReadOnlyDictionary;
typedef struct _SystemCollectionsGenericIReadOnlyDictionaryIface SystemCollectionsGenericIReadOnlyDictionaryIface;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST (system_collections_generic_iread_only_list_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyList))
#define SYSTEM_COLLECTIONS_GENERIC_IS_IREAD_ONLY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST))
#define SYSTEM_COLLECTIONS_GENERIC_IREAD_ONLY_LIST_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_IREAD_ONLY_LIST, SystemCollectionsGenericIReadOnlyListIface))

typedef struct _SystemCollectionsGenericIReadOnlyList SystemCollectionsGenericIReadOnlyList;
typedef struct _SystemCollectionsGenericIReadOnlyListIface SystemCollectionsGenericIReadOnlyListIface;

#define SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST (system_collections_array_list_get_type ())
#define SYSTEM_COLLECTIONS_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST, SystemCollectionsArrayList))
#define SYSTEM_COLLECTIONS_ARRAY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST, SystemCollectionsArrayListClass))
#define SYSTEM_COLLECTIONS_IS_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST))
#define SYSTEM_COLLECTIONS_IS_ARRAY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST))
#define SYSTEM_COLLECTIONS_ARRAY_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_ARRAY_LIST, SystemCollectionsArrayListClass))

typedef struct _SystemCollectionsArrayList SystemCollectionsArrayList;
typedef struct _SystemCollectionsArrayListClass SystemCollectionsArrayListClass;
typedef struct _SystemCollectionsArrayListPrivate SystemCollectionsArrayListPrivate;

#define SYSTEM_TYPE_ICLONEABLE (system_icloneable_get_type ())
#define SYSTEM_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneable))
#define SYSTEM_IS_ICLONEABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICLONEABLE))
#define SYSTEM_ICLONEABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICLONEABLE, SystemICloneableIface))

typedef struct _SystemICloneable SystemICloneable;
typedef struct _SystemICloneableIface SystemICloneableIface;

#define SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY (system_collections_bit_array_get_type ())
#define SYSTEM_COLLECTIONS_BIT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY, SystemCollectionsBitArray))
#define SYSTEM_COLLECTIONS_BIT_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY, SystemCollectionsBitArrayClass))
#define SYSTEM_COLLECTIONS_IS_BIT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY))
#define SYSTEM_COLLECTIONS_IS_BIT_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY))
#define SYSTEM_COLLECTIONS_BIT_ARRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_BIT_ARRAY, SystemCollectionsBitArrayClass))

typedef struct _SystemCollectionsBitArray SystemCollectionsBitArray;
typedef struct _SystemCollectionsBitArrayClass SystemCollectionsBitArrayClass;
typedef struct _SystemCollectionsBitArrayPrivate SystemCollectionsBitArrayPrivate;

#define SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER (system_collections_case_insensitive_comparer_get_type ())
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER, SystemCollectionsCaseInsensitiveComparer))
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER, SystemCollectionsCaseInsensitiveComparerClass))
#define SYSTEM_COLLECTIONS_IS_CASE_INSENSITIVE_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER))
#define SYSTEM_COLLECTIONS_IS_CASE_INSENSITIVE_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER))
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_COMPARER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_COMPARER, SystemCollectionsCaseInsensitiveComparerClass))

typedef struct _SystemCollectionsCaseInsensitiveComparer SystemCollectionsCaseInsensitiveComparer;
typedef struct _SystemCollectionsCaseInsensitiveComparerClass SystemCollectionsCaseInsensitiveComparerClass;
typedef struct _SystemCollectionsCaseInsensitiveComparerPrivate SystemCollectionsCaseInsensitiveComparerPrivate;

#define SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER (system_collections_case_insensitive_hash_code_provider_get_type ())
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_HASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER, SystemCollectionsCaseInsensitiveHashCodeProvider))
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_HASH_CODE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER, SystemCollectionsCaseInsensitiveHashCodeProviderClass))
#define SYSTEM_COLLECTIONS_IS_CASE_INSENSITIVE_HASH_CODE_PROVIDER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER))
#define SYSTEM_COLLECTIONS_IS_CASE_INSENSITIVE_HASH_CODE_PROVIDER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER))
#define SYSTEM_COLLECTIONS_CASE_INSENSITIVE_HASH_CODE_PROVIDER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_CASE_INSENSITIVE_HASH_CODE_PROVIDER, SystemCollectionsCaseInsensitiveHashCodeProviderClass))

typedef struct _SystemCollectionsCaseInsensitiveHashCodeProvider SystemCollectionsCaseInsensitiveHashCodeProvider;
typedef struct _SystemCollectionsCaseInsensitiveHashCodeProviderClass SystemCollectionsCaseInsensitiveHashCodeProviderClass;
typedef struct _SystemCollectionsCaseInsensitiveHashCodeProviderPrivate SystemCollectionsCaseInsensitiveHashCodeProviderPrivate;

#define SYSTEM_GLOBALIZATION_TYPE_CULTURE_INFO (system_globalization_culture_info_get_type ())

#define SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE (system_collections_collection_base_get_type ())
#define SYSTEM_COLLECTIONS_COLLECTION_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE, SystemCollectionsCollectionBase))
#define SYSTEM_COLLECTIONS_COLLECTION_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE, SystemCollectionsCollectionBaseClass))
#define SYSTEM_COLLECTIONS_IS_COLLECTION_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE))
#define SYSTEM_COLLECTIONS_IS_COLLECTION_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE))
#define SYSTEM_COLLECTIONS_COLLECTION_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_COLLECTION_BASE, SystemCollectionsCollectionBaseClass))

typedef struct _SystemCollectionsCollectionBase SystemCollectionsCollectionBase;
typedef struct _SystemCollectionsCollectionBaseClass SystemCollectionsCollectionBaseClass;
typedef struct _SystemCollectionsCollectionBasePrivate SystemCollectionsCollectionBasePrivate;

#define SYSTEM_COLLECTIONS_TYPE_COMPARER (system_collections_comparer_get_type ())
#define SYSTEM_COLLECTIONS_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_COMPARER, SystemCollectionsComparer))
#define SYSTEM_COLLECTIONS_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_COMPARER, SystemCollectionsComparerClass))
#define SYSTEM_COLLECTIONS_IS_COMPARER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_COMPARER))
#define SYSTEM_COLLECTIONS_IS_COMPARER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_COMPARER))
#define SYSTEM_COLLECTIONS_COMPARER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_COMPARER, SystemCollectionsComparerClass))

typedef struct _SystemCollectionsComparer SystemCollectionsComparer;
typedef struct _SystemCollectionsComparerClass SystemCollectionsComparerClass;
typedef struct _SystemCollectionsComparerPrivate SystemCollectionsComparerPrivate;

#define SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE (system_collections_dictionary_base_get_type ())
#define SYSTEM_COLLECTIONS_DICTIONARY_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE, SystemCollectionsDictionaryBase))
#define SYSTEM_COLLECTIONS_DICTIONARY_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE, SystemCollectionsDictionaryBaseClass))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE))
#define SYSTEM_COLLECTIONS_IS_DICTIONARY_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE))
#define SYSTEM_COLLECTIONS_DICTIONARY_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_DICTIONARY_BASE, SystemCollectionsDictionaryBaseClass))

typedef struct _SystemCollectionsDictionaryBase SystemCollectionsDictionaryBase;
typedef struct _SystemCollectionsDictionaryBaseClass SystemCollectionsDictionaryBaseClass;
typedef struct _SystemCollectionsDictionaryBasePrivate SystemCollectionsDictionaryBasePrivate;

#define SYSTEM_COLLECTIONS_TYPE_HASHTABLE (system_collections_hashtable_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtable))
#define SYSTEM_COLLECTIONS_HASHTABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtableClass))
#define SYSTEM_COLLECTIONS_IS_HASHTABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE))
#define SYSTEM_COLLECTIONS_IS_HASHTABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_HASHTABLE))
#define SYSTEM_COLLECTIONS_HASHTABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_HASHTABLE, SystemCollectionsHashtableClass))

typedef struct _SystemCollectionsHashtable SystemCollectionsHashtable;
typedef struct _SystemCollectionsHashtableClass SystemCollectionsHashtableClass;
typedef struct _SystemCollectionsHashtablePrivate SystemCollectionsHashtablePrivate;
typedef struct _SystemCollectionsKeyValuePairs SystemCollectionsKeyValuePairs;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION (system_collections_hashtable_key_collection_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollection))
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollectionClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_KEY_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_KEY_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_KEY_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_KEY_COLLECTION, SystemCollectionsHashtableKeyCollectionClass))

typedef struct _SystemCollectionsHashtableKeyCollection SystemCollectionsHashtableKeyCollection;
typedef struct _SystemCollectionsHashtableKeyCollectionClass SystemCollectionsHashtableKeyCollectionClass;
typedef struct _SystemCollectionsHashtableKeyCollectionPrivate SystemCollectionsHashtableKeyCollectionPrivate;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION (system_collections_hashtable_value_collection_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollection))
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollectionClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_VALUE_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_VALUE_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION))
#define SYSTEM_COLLECTIONS_HASHTABLE_VALUE_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_VALUE_COLLECTION, SystemCollectionsHashtableValueCollectionClass))

typedef struct _SystemCollectionsHashtableValueCollection SystemCollectionsHashtableValueCollection;
typedef struct _SystemCollectionsHashtableValueCollectionClass SystemCollectionsHashtableValueCollectionClass;
typedef struct _SystemCollectionsHashtableValueCollectionPrivate SystemCollectionsHashtableValueCollectionPrivate;

#define SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR (system_collections_hashtable_hashtable_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumerator))
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumeratorClass))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_HASHTABLE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_HASHTABLE_IS_HASHTABLE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_HASHTABLE_HASHTABLE_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_HASHTABLE_TYPE_HASHTABLE_ENUMERATOR, SystemCollectionsHashtableHashtableEnumeratorClass))

typedef struct _SystemCollectionsHashtableHashtableEnumerator SystemCollectionsHashtableHashtableEnumerator;
typedef struct _SystemCollectionsHashtableHashtableEnumeratorClass SystemCollectionsHashtableHashtableEnumeratorClass;
typedef struct _SystemCollectionsHashtableHashtableEnumeratorPrivate SystemCollectionsHashtableHashtableEnumeratorPrivate;

#define SYSTEM_COLLECTIONS_TYPE_QUEUE (system_collections_queue_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueue))
#define SYSTEM_COLLECTIONS_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueueClass))
#define SYSTEM_COLLECTIONS_IS_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_IS_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_QUEUE, SystemCollectionsQueueClass))

typedef struct _SystemCollectionsQueue SystemCollectionsQueue;
typedef struct _SystemCollectionsQueueClass SystemCollectionsQueueClass;
typedef struct _SystemCollectionsQueuePrivate SystemCollectionsQueuePrivate;

#define SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE (system_collections_queue_synchronized_queue_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueue))
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueueClass))
#define SYSTEM_COLLECTIONS_QUEUE_IS_SYNCHRONIZED_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_IS_SYNCHRONIZED_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE))
#define SYSTEM_COLLECTIONS_QUEUE_SYNCHRONIZED_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_SYNCHRONIZED_QUEUE, SystemCollectionsQueueSynchronizedQueueClass))

typedef struct _SystemCollectionsQueueSynchronizedQueue SystemCollectionsQueueSynchronizedQueue;
typedef struct _SystemCollectionsQueueSynchronizedQueueClass SystemCollectionsQueueSynchronizedQueueClass;
typedef struct _SystemCollectionsQueueSynchronizedQueuePrivate SystemCollectionsQueueSynchronizedQueuePrivate;

#define SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR (system_collections_queue_queue_enumerator_get_type ())
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumerator))
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumeratorClass))
#define SYSTEM_COLLECTIONS_QUEUE_IS_QUEUE_ENUMERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_QUEUE_IS_QUEUE_ENUMERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR))
#define SYSTEM_COLLECTIONS_QUEUE_QUEUE_ENUMERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_QUEUE_TYPE_QUEUE_ENUMERATOR, SystemCollectionsQueueQueueEnumeratorClass))

typedef struct _SystemCollectionsQueueQueueEnumerator SystemCollectionsQueueQueueEnumerator;
typedef struct _SystemCollectionsQueueQueueEnumeratorClass SystemCollectionsQueueQueueEnumeratorClass;
typedef struct _SystemCollectionsQueueQueueEnumeratorPrivate SystemCollectionsQueueQueueEnumeratorPrivate;

#define SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE (system_collections_read_only_collection_base_get_type ())
#define SYSTEM_COLLECTIONS_READ_ONLY_COLLECTION_BASE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE, SystemCollectionsReadOnlyCollectionBase))
#define SYSTEM_COLLECTIONS_READ_ONLY_COLLECTION_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE, SystemCollectionsReadOnlyCollectionBaseClass))
#define SYSTEM_COLLECTIONS_IS_READ_ONLY_COLLECTION_BASE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE))
#define SYSTEM_COLLECTIONS_IS_READ_ONLY_COLLECTION_BASE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE))
#define SYSTEM_COLLECTIONS_READ_ONLY_COLLECTION_BASE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_READ_ONLY_COLLECTION_BASE, SystemCollectionsReadOnlyCollectionBaseClass))

typedef struct _SystemCollectionsReadOnlyCollectionBase SystemCollectionsReadOnlyCollectionBase;
typedef struct _SystemCollectionsReadOnlyCollectionBaseClass SystemCollectionsReadOnlyCollectionBaseClass;
typedef struct _SystemCollectionsReadOnlyCollectionBasePrivate SystemCollectionsReadOnlyCollectionBasePrivate;

#define SYSTEM_COLLECTIONS_TYPE_SORTED_LIST (system_collections_sorted_list_get_type ())
#define SYSTEM_COLLECTIONS_SORTED_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedList))
#define SYSTEM_COLLECTIONS_SORTED_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedListClass))
#define SYSTEM_COLLECTIONS_IS_SORTED_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST))
#define SYSTEM_COLLECTIONS_IS_SORTED_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST))
#define SYSTEM_COLLECTIONS_SORTED_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_SORTED_LIST, SystemCollectionsSortedListClass))

typedef struct _SystemCollectionsSortedList SystemCollectionsSortedList;
typedef struct _SystemCollectionsSortedListClass SystemCollectionsSortedListClass;
typedef struct _SystemCollectionsSortedListPrivate SystemCollectionsSortedListPrivate;

#define SYSTEM_COLLECTIONS_TYPE_STACK (system_collections_stack_get_type ())
#define SYSTEM_COLLECTIONS_STACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_STACK, SystemCollectionsStack))
#define SYSTEM_COLLECTIONS_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_STACK, SystemCollectionsStackClass))
#define SYSTEM_COLLECTIONS_IS_STACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_STACK))
#define SYSTEM_COLLECTIONS_IS_STACK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_STACK))
#define SYSTEM_COLLECTIONS_STACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_STACK, SystemCollectionsStackClass))

typedef struct _SystemCollectionsStack SystemCollectionsStack;
typedef struct _SystemCollectionsStackClass SystemCollectionsStackClass;
typedef struct _SystemCollectionsStackPrivate SystemCollectionsStackPrivate;

#define SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS (system_collections_structural_comparisons_get_type ())
#define SYSTEM_COLLECTIONS_STRUCTURAL_COMPARISONS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS, SystemCollectionsStructuralComparisons))
#define SYSTEM_COLLECTIONS_STRUCTURAL_COMPARISONS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS, SystemCollectionsStructuralComparisonsClass))
#define SYSTEM_COLLECTIONS_IS_STRUCTURAL_COMPARISONS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS))
#define SYSTEM_COLLECTIONS_IS_STRUCTURAL_COMPARISONS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS))
#define SYSTEM_COLLECTIONS_STRUCTURAL_COMPARISONS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_TYPE_STRUCTURAL_COMPARISONS, SystemCollectionsStructuralComparisonsClass))

typedef struct _SystemCollectionsStructuralComparisons SystemCollectionsStructuralComparisons;
typedef struct _SystemCollectionsStructuralComparisonsClass SystemCollectionsStructuralComparisonsClass;
typedef struct _SystemCollectionsStructuralComparisonsPrivate SystemCollectionsStructuralComparisonsPrivate;
typedef struct _SystemCollectionsDictionaryEntryPrivate SystemCollectionsDictionaryEntryPrivate;

#define SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR (system_collections_generic_key_value_pair_get_type ())
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePair))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_IS_KEY_VALUE_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR))
#define SYSTEM_COLLECTIONS_GENERIC_KEY_VALUE_PAIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_COLLECTIONS_GENERIC_TYPE_KEY_VALUE_PAIR, SystemCollectionsGenericKeyValuePairClass))

typedef struct _SystemCollectionsGenericKeyValuePair SystemCollectionsGenericKeyValuePair;
typedef struct _SystemCollectionsGenericKeyValuePairClass SystemCollectionsGenericKeyValuePairClass;
typedef struct _SystemCollectionsGenericKeyValuePairPrivate SystemCollectionsGenericKeyValuePairPrivate;

#define SYSTEM_TYPE_NULLABLE (system_nullable_get_type ())
#define SYSTEM_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_NULLABLE, SystemNullable))
#define SYSTEM_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SYSTEM_TYPE_NULLABLE, SystemNullableClass))
#define SYSTEM_IS_NULLABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_IS_NULLABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SYSTEM_TYPE_NULLABLE))
#define SYSTEM_NULLABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SYSTEM_TYPE_NULLABLE, SystemNullableClass))

typedef struct _SystemNullable SystemNullable;
typedef struct _SystemNullableClass SystemNullableClass;
typedef struct _SystemNullablePrivate SystemNullablePrivate;

#define SYSTEM_TYPE_ICOMPARABLE (system_icomparable_get_type ())
#define SYSTEM_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparable))
#define SYSTEM_IS_ICOMPARABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_ICOMPARABLE))
#define SYSTEM_ICOMPARABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_ICOMPARABLE, SystemIComparableIface))

typedef struct _SystemIComparable SystemIComparable;
typedef struct _SystemIComparableIface SystemIComparableIface;

#define SYSTEM_TYPE_IEQUATABLE (system_iequatable_get_type ())
#define SYSTEM_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatable))
#define SYSTEM_IS_IEQUATABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_TYPE_IEQUATABLE))
#define SYSTEM_IEQUATABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_TYPE_IEQUATABLE, SystemIEquatableIface))

typedef struct _SystemIEquatable SystemIEquatable;
typedef struct _SystemIEquatableIface SystemIEquatableIface;

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE (system_runtime_serialization_iserializable_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializable))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_ISERIALIZABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE))
#define SYSTEM_RUNTIME_SERIALIZATION_ISERIALIZABLE_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_ISERIALIZABLE, SystemRuntimeSerializationISerializableIface))

typedef struct _SystemRuntimeSerializationISerializable SystemRuntimeSerializationISerializable;
typedef struct _SystemRuntimeSerializationISerializableIface SystemRuntimeSerializationISerializableIface;

#define SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK (system_runtime_serialization_ideserialization_callback_get_type ())
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallback))
#define SYSTEM_RUNTIME_SERIALIZATION_IS_IDESERIALIZATION_CALLBACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK))
#define SYSTEM_RUNTIME_SERIALIZATION_IDESERIALIZATION_CALLBACK_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SYSTEM_RUNTIME_SERIALIZATION_TYPE_IDESERIALIZATION_CALLBACK, SystemRuntimeSerializationIDeserializationCallbackIface))

typedef struct _SystemRuntimeSerializationIDeserializationCallback SystemRuntimeSerializationIDeserializationCallback;
typedef struct _SystemRuntimeSerializationIDeserializationCallbackIface SystemRuntimeSerializationIDeserializationCallbackIface;

struct _SystemTextRegularExpressionsCapture {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsCapturePrivate * priv;
	gchar* _text;
	gint _index;
	gint _length;
};

struct _SystemTextRegularExpressionsCaptureClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsCapture *self);
};

struct _SystemCollectionsIEnumeratorIface {
	GTypeInterface parent_iface;
	gboolean (*MoveNext) (SystemCollectionsIEnumerator* self);
	gboolean (*next) (SystemCollectionsIEnumerator* self);
	GObject* (*get) (SystemCollectionsIEnumerator* self);
	void (*Reset) (SystemCollectionsIEnumerator* self);
	GObject* (*get__currentElement) (SystemCollectionsIEnumerator* self);
	void (*set__currentElement) (SystemCollectionsIEnumerator* self, GObject* value);
	GeeIterator* (*get__iterator) (SystemCollectionsIEnumerator* self);
	void (*set__iterator) (SystemCollectionsIEnumerator* self, GeeIterator* value);
	GObject* (*get_Current) (SystemCollectionsIEnumerator* self);
};

struct _SystemCollectionsIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsIEnumerable* self);
};

struct _SystemCollectionsICollectionIface {
	GTypeInterface parent_iface;
	void (*CopyTo) (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
	SystemCollectionsIEnumerator* (*iterator) (SystemCollectionsICollection* self);
	gint (*get_Count) (SystemCollectionsICollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsICollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsICollection* self);
};

struct _SystemTextRegularExpressionsCaptureCollection {
	GObject parent_instance;
	SystemTextRegularExpressionsCaptureCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsCaptureCollectionClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsCaptureCollectionEnumerator {
	GObject parent_instance;
	SystemTextRegularExpressionsCaptureCollectionEnumeratorPrivate * priv;
};

struct _SystemTextRegularExpressionsCaptureCollectionEnumeratorClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsGroup {
	SystemTextRegularExpressionsCapture parent_instance;
	SystemTextRegularExpressionsGroupPrivate * priv;
	gint _capcount;
	SystemTextRegularExpressionsCaptureCollection* _capcoll;
};

struct _SystemTextRegularExpressionsGroupClass {
	SystemTextRegularExpressionsCaptureClass parent_class;
};

struct _SystemTextRegularExpressionsGroupCollection {
	GObject parent_instance;
	SystemTextRegularExpressionsGroupCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsGroupCollectionClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsGroupCollectionEnumerator {
	GObject parent_instance;
	SystemTextRegularExpressionsGroupCollectionEnumeratorPrivate * priv;
};

struct _SystemTextRegularExpressionsGroupCollectionEnumeratorClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsMatch {
	SystemTextRegularExpressionsGroup parent_instance;
	SystemTextRegularExpressionsMatchPrivate * priv;
	SystemTextRegularExpressionsGroupCollection* _groupcoll;
	GMatchInfo* _matchinfo;
};

struct _SystemTextRegularExpressionsMatchClass {
	SystemTextRegularExpressionsGroupClass parent_class;
	void (*Reset) (SystemTextRegularExpressionsMatch* self, SystemTextRegularExpressionsRegex* regex, const gchar* text, gint textbeg, gint textend, gint textstart);
	gchar* (*Result) (SystemTextRegularExpressionsMatch* self, const gchar* replacement);
	SystemTextRegularExpressionsGroupCollection* (*get_Groups) (SystemTextRegularExpressionsMatch* self);
};

struct _SystemTextRegularExpressionsMatchCollection {
	GObject parent_instance;
	SystemTextRegularExpressionsMatchCollectionPrivate * priv;
};

struct _SystemTextRegularExpressionsMatchCollectionClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsMatchCollectionEnumerator {
	GObject parent_instance;
	SystemTextRegularExpressionsMatchCollectionEnumeratorPrivate * priv;
};

struct _SystemTextRegularExpressionsMatchCollectionEnumeratorClass {
	GObjectClass parent_class;
};

struct _SystemTextRegularExpressionsStaticRegex {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemTextRegularExpressionsStaticRegexPrivate * priv;
};

struct _SystemTextRegularExpressionsStaticRegexClass {
	GTypeClass parent_class;
	void (*finalize) (SystemTextRegularExpressionsStaticRegex *self);
};

typedef enum  {
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_None = 0x0000,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_IgnoreCase = 0x0001,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Multiline = 0x0002,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_ExplicitCapture = 0x0004,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Compiled = 0x0008,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_Singleline = 0x0010,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_IgnorePatternWhitespace = 0x0020,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_RightToLeft = 0x0040,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_ECMAScript = 0x0100,
	SYSTEM_TEXT_REGULAR_EXPRESSIONS_REGEX_OPTIONS_CultureInvariant = 0x0200
} SystemTextRegularExpressionsRegexOptions;

struct _SystemTextRegularExpressionsRegex {
	SystemTextRegularExpressionsStaticRegex parent_instance;
	SystemTextRegularExpressionsRegexPrivate * priv;
	gchar* _pattern;
	SystemTextRegularExpressionsRegexOptions _roptions;
	GRegex* _regex;
	GTimeSpan _internalMatchTimeout;
	gint _capsize;
};

struct _SystemTextRegularExpressionsRegexClass {
	SystemTextRegularExpressionsStaticRegexClass parent_class;
};

struct _SystemCollectionsIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsIComparer* self, GObject* x, GObject* y);
};

struct _SystemCollectionsIDictionaryEnumeratorIface {
	GTypeInterface parent_iface;
	GeeMapIterator* (*get__iterator) (SystemCollectionsIDictionaryEnumerator* self);
	void (*set__iterator) (SystemCollectionsIDictionaryEnumerator* self, GeeMapIterator* value);
	GObject* (*get_Key) (SystemCollectionsIDictionaryEnumerator* self);
	GObject* (*get_Value) (SystemCollectionsIDictionaryEnumerator* self);
	SystemCollectionsDictionaryEntry* (*get_Entry) (SystemCollectionsIDictionaryEnumerator* self);
};

struct _SystemCollectionsIDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*Contains) (SystemCollectionsIDictionary* self, GObject* key);
	void (*Add) (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
	void (*Clear) (SystemCollectionsIDictionary* self);
	SystemCollectionsIDictionaryEnumerator* (*GetEnumerator) (SystemCollectionsIDictionary* self);
	void (*Remove) (SystemCollectionsIDictionary* self, GObject* key);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsIDictionary* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsIDictionary* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsIDictionary* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsIDictionary* self);
};

struct _SystemCollectionsIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
	gint (*GetHashCode) (SystemCollectionsIEqualityComparer* self, GObject* obj);
};

struct _SystemCollectionsIHashCodeProviderIface {
	GTypeInterface parent_iface;
	gint (*GetHashCode) (SystemCollectionsIHashCodeProvider* self, GObject* obj);
};

struct _SystemCollectionsIListIface {
	GTypeInterface parent_iface;
	gint (*Add) (SystemCollectionsIList* self, GObject* value);
	gboolean (*Contains) (SystemCollectionsIList* self, GObject* value);
	void (*Clear) (SystemCollectionsIList* self);
	gint (*IndexOf) (SystemCollectionsIList* self, GObject* value);
	void (*Insert) (SystemCollectionsIList* self, gint index, GObject* value);
	void (*Remove) (SystemCollectionsIList* self, GObject* value);
	void (*RemoveAt) (SystemCollectionsIList* self, gint index);
	gboolean (*get_IsReadOnly) (SystemCollectionsIList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsIList* self);
};

struct _SystemCollectionsIStructuralComparableIface {
	GTypeInterface parent_iface;
	gint32 (*CompareTo) (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
};

struct _SystemCollectionsIStructuralEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
	gint (*GetHashCode) (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
};

struct _SystemIDisposableIface {
	GTypeInterface parent_iface;
	void (*Dispose) (SystemIDisposable* self);
};

struct _SystemCollectionsGenericIEnumeratorIface {
	GTypeInterface parent_iface;
	gconstpointer (*get_Current) (SystemCollectionsGenericIEnumerator* self);
};

struct _SystemCollectionsGenericIEnumerableIface {
	GTypeInterface parent_iface;
	SystemCollectionsGenericIEnumerator* (*GetEnumerator) (SystemCollectionsGenericIEnumerable* self);
};

struct _SystemCollectionsGenericICollectionIface {
	GTypeInterface parent_iface;
	GType (*get_t_type) (SystemCollectionsGenericICollection* self);
	GBoxedCopyFunc (*get_t_dup_func) (SystemCollectionsGenericICollection* self);
	GDestroyNotify (*get_t_destroy_func) (SystemCollectionsGenericICollection* self);
	SystemCollectionsGenericIEnumerator* (*iterator) (SystemCollectionsGenericICollection* self);
	void (*Add) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*Clear) (SystemCollectionsGenericICollection* self);
	gboolean (*Contains) (SystemCollectionsGenericICollection* self, gconstpointer item);
	void (*CopyTo) (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
	gboolean (*Remove) (SystemCollectionsGenericICollection* self, gconstpointer item);
	gint (*get_Count) (SystemCollectionsGenericICollection* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsGenericICollection* self);
};

struct _SystemCollectionsGenericIComparerIface {
	GTypeInterface parent_iface;
	gint (*Compare) (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
};

struct _SystemCollectionsGenericIDictionaryIface {
	GTypeInterface parent_iface;
	GType (*get_tkey_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tkey_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tkey_destroy_func) (SystemCollectionsGenericIDictionary* self);
	GType (*get_tvalue_type) (SystemCollectionsGenericIDictionary* self);
	GBoxedCopyFunc (*get_tvalue_dup_func) (SystemCollectionsGenericIDictionary* self);
	GDestroyNotify (*get_tvalue_destroy_func) (SystemCollectionsGenericIDictionary* self);
	gboolean (*ContainsKey) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*ContainsValue) (SystemCollectionsGenericIDictionary* self, gconstpointer value);
	void (*Add) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
	gboolean (*Remove) (SystemCollectionsGenericIDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
	gboolean (*IsCompatibleKey) (SystemCollectionsGenericIDictionary* self, GObject* key);
	SystemCollectionsGenericICollection* (*get_Keys) (SystemCollectionsGenericIDictionary* self);
	SystemCollectionsGenericICollection* (*get_Values) (SystemCollectionsGenericIDictionary* self);
};

struct _SystemCollectionsGenericIEqualityComparerIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
	gint (*GetHashCode) (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
};

struct _SystemCollectionsGenericIListIface {
	GTypeInterface parent_iface;
	gint (*IndexOf) (SystemCollectionsGenericIList* self, gconstpointer item);
	void (*Insert) (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
	void (*RemoveAt) (SystemCollectionsGenericIList* self, gint index);
};

struct _SystemCollectionsGenericISetIface {
	GTypeInterface parent_iface;
	gboolean (*Add) (SystemCollectionsGenericISet* self, gconstpointer value);
	void (*ExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*IntersectWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsProperSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSubsetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*IsSupersetOf) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*Overlaps) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	gboolean (*SetEquals) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*SymmetricExceptWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
	void (*UnionWith) (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
};

struct _SystemCollectionsGenericIReadOnlyCollectionIface {
	GTypeInterface parent_iface;
	gint (*get_Count) (SystemCollectionsGenericIReadOnlyCollection* self);
};

struct _SystemCollectionsGenericIReadOnlyDictionaryIface {
	GTypeInterface parent_iface;
	gboolean (*ContainsKey) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
	gboolean (*TryGetValue) (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
	SystemCollectionsGenericIEnumerable* (*get_Keys) (SystemCollectionsGenericIReadOnlyDictionary* self);
	SystemCollectionsGenericIEnumerable* (*get_Values) (SystemCollectionsGenericIReadOnlyDictionary* self);
};

struct _SystemCollectionsGenericIReadOnlyListIface {
	GTypeInterface parent_iface;
	gpointer (*get) (SystemCollectionsGenericIReadOnlyList* self, gint index);
};

struct _SystemCollectionsArrayList {
	GeeArrayList parent_instance;
	SystemCollectionsArrayListPrivate * priv;
};

struct _SystemCollectionsArrayListClass {
	GeeArrayListClass parent_class;
	void (*AddRange) (SystemCollectionsArrayList* self, SystemCollectionsICollection* c);
	gint (*BinarySearch) (SystemCollectionsArrayList* self, gint index, gint count, GObject* value, SystemCollectionsIComparer* comparer);
	GObject* (*Clone) (SystemCollectionsArrayList* self);
	void (*CopyToIndex) (SystemCollectionsArrayList* self, gint index, GObject** array, int array_length1, gint arrayIndex, gint count);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsArrayList* self);
	void (*InsertRange) (SystemCollectionsArrayList* self, gint index, SystemCollectionsICollection* c);
	gint (*LastIndexOf) (SystemCollectionsArrayList* self, GObject* value, gint startIndex, gint count);
	void (*RemoveRange) (SystemCollectionsArrayList* self, gint index, gint count);
	void (*Reverse) (SystemCollectionsArrayList* self, gint index, gint count);
	void (*SetRange) (SystemCollectionsArrayList* self, gint index, SystemCollectionsICollection* c);
	SystemCollectionsArrayList* (*GetRange) (SystemCollectionsArrayList* self, gint index, gint count);
	void (*Sort) (SystemCollectionsArrayList* self, gint index, gint count, SystemCollectionsIComparer* comparer);
	GObject** (*ToArray) (SystemCollectionsArrayList* self, int* result_length1);
	void (*TrimToSize) (SystemCollectionsArrayList* self);
	gint (*get_Capacity) (SystemCollectionsArrayList* self);
	void (*set_Capacity) (SystemCollectionsArrayList* self, gint value);
	gint (*get_Count) (SystemCollectionsArrayList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsArrayList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsArrayList* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsArrayList* self);
	GObject* (*get_SyncRoot) (SystemCollectionsArrayList* self);
};

struct _SystemICloneableIface {
	GTypeInterface parent_iface;
	GObject* (*Clone) (SystemICloneable* self);
};

struct _SystemCollectionsBitArray {
	GObject parent_instance;
	SystemCollectionsBitArrayPrivate * priv;
};

struct _SystemCollectionsBitArrayClass {
	GObjectClass parent_class;
};

struct _SystemCollectionsCaseInsensitiveComparer {
	GObject parent_instance;
	SystemCollectionsCaseInsensitiveComparerPrivate * priv;
};

struct _SystemCollectionsCaseInsensitiveComparerClass {
	GObjectClass parent_class;
};

struct _SystemCollectionsCaseInsensitiveHashCodeProvider {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsCaseInsensitiveHashCodeProviderPrivate * priv;
};

struct _SystemCollectionsCaseInsensitiveHashCodeProviderClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsCaseInsensitiveHashCodeProvider *self);
};

typedef enum  {
	SYSTEM_GLOBALIZATION_CULTURE_INFO_InvariantCulture,
	SYSTEM_GLOBALIZATION_CULTURE_INFO_CurrentCulture
} SystemGlobalizationCultureInfo;

struct _SystemCollectionsCollectionBase {
	GeeAbstractList parent_instance;
	SystemCollectionsCollectionBasePrivate * priv;
};

struct _SystemCollectionsCollectionBaseClass {
	GeeAbstractListClass parent_class;
	GObject* (*get) (SystemCollectionsCollectionBase* self, gint index);
	void (*set) (SystemCollectionsCollectionBase* self, gint index, GObject* value);
	void (*OnSet) (SystemCollectionsCollectionBase* self, gint index, GObject* oldValue, GObject* newValue);
	void (*OnInsert) (SystemCollectionsCollectionBase* self, gint index, GObject* value);
	void (*OnClear) (SystemCollectionsCollectionBase* self);
	void (*OnRemove) (SystemCollectionsCollectionBase* self, gint index, GObject* value);
	void (*OnValidate) (SystemCollectionsCollectionBase* self, GObject* value);
	void (*OnSetComplete) (SystemCollectionsCollectionBase* self, gint index, GObject* oldValue, GObject* newValue);
	void (*OnInsertComplete) (SystemCollectionsCollectionBase* self, gint index, GObject* value);
	void (*OnClearComplete) (SystemCollectionsCollectionBase* self);
	void (*OnRemoveComplete) (SystemCollectionsCollectionBase* self, gint index, GObject* value);
};

struct _SystemCollectionsComparer {
	GObject parent_instance;
	SystemCollectionsComparerPrivate * priv;
};

struct _SystemCollectionsComparerClass {
	GObjectClass parent_class;
};

struct _SystemCollectionsDictionaryBase {
	GeeAbstractMap parent_instance;
	SystemCollectionsDictionaryBasePrivate * priv;
};

struct _SystemCollectionsDictionaryBaseClass {
	GeeAbstractMapClass parent_class;
	GObject* (*get) (SystemCollectionsDictionaryBase* self, GObject* key);
	void (*set) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
	GObject* (*OnGet) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* currentValue);
	void (*OnSet) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* oldValue, GObject* newValue);
	void (*OnInsert) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
	void (*OnClear) (SystemCollectionsDictionaryBase* self);
	void (*OnRemove) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
	void (*OnValidate) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
	void (*OnSetComplete) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* oldValue, GObject* newValue);
	void (*OnInsertComplete) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
	void (*OnClearComplete) (SystemCollectionsDictionaryBase* self);
	void (*OnRemoveComplete) (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
};

struct _SystemCollectionsHashtable {
	GeeHashMap parent_instance;
	SystemCollectionsHashtablePrivate * priv;
	GObject* _syncRoot;
};

struct _SystemCollectionsHashtableClass {
	GeeHashMapClass parent_class;
	GObject* (*Clone) (SystemCollectionsHashtable* self);
	gboolean (*ContainsKey) (SystemCollectionsHashtable* self, GObject* key);
	gboolean (*ContainsValue) (SystemCollectionsHashtable* self, GObject* value);
	SystemCollectionsKeyValuePairs** (*ToKeyValuePairsArray) (SystemCollectionsHashtable* self, int* result_length1);
	gint (*GetHash) (SystemCollectionsHashtable* self, GObject* key);
	gboolean (*get_IsReadOnly) (SystemCollectionsHashtable* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsHashtable* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtable* self);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsHashtable* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsHashtable* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtable* self);
	gint (*get_Count) (SystemCollectionsHashtable* self);
};

struct _SystemCollectionsHashtableKeyCollection {
	GObject parent_instance;
	SystemCollectionsHashtableKeyCollectionPrivate * priv;
};

struct _SystemCollectionsHashtableKeyCollectionClass {
	GObjectClass parent_class;
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsHashtableKeyCollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtableKeyCollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtableKeyCollection* self);
	gint (*get_Count) (SystemCollectionsHashtableKeyCollection* self);
};

struct _SystemCollectionsHashtableValueCollection {
	GObject parent_instance;
	SystemCollectionsHashtableValueCollectionPrivate * priv;
};

struct _SystemCollectionsHashtableValueCollectionClass {
	GObjectClass parent_class;
	void (*CopyTo) (SystemCollectionsHashtableValueCollection* self, GArray* array, gint arrayIndex);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsHashtableValueCollection* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsHashtableValueCollection* self);
	GObject* (*get_SyncRoot) (SystemCollectionsHashtableValueCollection* self);
	gint (*get_Count) (SystemCollectionsHashtableValueCollection* self);
};

struct _SystemCollectionsHashtableHashtableEnumerator {
	GObject parent_instance;
	SystemCollectionsHashtableHashtableEnumeratorPrivate * priv;
};

struct _SystemCollectionsHashtableHashtableEnumeratorClass {
	GObjectClass parent_class;
	void (*Reset) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Key) (SystemCollectionsHashtableHashtableEnumerator* self);
	SystemCollectionsDictionaryEntry* (*get_Entry) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Current) (SystemCollectionsHashtableHashtableEnumerator* self);
	GObject* (*get_Value) (SystemCollectionsHashtableHashtableEnumerator* self);
};

struct _SystemCollectionsQueue {
	GeePriorityQueue parent_instance;
	SystemCollectionsQueuePrivate * priv;
};

struct _SystemCollectionsQueueClass {
	GeePriorityQueueClass parent_class;
	GObject* (*Clone) (SystemCollectionsQueue* self);
	void (*Clear) (SystemCollectionsQueue* self);
	void (*CopyTo) (SystemCollectionsQueue* self, GArray* array, gint index);
	void (*Enqueue) (SystemCollectionsQueue* self, GObject* obj);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsQueue* self);
	GObject* (*Dequeue) (SystemCollectionsQueue* self);
	GObject* (*Peek) (SystemCollectionsQueue* self);
	gboolean (*Contains) (SystemCollectionsQueue* self, GObject* obj);
	GObject** (*ToArray) (SystemCollectionsQueue* self, int* result_length1);
	void (*TrimToSize) (SystemCollectionsQueue* self);
	gint (*get_Count) (SystemCollectionsQueue* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsQueue* self);
	GObject* (*get_SyncRoot) (SystemCollectionsQueue* self);
};

struct _SystemCollectionsQueueSynchronizedQueue {
	SystemCollectionsQueue parent_instance;
	SystemCollectionsQueueSynchronizedQueuePrivate * priv;
};

struct _SystemCollectionsQueueSynchronizedQueueClass {
	SystemCollectionsQueueClass parent_class;
};

struct _SystemCollectionsQueueQueueEnumerator {
	GObject parent_instance;
	SystemCollectionsQueueQueueEnumeratorPrivate * priv;
};

struct _SystemCollectionsQueueQueueEnumeratorClass {
	GObjectClass parent_class;
	gboolean (*MoveNext) (SystemCollectionsQueueQueueEnumerator* self);
	void (*Reset) (SystemCollectionsQueueQueueEnumerator* self);
	GObject* (*get_Current) (SystemCollectionsQueueQueueEnumerator* self);
};

struct _SystemCollectionsReadOnlyCollectionBase {
	GObject parent_instance;
	SystemCollectionsReadOnlyCollectionBasePrivate * priv;
};

struct _SystemCollectionsReadOnlyCollectionBaseClass {
	GObjectClass parent_class;
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsReadOnlyCollectionBase* self);
	gint (*get_Count) (SystemCollectionsReadOnlyCollectionBase* self);
};

struct _SystemCollectionsSortedList {
	GeeTreeMap parent_instance;
	SystemCollectionsSortedListPrivate * priv;
};

struct _SystemCollectionsSortedListClass {
	GeeTreeMapClass parent_class;
	GObject* (*Clone) (SystemCollectionsSortedList* self);
	gboolean (*ContainsKey) (SystemCollectionsSortedList* self, GObject* key);
	gboolean (*ContainsValue) (SystemCollectionsSortedList* self, GObject* value);
	SystemCollectionsKeyValuePairs** (*ToKeyValuePairsArray) (SystemCollectionsSortedList* self, int* result_length1);
	GObject* (*GetByIndex) (SystemCollectionsSortedList* self, gint index);
	SystemCollectionsIDictionaryEnumerator* (*GetEnumerator) (SystemCollectionsSortedList* self);
	GObject* (*GetKey) (SystemCollectionsSortedList* self, gint index);
	SystemCollectionsIList* (*GetKeyList) (SystemCollectionsSortedList* self);
	SystemCollectionsIList* (*GetValueList) (SystemCollectionsSortedList* self);
	gint (*IndexOfKey) (SystemCollectionsSortedList* self, GObject* key);
	gint (*IndexOfValue) (SystemCollectionsSortedList* self, GObject* value);
	void (*RemoveAt) (SystemCollectionsSortedList* self, gint index);
	void (*Remove) (SystemCollectionsSortedList* self, GObject* key);
	void (*SetByIndex) (SystemCollectionsSortedList* self, gint index, GObject* value);
	void (*TrimToSize) (SystemCollectionsSortedList* self);
	gint (*get_Capacity) (SystemCollectionsSortedList* self);
	void (*set_Capacity) (SystemCollectionsSortedList* self, gint value);
	gint (*get_Count) (SystemCollectionsSortedList* self);
	SystemCollectionsICollection* (*get_Keys) (SystemCollectionsSortedList* self);
	SystemCollectionsICollection* (*get_Values) (SystemCollectionsSortedList* self);
	gboolean (*get_IsReadOnly) (SystemCollectionsSortedList* self);
	gboolean (*get_IsFixedSize) (SystemCollectionsSortedList* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsSortedList* self);
	GObject* (*get_SyncRoot) (SystemCollectionsSortedList* self);
};

struct _SystemCollectionsStack {
	GeeLinkedList parent_instance;
	SystemCollectionsStackPrivate * priv;
};

struct _SystemCollectionsStackClass {
	GeeLinkedListClass parent_class;
	void (*Clear) (SystemCollectionsStack* self);
	GObject* (*Clone) (SystemCollectionsStack* self);
	gboolean (*Contains) (SystemCollectionsStack* self, GObject* obj);
	void (*CopyTo) (SystemCollectionsStack* self, GArray* array, gint index);
	SystemCollectionsIEnumerator* (*GetEnumerator) (SystemCollectionsStack* self);
	GObject* (*Peek) (SystemCollectionsStack* self);
	GObject* (*Pop) (SystemCollectionsStack* self);
	void (*Push) (SystemCollectionsStack* self, GObject* obj);
	GObject** (*ToArray) (SystemCollectionsStack* self, int* result_length1);
	gint (*get_Count) (SystemCollectionsStack* self);
	gboolean (*get_IsSynchronized) (SystemCollectionsStack* self);
	GObject* (*get_SyncRoot) (SystemCollectionsStack* self);
};

struct _SystemCollectionsStructuralComparisons {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsStructuralComparisonsPrivate * priv;
};

struct _SystemCollectionsStructuralComparisonsClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsStructuralComparisons *self);
};

struct _SystemCollectionsDictionaryEntry {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsDictionaryEntryPrivate * priv;
};

struct _SystemCollectionsDictionaryEntryClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsDictionaryEntry *self);
};

struct _SystemCollectionsKeyValuePairs {
	GObject* _key;
	GObject* _value;
};

struct _SystemCollectionsGenericKeyValuePair {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemCollectionsGenericKeyValuePairPrivate * priv;
};

struct _SystemCollectionsGenericKeyValuePairClass {
	GTypeClass parent_class;
	void (*finalize) (SystemCollectionsGenericKeyValuePair *self);
};

struct _SystemNullable {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SystemNullablePrivate * priv;
	gpointer value;
};

struct _SystemNullableClass {
	GTypeClass parent_class;
	void (*finalize) (SystemNullable *self);
};

struct _SystemIComparableIface {
	GTypeInterface parent_iface;
	gint (*CompareTo) (SystemIComparable* self, gconstpointer other);
};

struct _SystemIEquatableIface {
	GTypeInterface parent_iface;
	gboolean (*Equals) (SystemIEquatable* self, gconstpointer other);
};

struct _SystemRuntimeSerializationISerializableIface {
	GTypeInterface parent_iface;
};

struct _SystemRuntimeSerializationIDeserializationCallbackIface {
	GTypeInterface parent_iface;
};


gpointer system_text_regular_expressions_capture_ref (gpointer instance);
void system_text_regular_expressions_capture_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_capture (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_capture (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_capture (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_capture (const GValue* value);
GType system_text_regular_expressions_capture_get_type (void) G_GNUC_CONST;
gchar* system_text_regular_expressions_capture_ToString (SystemTextRegularExpressionsCapture* self);
gint system_text_regular_expressions_capture_get_Index (SystemTextRegularExpressionsCapture* self);
gint system_text_regular_expressions_capture_get_Length (SystemTextRegularExpressionsCapture* self);
gchar* system_text_regular_expressions_capture_get_Value (SystemTextRegularExpressionsCapture* self);
GType system_collections_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_ienumerable_get_type (void) G_GNUC_CONST;
GType system_collections_icollection_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_capture_collection_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsCapture* system_text_regular_expressions_capture_collection_get (SystemTextRegularExpressionsCaptureCollection* self, gint i);
GType system_text_regular_expressions_capture_collection_enumerator_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_group_get_type (void) G_GNUC_CONST;
gboolean system_text_regular_expressions_group_get_Success (SystemTextRegularExpressionsGroup* self);
SystemTextRegularExpressionsCaptureCollection* system_text_regular_expressions_group_get_Captures (SystemTextRegularExpressionsGroup* self);
GType system_text_regular_expressions_group_collection_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_match_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_group_collection_new (SystemTextRegularExpressionsMatch* match);
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_group_collection_construct (GType object_type, SystemTextRegularExpressionsMatch* match);
SystemTextRegularExpressionsGroup* system_text_regular_expressions_group_collection_get (SystemTextRegularExpressionsGroupCollection* self, gint groupnum);
GType system_text_regular_expressions_group_collection_enumerator_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsGroupCollectionEnumerator* system_text_regular_expressions_group_collection_enumerator_new (SystemTextRegularExpressionsGroupCollection* collection);
SystemTextRegularExpressionsGroupCollectionEnumerator* system_text_regular_expressions_group_collection_enumerator_construct (GType object_type, SystemTextRegularExpressionsGroupCollection* collection);
gpointer system_text_regular_expressions_static_regex_ref (gpointer instance);
void system_text_regular_expressions_static_regex_unref (gpointer instance);
GParamSpec* system_text_regular_expressions_param_spec_static_regex (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_text_regular_expressions_value_set_static_regex (GValue* value, gpointer v_object);
void system_text_regular_expressions_value_take_static_regex (GValue* value, gpointer v_object);
gpointer system_text_regular_expressions_value_get_static_regex (const GValue* value);
GType system_text_regular_expressions_static_regex_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_regex_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_new (GMatchInfo* matchinfo);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_construct (GType object_type, GMatchInfo* matchinfo);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_match_NextMatch (SystemTextRegularExpressionsMatch* self);
gchar* system_text_regular_expressions_match_Result (SystemTextRegularExpressionsMatch* self, const gchar* replacement);
SystemTextRegularExpressionsGroupCollection* system_text_regular_expressions_match_get_Groups (SystemTextRegularExpressionsMatch* self);
GType system_text_regular_expressions_match_collection_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_match_collection_new (GRegex* regex, const gchar* input, gint beginning, gint length, gint startat);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_match_collection_construct (GType object_type, GRegex* regex, const gchar* input, gint beginning, gint length, gint startat);
GType system_text_regular_expressions_match_collection_enumerator_get_type (void) G_GNUC_CONST;
GType system_text_regular_expressions_regex_options_get_type (void) G_GNUC_CONST;
SystemTextRegularExpressionsStaticRegex* system_text_regular_expressions_static_regex_construct (GType object_type, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options);
gboolean system_text_regular_expressions_static_regex_IsMatch (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_static_regex_Match (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_static_regex_Matches (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
gchar* system_text_regular_expressions_static_regex_Replace (const gchar* input, const gchar* pattern, const gchar* replacement, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout);
gchar** system_text_regular_expressions_static_regex_Split (const gchar* input, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout, int* result_length1);
gchar* system_text_regular_expressions_static_regex_Escape (const gchar* str);
gchar* system_text_regular_expressions_static_regex_Unescape (const gchar* str);
GRegexCompileFlags system_text_regular_expressions_static_regex_ConvertOptions (SystemTextRegularExpressionsRegexOptions options);
extern GTimeSpan system_text_regular_expressions_regex_InfiniteMatchTimeout;
SystemTextRegularExpressionsRegex* system_text_regular_expressions_regex_new (const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout, gboolean useCache);
SystemTextRegularExpressionsRegex* system_text_regular_expressions_regex_construct (GType object_type, const gchar* pattern, SystemTextRegularExpressionsRegexOptions options, GTimeSpan matchTimeout, gboolean useCache);
gchar* system_text_regular_expressions_regex_ToString (SystemTextRegularExpressionsRegex* self);
gchar** system_text_regular_expressions_regex_GetGroupNames (SystemTextRegularExpressionsRegex* self, int* result_length1);
gint* system_text_regular_expressions_regex_GetGroupNumbers (SystemTextRegularExpressionsRegex* self, int* result_length1);
gchar* system_text_regular_expressions_regex_GroupNameFromNumber (SystemTextRegularExpressionsRegex* self, gint i);
gint system_text_regular_expressions_regex_GroupNumberFromName (SystemTextRegularExpressionsRegex* self, const gchar* name);
gboolean system_text_regular_expressions_regex_IsMatch (SystemTextRegularExpressionsRegex* self, const gchar* input, gint startat);
SystemTextRegularExpressionsMatch* system_text_regular_expressions_regex_Match (SystemTextRegularExpressionsRegex* self, const gchar* input, gint beginning, gint length);
SystemTextRegularExpressionsMatchCollection* system_text_regular_expressions_regex_Matches (SystemTextRegularExpressionsRegex* self, const gchar* input, gint startat);
gchar* system_text_regular_expressions_regex_Replace (SystemTextRegularExpressionsRegex* self, const gchar* input, const gchar* replacement, gint count, gint startat);
gchar** system_text_regular_expressions_regex_Split (SystemTextRegularExpressionsRegex* self, const gchar* input, gint count, gint startat, int* result_length1);
gint system_text_regular_expressions_regex_get_CacheSize (void);
void system_text_regular_expressions_regex_set_CacheSize (gint value);
SystemTextRegularExpressionsRegexOptions system_text_regular_expressions_regex_get_Options (SystemTextRegularExpressionsRegex* self);
GTimeSpan system_text_regular_expressions_regex_get_MatchTimeout (SystemTextRegularExpressionsRegex* self);
gboolean system_text_regular_expressions_regex_get_RightToLeft (SystemTextRegularExpressionsRegex* self);
void system_collections_icollection_CopyTo (SystemCollectionsICollection* self, GArray* array, gint arrayIndex);
SystemCollectionsIEnumerator* system_collections_icollection_iterator (SystemCollectionsICollection* self);
gint system_collections_icollection_get_Count (SystemCollectionsICollection* self);
GObject* system_collections_icollection_get_SyncRoot (SystemCollectionsICollection* self);
gboolean system_collections_icollection_get_IsSynchronized (SystemCollectionsICollection* self);
GType system_collections_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_icomparer_Compare (SystemCollectionsIComparer* self, GObject* x, GObject* y);
gpointer system_collections_dictionary_entry_ref (gpointer instance);
void system_collections_dictionary_entry_unref (gpointer instance);
GParamSpec* system_collections_param_spec_dictionary_entry (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_value_set_dictionary_entry (GValue* value, gpointer v_object);
void system_collections_value_take_dictionary_entry (GValue* value, gpointer v_object);
gpointer system_collections_value_get_dictionary_entry (const GValue* value);
GType system_collections_dictionary_entry_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_enumerator_get_type (void) G_GNUC_CONST;
GType system_collections_idictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_idictionary_Contains (SystemCollectionsIDictionary* self, GObject* key);
void system_collections_idictionary_Add (SystemCollectionsIDictionary* self, GObject* key, GObject* value);
void system_collections_idictionary_Clear (SystemCollectionsIDictionary* self);
SystemCollectionsIDictionaryEnumerator* system_collections_idictionary_GetEnumerator (SystemCollectionsIDictionary* self);
void system_collections_idictionary_Remove (SystemCollectionsIDictionary* self, GObject* key);
SystemCollectionsICollection* system_collections_idictionary_get_Keys (SystemCollectionsIDictionary* self);
SystemCollectionsICollection* system_collections_idictionary_get_Values (SystemCollectionsIDictionary* self);
GeeMapIterator* system_collections_idictionary_enumerator_get__iterator (SystemCollectionsIDictionaryEnumerator* self);
void system_collections_idictionary_enumerator_set__iterator (SystemCollectionsIDictionaryEnumerator* self, GeeMapIterator* value);
GObject* system_collections_idictionary_enumerator_get_Key (SystemCollectionsIDictionaryEnumerator* self);
GObject* system_collections_idictionary_enumerator_get_Value (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsDictionaryEntry* system_collections_idictionary_enumerator_get_Entry (SystemCollectionsIDictionaryEnumerator* self);
SystemCollectionsIEnumerator* system_collections_ienumerable_GetEnumerator (SystemCollectionsIEnumerable* self);
gboolean system_collections_ienumerator_MoveNext (SystemCollectionsIEnumerator* self);
gboolean system_collections_ienumerator_next (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_Reset (SystemCollectionsIEnumerator* self);
GObject* system_collections_ienumerator_get__currentElement (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_set__currentElement (SystemCollectionsIEnumerator* self, GObject* value);
GeeIterator* system_collections_ienumerator_get__iterator (SystemCollectionsIEnumerator* self);
void system_collections_ienumerator_set__iterator (SystemCollectionsIEnumerator* self, GeeIterator* value);
GObject* system_collections_ienumerator_get_Current (SystemCollectionsIEnumerator* self);
GType system_collections_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_iequality_comparer_Equals (SystemCollectionsIEqualityComparer* self, GObject* x, GObject* y);
gint system_collections_iequality_comparer_GetHashCode (SystemCollectionsIEqualityComparer* self, GObject* obj);
GType system_collections_ihash_code_provider_get_type (void) G_GNUC_CONST;
gint system_collections_ihash_code_provider_GetHashCode (SystemCollectionsIHashCodeProvider* self, GObject* obj);
GType system_collections_ilist_get_type (void) G_GNUC_CONST;
gint system_collections_ilist_Add (SystemCollectionsIList* self, GObject* value);
gboolean system_collections_ilist_Contains (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_Clear (SystemCollectionsIList* self);
gint system_collections_ilist_IndexOf (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_Insert (SystemCollectionsIList* self, gint index, GObject* value);
void system_collections_ilist_Remove (SystemCollectionsIList* self, GObject* value);
void system_collections_ilist_RemoveAt (SystemCollectionsIList* self, gint index);
gboolean system_collections_ilist_get_IsReadOnly (SystemCollectionsIList* self);
gboolean system_collections_ilist_get_IsFixedSize (SystemCollectionsIList* self);
GType system_collections_istructural_comparable_get_type (void) G_GNUC_CONST;
gint32 system_collections_istructural_comparable_CompareTo (SystemCollectionsIStructuralComparable* self, GObject* other, SystemCollectionsIComparer* comparer);
GType system_collections_istructural_equatable_get_type (void) G_GNUC_CONST;
gboolean system_collections_istructural_equatable_Equals (SystemCollectionsIStructuralEquatable* self, GObject* other, SystemCollectionsIEqualityComparer* comparer);
gint system_collections_istructural_equatable_GetHashCode (SystemCollectionsIStructuralEquatable* self, SystemCollectionsIEqualityComparer* comparer);
GType system_idisposable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerator_get_type (void) G_GNUC_CONST;
GType system_collections_generic_ienumerable_get_type (void) G_GNUC_CONST;
GType system_collections_generic_icollection_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericIEnumerator* system_collections_generic_icollection_iterator (SystemCollectionsGenericICollection* self);
void system_collections_generic_icollection_Add (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_Clear (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_Contains (SystemCollectionsGenericICollection* self, gconstpointer item);
void system_collections_generic_icollection_CopyTo (SystemCollectionsGenericICollection* self, gpointer* array, int array_length1, gint arrayIndex);
gboolean system_collections_generic_icollection_Remove (SystemCollectionsGenericICollection* self, gconstpointer item);
gint system_collections_generic_icollection_get_Count (SystemCollectionsGenericICollection* self);
gboolean system_collections_generic_icollection_get_IsReadOnly (SystemCollectionsGenericICollection* self);
GType system_collections_generic_icomparer_get_type (void) G_GNUC_CONST;
gint system_collections_generic_icomparer_Compare (SystemCollectionsGenericIComparer* self, gconstpointer x, gconstpointer y);
GType system_collections_generic_idictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_idictionary_ContainsKey (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_ContainsValue (SystemCollectionsGenericIDictionary* self, gconstpointer value);
void system_collections_generic_idictionary_Add (SystemCollectionsGenericIDictionary* self, gconstpointer key, gconstpointer value);
gboolean system_collections_generic_idictionary_Remove (SystemCollectionsGenericIDictionary* self, gconstpointer key);
gboolean system_collections_generic_idictionary_TryGetValue (SystemCollectionsGenericIDictionary* self, gconstpointer key, gpointer* value);
gboolean system_collections_generic_idictionary_IsCompatibleKey (SystemCollectionsGenericIDictionary* self, GObject* key);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Keys (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericICollection* system_collections_generic_idictionary_get_Values (SystemCollectionsGenericIDictionary* self);
SystemCollectionsGenericIEnumerator* system_collections_generic_ienumerable_GetEnumerator (SystemCollectionsGenericIEnumerable* self);
GType system_collections_generic_iequality_comparer_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iequality_comparer_Equals (SystemCollectionsGenericIEqualityComparer* self, gconstpointer x, gconstpointer y);
gint system_collections_generic_iequality_comparer_GetHashCode (SystemCollectionsGenericIEqualityComparer* self, gconstpointer obj);
GType system_collections_generic_ilist_get_type (void) G_GNUC_CONST;
gint system_collections_generic_ilist_IndexOf (SystemCollectionsGenericIList* self, gconstpointer item);
void system_collections_generic_ilist_Insert (SystemCollectionsGenericIList* self, gint index, gconstpointer item);
void system_collections_generic_ilist_RemoveAt (SystemCollectionsGenericIList* self, gint index);
GType system_collections_generic_iset_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iset_Add (SystemCollectionsGenericISet* self, gconstpointer value);
void system_collections_generic_iset_ExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_IntersectWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsProperSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSubsetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_IsSupersetOf (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_Overlaps (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
gboolean system_collections_generic_iset_SetEquals (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_SymmetricExceptWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
void system_collections_generic_iset_UnionWith (SystemCollectionsGenericISet* self, SystemCollectionsGenericIEnumerable* other);
GType system_collections_generic_iread_only_collection_get_type (void) G_GNUC_CONST;
gint system_collections_generic_iread_only_collection_get_Count (SystemCollectionsGenericIReadOnlyCollection* self);
GType system_collections_generic_iread_only_dictionary_get_type (void) G_GNUC_CONST;
gboolean system_collections_generic_iread_only_dictionary_ContainsKey (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key);
gboolean system_collections_generic_iread_only_dictionary_TryGetValue (SystemCollectionsGenericIReadOnlyDictionary* self, gconstpointer key, gpointer* value);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Keys (SystemCollectionsGenericIReadOnlyDictionary* self);
SystemCollectionsGenericIEnumerable* system_collections_generic_iread_only_dictionary_get_Values (SystemCollectionsGenericIReadOnlyDictionary* self);
GType system_collections_generic_iread_only_list_get_type (void) G_GNUC_CONST;
gpointer system_collections_generic_iread_only_list_get (SystemCollectionsGenericIReadOnlyList* self, gint index);
GType system_collections_array_list_get_type (void) G_GNUC_CONST;
SystemCollectionsArrayList* system_collections_array_list_new (gint capacity);
SystemCollectionsArrayList* system_collections_array_list_construct (GType object_type, gint capacity);
SystemCollectionsArrayList* system_collections_array_list_new_WithCollection (SystemCollectionsICollection* c);
SystemCollectionsArrayList* system_collections_array_list_construct_WithCollection (GType object_type, SystemCollectionsICollection* c);
SystemCollectionsArrayList* system_collections_array_list_Adapter (SystemCollectionsIList* list);
void system_collections_array_list_AddRange (SystemCollectionsArrayList* self, SystemCollectionsICollection* c);
gint system_collections_array_list_BinarySearch (SystemCollectionsArrayList* self, gint index, gint count, GObject* value, SystemCollectionsIComparer* comparer);
GObject* system_collections_array_list_Clone (SystemCollectionsArrayList* self);
void system_collections_array_list_CopyToIndex (SystemCollectionsArrayList* self, gint index, GObject** array, int array_length1, gint arrayIndex, gint count);
SystemCollectionsIList* system_collections_array_list_FixedSize (SystemCollectionsIList* list);
SystemCollectionsIEnumerator* system_collections_array_list_GetEnumerator (SystemCollectionsArrayList* self);
void system_collections_array_list_InsertRange (SystemCollectionsArrayList* self, gint index, SystemCollectionsICollection* c);
gint system_collections_array_list_LastIndexOf (SystemCollectionsArrayList* self, GObject* value, gint startIndex, gint count);
SystemCollectionsIList* system_collections_array_list_ReadOnly (SystemCollectionsIList* list);
void system_collections_array_list_RemoveRange (SystemCollectionsArrayList* self, gint index, gint count);
SystemCollectionsArrayList* system_collections_array_list_Repeat (GObject* value, gint count);
void system_collections_array_list_Reverse (SystemCollectionsArrayList* self, gint index, gint count);
void system_collections_array_list_SetRange (SystemCollectionsArrayList* self, gint index, SystemCollectionsICollection* c);
SystemCollectionsArrayList* system_collections_array_list_GetRange (SystemCollectionsArrayList* self, gint index, gint count);
void system_collections_array_list_Sort (SystemCollectionsArrayList* self, gint index, gint count, SystemCollectionsIComparer* comparer);
SystemCollectionsIList* system_collections_array_list_Synchronized (SystemCollectionsIList* list);
GObject** system_collections_array_list_ToArray (SystemCollectionsArrayList* self, int* result_length1);
void system_collections_array_list_TrimToSize (SystemCollectionsArrayList* self);
gint system_collections_array_list_get_Capacity (SystemCollectionsArrayList* self);
void system_collections_array_list_set_Capacity (SystemCollectionsArrayList* self, gint value);
gint system_collections_array_list_get_Count (SystemCollectionsArrayList* self);
gboolean system_collections_array_list_get_IsFixedSize (SystemCollectionsArrayList* self);
gboolean system_collections_array_list_get_IsReadOnly (SystemCollectionsArrayList* self);
gboolean system_collections_array_list_get_IsSynchronized (SystemCollectionsArrayList* self);
GObject* system_collections_array_list_get_SyncRoot (SystemCollectionsArrayList* self);
GType system_icloneable_get_type (void) G_GNUC_CONST;
GType system_collections_bit_array_get_type (void) G_GNUC_CONST;
SystemCollectionsBitArray* system_collections_bit_array_new (gint length, gboolean defaultValue);
SystemCollectionsBitArray* system_collections_bit_array_construct (GType object_type, gint length, gboolean defaultValue);
gboolean system_collections_bit_array_Get (SystemCollectionsBitArray* self, gint index);
void system_collections_bit_array_Set (SystemCollectionsBitArray* self, gint index, gboolean value);
void system_collections_bit_array_SetAll (SystemCollectionsBitArray* self, gboolean value);
SystemCollectionsBitArray* system_collections_bit_array_And (SystemCollectionsBitArray* self, SystemCollectionsBitArray* value);
SystemCollectionsBitArray* system_collections_bit_array_Or (SystemCollectionsBitArray* self, SystemCollectionsBitArray* value);
SystemCollectionsBitArray* system_collections_bit_array_Xor (SystemCollectionsBitArray* self, SystemCollectionsBitArray* value);
SystemCollectionsBitArray* system_collections_bit_array_Not (SystemCollectionsBitArray* self);
gint system_collections_bit_array_get_Length (SystemCollectionsBitArray* self);
void system_collections_bit_array_set_Length (SystemCollectionsBitArray* self, gint value);
gboolean system_collections_bit_array_get_IsReadOnly (SystemCollectionsBitArray* self);
GType system_collections_case_insensitive_comparer_get_type (void) G_GNUC_CONST;
SystemCollectionsCaseInsensitiveComparer* system_collections_case_insensitive_comparer_new (void);
SystemCollectionsCaseInsensitiveComparer* system_collections_case_insensitive_comparer_construct (GType object_type);
SystemCollectionsCaseInsensitiveComparer* system_collections_case_insensitive_comparer_get_Default (void);
SystemCollectionsCaseInsensitiveComparer* system_collections_case_insensitive_comparer_get_DefaultInvariant (void);
gpointer system_collections_case_insensitive_hash_code_provider_ref (gpointer instance);
void system_collections_case_insensitive_hash_code_provider_unref (gpointer instance);
GParamSpec* system_collections_param_spec_case_insensitive_hash_code_provider (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_value_set_case_insensitive_hash_code_provider (GValue* value, gpointer v_object);
void system_collections_value_take_case_insensitive_hash_code_provider (GValue* value, gpointer v_object);
gpointer system_collections_value_get_case_insensitive_hash_code_provider (const GValue* value);
GType system_collections_case_insensitive_hash_code_provider_get_type (void) G_GNUC_CONST;
GType system_globalization_culture_info_get_type (void) G_GNUC_CONST;
SystemCollectionsCaseInsensitiveHashCodeProvider* system_collections_case_insensitive_hash_code_provider_new (SystemGlobalizationCultureInfo* culture);
SystemCollectionsCaseInsensitiveHashCodeProvider* system_collections_case_insensitive_hash_code_provider_construct (GType object_type, SystemGlobalizationCultureInfo* culture);
SystemCollectionsCaseInsensitiveHashCodeProvider* system_collections_case_insensitive_hash_code_provider_get_Default (void);
SystemCollectionsCaseInsensitiveHashCodeProvider* system_collections_case_insensitive_hash_code_provider_get_DefaultInvariant (void);
GType system_collections_collection_base_get_type (void) G_GNUC_CONST;
SystemCollectionsCollectionBase* system_collections_collection_base_construct (GType object_type, gint capacity);
GObject* system_collections_collection_base_get (SystemCollectionsCollectionBase* self, gint index);
void system_collections_collection_base_set (SystemCollectionsCollectionBase* self, gint index, GObject* value);
void system_collections_collection_base_OnSet (SystemCollectionsCollectionBase* self, gint index, GObject* oldValue, GObject* newValue);
void system_collections_collection_base_OnInsert (SystemCollectionsCollectionBase* self, gint index, GObject* value);
void system_collections_collection_base_OnClear (SystemCollectionsCollectionBase* self);
void system_collections_collection_base_OnRemove (SystemCollectionsCollectionBase* self, gint index, GObject* value);
void system_collections_collection_base_OnValidate (SystemCollectionsCollectionBase* self, GObject* value);
void system_collections_collection_base_OnSetComplete (SystemCollectionsCollectionBase* self, gint index, GObject* oldValue, GObject* newValue);
void system_collections_collection_base_OnInsertComplete (SystemCollectionsCollectionBase* self, gint index, GObject* value);
void system_collections_collection_base_OnClearComplete (SystemCollectionsCollectionBase* self);
void system_collections_collection_base_OnRemoveComplete (SystemCollectionsCollectionBase* self, gint index, GObject* value);
SystemCollectionsArrayList* system_collections_collection_base_get_InnerList (SystemCollectionsCollectionBase* self);
SystemCollectionsIList* system_collections_collection_base_get_List (SystemCollectionsCollectionBase* self);
gint system_collections_collection_base_get_Capacity (SystemCollectionsCollectionBase* self);
void system_collections_collection_base_set_Capacity (SystemCollectionsCollectionBase* self, gint value);
GType system_collections_comparer_get_type (void) G_GNUC_CONST;
extern SystemCollectionsComparer* system_collections_comparer_Default;
extern SystemCollectionsComparer* system_collections_comparer_DefaultInvariant;
SystemCollectionsComparer* system_collections_comparer_new (void);
SystemCollectionsComparer* system_collections_comparer_construct (GType object_type);
GType system_collections_dictionary_base_get_type (void) G_GNUC_CONST;
GObject* system_collections_dictionary_base_get (SystemCollectionsDictionaryBase* self, GObject* key);
void system_collections_dictionary_base_set (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
GObject* system_collections_dictionary_base_OnGet (SystemCollectionsDictionaryBase* self, GObject* key, GObject* currentValue);
void system_collections_dictionary_base_OnSet (SystemCollectionsDictionaryBase* self, GObject* key, GObject* oldValue, GObject* newValue);
void system_collections_dictionary_base_OnInsert (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
void system_collections_dictionary_base_OnClear (SystemCollectionsDictionaryBase* self);
void system_collections_dictionary_base_OnRemove (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
void system_collections_dictionary_base_OnValidate (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
void system_collections_dictionary_base_OnSetComplete (SystemCollectionsDictionaryBase* self, GObject* key, GObject* oldValue, GObject* newValue);
void system_collections_dictionary_base_OnInsertComplete (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
void system_collections_dictionary_base_OnClearComplete (SystemCollectionsDictionaryBase* self);
void system_collections_dictionary_base_OnRemoveComplete (SystemCollectionsDictionaryBase* self, GObject* key, GObject* value);
SystemCollectionsDictionaryBase* system_collections_dictionary_base_construct (GType object_type);
GType system_collections_hashtable_get_type (void) G_GNUC_CONST;
SystemCollectionsHashtable* system_collections_dictionary_base_get_InnerHashtable (SystemCollectionsDictionaryBase* self);
SystemCollectionsIDictionary* system_collections_dictionary_base_get_Dictionary (SystemCollectionsDictionaryBase* self);
void system_collections_key_value_pairs_free (SystemCollectionsKeyValuePairs* self);
SystemCollectionsHashtable* system_collections_hashtable_new (SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct (GType object_type, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_new_WithCapacity (gint capacity, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct_WithCapacity (GType object_type, gint capacity, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_new_WithDictionary (SystemCollectionsIDictionary* d, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
SystemCollectionsHashtable* system_collections_hashtable_construct_WithDictionary (GType object_type, SystemCollectionsIDictionary* d, gfloat loadFactor, SystemCollectionsIEqualityComparer* equalityComparer);
GObject* system_collections_hashtable_Clone (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_ContainsKey (SystemCollectionsHashtable* self, GObject* key);
gboolean system_collections_hashtable_ContainsValue (SystemCollectionsHashtable* self, GObject* value);
void system_collections_hashtable_CopyKeys (SystemCollectionsHashtable* self, GArray* array, gint arrayIndex);
gint system_collections_hashtable_GetHash (SystemCollectionsHashtable* self, GObject* key);
SystemCollectionsIEqualityComparer* system_collections_hashtable_get_EqualityComparer (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsReadOnly (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsFixedSize (SystemCollectionsHashtable* self);
gboolean system_collections_hashtable_get_IsSynchronized (SystemCollectionsHashtable* self);
SystemCollectionsICollection* system_collections_hashtable_get_Keys (SystemCollectionsHashtable* self);
SystemCollectionsICollection* system_collections_hashtable_get_Values (SystemCollectionsHashtable* self);
GObject* system_collections_hashtable_get_SyncRoot (SystemCollectionsHashtable* self);
gint system_collections_hashtable_get_Count (SystemCollectionsHashtable* self);
GType system_collections_hashtable_key_collection_get_type (void) G_GNUC_CONST;
SystemCollectionsIEnumerator* system_collections_hashtable_key_collection_GetEnumerator (SystemCollectionsHashtableKeyCollection* self);
gboolean system_collections_hashtable_key_collection_get_IsSynchronized (SystemCollectionsHashtableKeyCollection* self);
GObject* system_collections_hashtable_key_collection_get_SyncRoot (SystemCollectionsHashtableKeyCollection* self);
gint system_collections_hashtable_key_collection_get_Count (SystemCollectionsHashtableKeyCollection* self);
GType system_collections_hashtable_value_collection_get_type (void) G_GNUC_CONST;
void system_collections_hashtable_value_collection_CopyTo (SystemCollectionsHashtableValueCollection* self, GArray* array, gint arrayIndex);
SystemCollectionsIEnumerator* system_collections_hashtable_value_collection_GetEnumerator (SystemCollectionsHashtableValueCollection* self);
gboolean system_collections_hashtable_value_collection_get_IsSynchronized (SystemCollectionsHashtableValueCollection* self);
GObject* system_collections_hashtable_value_collection_get_SyncRoot (SystemCollectionsHashtableValueCollection* self);
gint system_collections_hashtable_value_collection_get_Count (SystemCollectionsHashtableValueCollection* self);
GType system_collections_hashtable_hashtable_enumerator_get_type (void) G_GNUC_CONST;
void system_collections_hashtable_hashtable_enumerator_Reset (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Key (SystemCollectionsHashtableHashtableEnumerator* self);
SystemCollectionsDictionaryEntry* system_collections_hashtable_hashtable_enumerator_get_Entry (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Current (SystemCollectionsHashtableHashtableEnumerator* self);
GObject* system_collections_hashtable_hashtable_enumerator_get_Value (SystemCollectionsHashtableHashtableEnumerator* self);
GType system_collections_queue_get_type (void) G_GNUC_CONST;
SystemCollectionsQueue* system_collections_queue_new (gint capacity, gfloat growFactor);
SystemCollectionsQueue* system_collections_queue_construct (GType object_type, gint capacity, gfloat growFactor);
SystemCollectionsQueue* system_collections_queue_new_WithCollection (SystemCollectionsICollection* col);
SystemCollectionsQueue* system_collections_queue_construct_WithCollection (GType object_type, SystemCollectionsICollection* col);
GObject* system_collections_queue_Clone (SystemCollectionsQueue* self);
void system_collections_queue_Clear (SystemCollectionsQueue* self);
void system_collections_queue_CopyTo (SystemCollectionsQueue* self, GArray* array, gint index);
void system_collections_queue_Enqueue (SystemCollectionsQueue* self, GObject* obj);
SystemCollectionsIEnumerator* system_collections_queue_GetEnumerator (SystemCollectionsQueue* self);
GObject* system_collections_queue_Dequeue (SystemCollectionsQueue* self);
GObject* system_collections_queue_Peek (SystemCollectionsQueue* self);
SystemCollectionsQueue* system_collections_queue_Synchronized (SystemCollectionsQueue* queue);
gboolean system_collections_queue_Contains (SystemCollectionsQueue* self, GObject* obj);
GObject** system_collections_queue_ToArray (SystemCollectionsQueue* self, int* result_length1);
void system_collections_queue_TrimToSize (SystemCollectionsQueue* self);
gint system_collections_queue_get_Count (SystemCollectionsQueue* self);
gboolean system_collections_queue_get_IsSynchronized (SystemCollectionsQueue* self);
GObject* system_collections_queue_get_SyncRoot (SystemCollectionsQueue* self);
GType system_collections_queue_synchronized_queue_get_type (void) G_GNUC_CONST;
GType system_collections_queue_queue_enumerator_get_type (void) G_GNUC_CONST;
SystemCollectionsQueueQueueEnumerator* system_collections_queue_queue_enumerator_new (SystemCollectionsQueue* q);
SystemCollectionsQueueQueueEnumerator* system_collections_queue_queue_enumerator_construct (GType object_type, SystemCollectionsQueue* q);
gboolean system_collections_queue_queue_enumerator_MoveNext (SystemCollectionsQueueQueueEnumerator* self);
void system_collections_queue_queue_enumerator_Reset (SystemCollectionsQueueQueueEnumerator* self);
GObject* system_collections_queue_queue_enumerator_get_Current (SystemCollectionsQueueQueueEnumerator* self);
GType system_collections_read_only_collection_base_get_type (void) G_GNUC_CONST;
SystemCollectionsIEnumerator* system_collections_read_only_collection_base_GetEnumerator (SystemCollectionsReadOnlyCollectionBase* self);
SystemCollectionsReadOnlyCollectionBase* system_collections_read_only_collection_base_construct (GType object_type);
SystemCollectionsArrayList* system_collections_read_only_collection_base_get_InnerList (SystemCollectionsReadOnlyCollectionBase* self);
gint system_collections_read_only_collection_base_get_Count (SystemCollectionsReadOnlyCollectionBase* self);
GType system_collections_sorted_list_get_type (void) G_GNUC_CONST;
SystemCollectionsSortedList* system_collections_sorted_list_new (SystemCollectionsIComparer* comparer, gint capacity);
SystemCollectionsSortedList* system_collections_sorted_list_construct (GType object_type, SystemCollectionsIComparer* comparer, gint capacity);
SystemCollectionsSortedList* system_collections_sorted_list_new_FromDictionary (SystemCollectionsIDictionary* d, SystemCollectionsIComparer* comparer);
SystemCollectionsSortedList* system_collections_sorted_list_construct_FromDictionary (GType object_type, SystemCollectionsIDictionary* d, SystemCollectionsIComparer* comparer);
GObject* system_collections_sorted_list_Clone (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_ContainsKey (SystemCollectionsSortedList* self, GObject* key);
gboolean system_collections_sorted_list_ContainsValue (SystemCollectionsSortedList* self, GObject* value);
GObject* system_collections_sorted_list_GetByIndex (SystemCollectionsSortedList* self, gint index);
SystemCollectionsIDictionaryEnumerator* system_collections_sorted_list_GetEnumerator (SystemCollectionsSortedList* self);
GObject* system_collections_sorted_list_GetKey (SystemCollectionsSortedList* self, gint index);
SystemCollectionsIList* system_collections_sorted_list_GetKeyList (SystemCollectionsSortedList* self);
SystemCollectionsIList* system_collections_sorted_list_GetValueList (SystemCollectionsSortedList* self);
gint system_collections_sorted_list_IndexOfKey (SystemCollectionsSortedList* self, GObject* key);
gint system_collections_sorted_list_IndexOfValue (SystemCollectionsSortedList* self, GObject* value);
void system_collections_sorted_list_RemoveAt (SystemCollectionsSortedList* self, gint index);
void system_collections_sorted_list_Remove (SystemCollectionsSortedList* self, GObject* key);
void system_collections_sorted_list_SetByIndex (SystemCollectionsSortedList* self, gint index, GObject* value);
SystemCollectionsSortedList* system_collections_sorted_list_Synchronized (SystemCollectionsSortedList* list);
void system_collections_sorted_list_TrimToSize (SystemCollectionsSortedList* self);
gint system_collections_sorted_list_get_Capacity (SystemCollectionsSortedList* self);
void system_collections_sorted_list_set_Capacity (SystemCollectionsSortedList* self, gint value);
gint system_collections_sorted_list_get_Count (SystemCollectionsSortedList* self);
SystemCollectionsICollection* system_collections_sorted_list_get_Keys (SystemCollectionsSortedList* self);
SystemCollectionsICollection* system_collections_sorted_list_get_Values (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsReadOnly (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsFixedSize (SystemCollectionsSortedList* self);
gboolean system_collections_sorted_list_get_IsSynchronized (SystemCollectionsSortedList* self);
GObject* system_collections_sorted_list_get_SyncRoot (SystemCollectionsSortedList* self);
GType system_collections_stack_get_type (void) G_GNUC_CONST;
SystemCollectionsStack* system_collections_stack_new (gint initialCapacity);
SystemCollectionsStack* system_collections_stack_construct (GType object_type, gint initialCapacity);
SystemCollectionsStack* system_collections_stack_new_WithCollection (SystemCollectionsICollection* col);
SystemCollectionsStack* system_collections_stack_construct_WithCollection (GType object_type, SystemCollectionsICollection* col);
void system_collections_stack_Clear (SystemCollectionsStack* self);
GObject* system_collections_stack_Clone (SystemCollectionsStack* self);
gboolean system_collections_stack_Contains (SystemCollectionsStack* self, GObject* obj);
void system_collections_stack_CopyTo (SystemCollectionsStack* self, GArray* array, gint index);
SystemCollectionsIEnumerator* system_collections_stack_GetEnumerator (SystemCollectionsStack* self);
GObject* system_collections_stack_Peek (SystemCollectionsStack* self);
GObject* system_collections_stack_Pop (SystemCollectionsStack* self);
void system_collections_stack_Push (SystemCollectionsStack* self, GObject* obj);
SystemCollectionsStack* system_collections_stack_Synchronized (SystemCollectionsStack* stack);
GObject** system_collections_stack_ToArray (SystemCollectionsStack* self, int* result_length1);
gint system_collections_stack_get_Count (SystemCollectionsStack* self);
gboolean system_collections_stack_get_IsSynchronized (SystemCollectionsStack* self);
GObject* system_collections_stack_get_SyncRoot (SystemCollectionsStack* self);
gpointer system_collections_structural_comparisons_ref (gpointer instance);
void system_collections_structural_comparisons_unref (gpointer instance);
GParamSpec* system_collections_param_spec_structural_comparisons (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_value_set_structural_comparisons (GValue* value, gpointer v_object);
void system_collections_value_take_structural_comparisons (GValue* value, gpointer v_object);
gpointer system_collections_value_get_structural_comparisons (const GValue* value);
GType system_collections_structural_comparisons_get_type (void) G_GNUC_CONST;
SystemCollectionsStructuralComparisons* system_collections_structural_comparisons_new (void);
SystemCollectionsStructuralComparisons* system_collections_structural_comparisons_construct (GType object_type);
SystemCollectionsIComparer* system_collections_structural_comparisons_get_StructuralComparer (void);
SystemCollectionsIEqualityComparer* system_collections_structural_comparisons_get_StructuralEqualityComparer (void);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_new (GObject* key, GObject* value);
SystemCollectionsDictionaryEntry* system_collections_dictionary_entry_construct (GType object_type, GObject* key, GObject* value);
GObject* system_collections_dictionary_entry_get_Key (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Key (SystemCollectionsDictionaryEntry* self, GObject* value);
GObject* system_collections_dictionary_entry_get_Value (SystemCollectionsDictionaryEntry* self);
void system_collections_dictionary_entry_set_Value (SystemCollectionsDictionaryEntry* self, GObject* value);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
SystemCollectionsKeyValuePairs* system_collections_key_value_pairs_new (GObject* key, GObject* value);
gpointer system_collections_generic_key_value_pair_ref (gpointer instance);
void system_collections_generic_key_value_pair_unref (gpointer instance);
GParamSpec* system_collections_generic_param_spec_key_value_pair (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_collections_generic_value_set_key_value_pair (GValue* value, gpointer v_object);
void system_collections_generic_value_take_key_value_pair (GValue* value, gpointer v_object);
gpointer system_collections_generic_value_get_key_value_pair (const GValue* value);
GType system_collections_generic_key_value_pair_get_type (void) G_GNUC_CONST;
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_new (GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
SystemCollectionsGenericKeyValuePair* system_collections_generic_key_value_pair_construct (GType object_type, GType tkey_type, GBoxedCopyFunc tkey_dup_func, GDestroyNotify tkey_destroy_func, GType tvalue_type, GBoxedCopyFunc tvalue_dup_func, GDestroyNotify tvalue_destroy_func, gconstpointer key, gconstpointer value);
gchar* system_collections_generic_key_value_pair_ToString (SystemCollectionsGenericKeyValuePair* self, GString* s);
gconstpointer system_collections_generic_key_value_pair_get_Key (SystemCollectionsGenericKeyValuePair* self);
gconstpointer system_collections_generic_key_value_pair_get_Value (SystemCollectionsGenericKeyValuePair* self);
gpointer system_nullable_ref (gpointer instance);
void system_nullable_unref (gpointer instance);
GParamSpec* system_param_spec_nullable (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void system_value_set_nullable (GValue* value, gpointer v_object);
void system_value_take_nullable (GValue* value, gpointer v_object);
gpointer system_value_get_nullable (const GValue* value);
GType system_nullable_get_type (void) G_GNUC_CONST;
SystemNullable* system_nullable_new (GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
SystemNullable* system_nullable_construct (GType object_type, GType t_type, GBoxedCopyFunc t_dup_func, GDestroyNotify t_destroy_func, gconstpointer value);
gpointer system_nullable_GetValueOrDefault (SystemNullable* self, gconstpointer defaultValue);
gboolean system_nullable_Equals (SystemNullable* self, GObject* other);
gint system_nullable_GetHashCode (SystemNullable* self);
gchar* system_nullable_ToString (SystemNullable* self);
gboolean system_nullable_get_HasValue (SystemNullable* self);
gconstpointer system_nullable_get_Value (SystemNullable* self);
void system_idisposable_Dispose (SystemIDisposable* self);
GType system_icomparable_get_type (void) G_GNUC_CONST;
gint system_icomparable_CompareTo (SystemIComparable* self, gconstpointer other);
GType system_iequatable_get_type (void) G_GNUC_CONST;
gboolean system_iequatable_Equals (SystemIEquatable* self, gconstpointer other);
GObject* system_icloneable_Clone (SystemICloneable* self);
GType system_runtime_serialization_iserializable_get_type (void) G_GNUC_CONST;
GType system_runtime_serialization_ideserialization_callback_get_type (void) G_GNUC_CONST;


G_END_DECLS

#endif
