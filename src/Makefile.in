# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(top_srcdir)/src/sourcefiles.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(srcdir)/libdotnet-0.1.pc.in \
	System/Collections/icollection.c \
	System/Collections/icomparer.c \
	System/Collections/idictionary.c \
	System/Collections/idictionaryenumerator.c \
	System/Collections/ienumerable.c \
	System/Collections/ienumerator.c \
	System/Collections/iequalitycomparer.c \
	System/Collections/ihashcodeprovider.c \
	System/Collections/ilist.c \
	System/Collections/istructuralcomparable.c \
	System/Collections/istructuralequatable.c \
	System/Collections/DictionaryEntry.c \
	System/Collections/KeyValuePairs.c \
	System/Collections/ArrayList.c System/Collections/BitArray.c \
	System/Collections/CaseInsensitiveComparer.c \
	System/Collections/CaseInsensitiveHashCodeProvider.c \
	System/Collections/CollectionBase.c \
	System/Collections/Comparer.c \
	System/Collections/DictionaryBase.c \
	System/Collections/Hashtable.c System/Collections/Queue.c \
	System/Collections/ReadOnlyCollectionBase.c \
	System/Collections/SortedList.c System/Collections/Stack.c \
	System/Collections/StructuralComparisons.c \
	System/Collections/Generic/icollection.c \
	System/Collections/Generic/icomparer.c \
	System/Collections/Generic/idictionary.c \
	System/Collections/Generic/ienumerable.c \
	System/Collections/Generic/ienumerator.c \
	System/Collections/Generic/iequalitycomparer.c \
	System/Collections/Generic/ilist.c \
	System/Collections/Generic/iset.c \
	System/Collections/Generic/ireadonlycollection.c \
	System/Collections/Generic/ireadonlydictionary.c \
	System/Collections/Generic/ireadonlylist.c \
	System/Collections/Generic/KeyValuePair.c \
	System/Collections/Generic/Stack.c \
	System/Collections/Generic/List.c System/Text/Text.c \
	System/Globalization/Globalization.c \
	System/Diagnostics/Diagnostics.c \
	System/Reflection/Reflection.c System/Runtime/Runtime.c \
	System/Security/Security.c System/Threading/Threading.c \
	System/Nullable.c System/Exceptions.c System/action.c \
	System/idisposable.c System/icomparable.c System/iequatable.c \
	System/icloneable.c System/Linq/Errors.c \
	System/Globalization/CultureInfo.c $(top_srcdir)/depcomp \
	$(srcdir)/libdotnet-0.1.vapi $(srcdir)/libdotnet.h \
	$(srcdir)/libdotnet_la_vala.stamp $(dist_vapi_DATA) \
	$(libdotnetinclude_HEADERS)
@PLATFORM_WIN32_TRUE@am__append_1 = -no-undefined
@NATIVE_WIN32_TRUE@am__append_2 = -export-dynamic
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = libdotnet-0.1.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(vapidir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libdotnetincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libdotnet_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = System/Collections/icollection.lo \
	System/Collections/icomparer.lo \
	System/Collections/idictionary.lo \
	System/Collections/idictionaryenumerator.lo \
	System/Collections/ienumerable.lo \
	System/Collections/ienumerator.lo \
	System/Collections/iequalitycomparer.lo \
	System/Collections/ihashcodeprovider.lo \
	System/Collections/ilist.lo \
	System/Collections/istructuralcomparable.lo \
	System/Collections/istructuralequatable.lo \
	System/Collections/DictionaryEntry.lo \
	System/Collections/KeyValuePairs.lo
am__objects_2 = System/Collections/ArrayList.lo \
	System/Collections/BitArray.lo \
	System/Collections/CaseInsensitiveComparer.lo \
	System/Collections/CaseInsensitiveHashCodeProvider.lo \
	System/Collections/CollectionBase.lo \
	System/Collections/Comparer.lo \
	System/Collections/DictionaryBase.lo \
	System/Collections/Hashtable.lo System/Collections/Queue.lo \
	System/Collections/ReadOnlyCollectionBase.lo \
	System/Collections/SortedList.lo System/Collections/Stack.lo \
	System/Collections/StructuralComparisons.lo
am__objects_3 = System/Collections/Generic/icollection.lo \
	System/Collections/Generic/icomparer.lo \
	System/Collections/Generic/idictionary.lo \
	System/Collections/Generic/ienumerable.lo \
	System/Collections/Generic/ienumerator.lo \
	System/Collections/Generic/iequalitycomparer.lo \
	System/Collections/Generic/ilist.lo \
	System/Collections/Generic/iset.lo \
	System/Collections/Generic/ireadonlycollection.lo \
	System/Collections/Generic/ireadonlydictionary.lo \
	System/Collections/Generic/ireadonlylist.lo \
	System/Collections/Generic/KeyValuePair.lo
am__objects_4 = System/Collections/Generic/Stack.lo \
	System/Collections/Generic/List.lo
am__objects_5 = System/Text/Text.lo \
	System/Globalization/Globalization.lo \
	System/Diagnostics/Diagnostics.lo \
	System/Reflection/Reflection.lo System/Runtime/Runtime.lo \
	System/Security/Security.lo System/Threading/Threading.lo
am__objects_6 = System/Nullable.lo System/Exceptions.lo \
	System/action.lo
am__objects_7 = System/idisposable.lo System/icomparable.lo \
	System/iequatable.lo System/icloneable.lo
am__objects_8 = System/Linq/Errors.lo \
	System/Globalization/CultureInfo.lo
am__objects_9 = $(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8)
am_libdotnet_la_OBJECTS = $(am__objects_9)
libdotnet_la_OBJECTS = $(am_libdotnet_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libdotnet_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libdotnet_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
VALACOMPILE = $(VALAC) $(AM_VALAFLAGS) $(VALAFLAGS)
LTVALACOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(VALAC) $(AM_VALAFLAGS) \
	$(VALAFLAGS)
AM_V_VALAC = $(am__v_VALAC_@AM_V@)
am__v_VALAC_ = $(am__v_VALAC_@AM_DEFAULT_V@)
am__v_VALAC_0 = @echo "  VALAC   " $@;
am__v_VALAC_1 = 
SOURCES = $(libdotnet_la_SOURCES)
DIST_SOURCES = $(libdotnet_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(dist_vapi_DATA) $(pkgconfig_DATA)
HEADERS = $(libdotnetinclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALL_LINGUAS = @ALL_LINGUAS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GETTEXT_PACKAGE = @GETTEXT_PACKAGE@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_PERL = @INTLTOOL_PERL@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
INTLTOOL_V_MERGE = @INTLTOOL_V_MERGE@
INTLTOOL_V_MERGE_OPTIONS = @INTLTOOL_V_MERGE_OPTIONS@
INTLTOOL__v_MERGE_ = @INTLTOOL__v_MERGE_@
INTLTOOL__v_MERGE_0 = @INTLTOOL__v_MERGE_0@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBDOTNET_CFLAGS = @LIBDOTNET_CFLAGS@
LIBDOTNET_LIBS = @LIBDOTNET_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGMERGE = @MSGMERGE@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POFILES = @POFILES@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_NLS = @USE_NLS@
VALAC = @VALAC@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
intltool__v_merge_options_ = @intltool__v_merge_options_@
intltool__v_merge_options_0 = @intltool__v_merge_options_0@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkg_modules = @pkg_modules@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
LIBDOTNET_REGEX = \
	System/Text/RegularExpressions/RegexCapture.vala \
	System/Text/RegularExpressions/RegexCaptureCollection.vala \
	System/Text/RegularExpressions/RegexGroup.vala \
	System/Text/RegularExpressions/RegexGroupCollection.vala \
	System/Text/RegularExpressions/RegexMatch.vala \
	System/Text/RegularExpressions/RegexMatchCollection.vala \
	System/Text/RegularExpressions/Regex.vala \
	System/Text/RegularExpressions/RegexMatchTimeoutException.vala \
	System/Text/RegularExpressions/RegexOptions.vala

LIBDOTNET_COLLECTIONS_IFACE = \
	System/Collections/icollection.vala \
	System/Collections/icomparer.vala \
	System/Collections/idictionary.vala \
	System/Collections/idictionaryenumerator.vala \
	System/Collections/ienumerable.vala \
	System/Collections/ienumerator.vala \
	System/Collections/iequalitycomparer.vala \
	System/Collections/ihashcodeprovider.vala \
	System/Collections/ilist.vala \
	System/Collections/istructuralcomparable.vala \
	System/Collections/istructuralequatable.vala \
	System/Collections/DictionaryEntry.vala \
	System/Collections/KeyValuePairs.vala

LIBDOTNET_COLLECTIONS = \
	System/Collections/ArrayList.vala \
	System/Collections/BitArray.vala \
	System/Collections/CaseInsensitiveComparer.vala	\
	System/Collections/CaseInsensitiveHashCodeProvider.vala	\
	System/Collections/CollectionBase.vala	\
	System/Collections/Comparer.vala \
	System/Collections/DictionaryBase.vala	\
	System/Collections/Hashtable.vala \
	System/Collections/Queue.vala \
	System/Collections/ReadOnlyCollectionBase.vala \
	System/Collections/SortedList.vala \
	System/Collections/Stack.vala \
	System/Collections/StructuralComparisons.vala

LIBDOTNET_COLLECTIONS_GEN_IFACE = \
	System/Collections/Generic/icollection.vala \
	System/Collections/Generic/icomparer.vala \
	System/Collections/Generic/idictionary.vala \
	System/Collections/Generic/ienumerable.vala \
	System/Collections/Generic/ienumerator.vala \
	System/Collections/Generic/iequalitycomparer.vala \
	System/Collections/Generic/ilist.vala \
	System/Collections/Generic/iset.vala \
	System/Collections/Generic/ireadonlycollection.vala \
	System/Collections/Generic/ireadonlydictionary.vala \
	System/Collections/Generic/ireadonlylist.vala \
	System/Collections/Generic/KeyValuePair.vala

LIBDOTNET_COLLECTIONS_GEN = \
	System/Collections/Generic/Stack.vala \
	System/Collections/Generic/List.vala

LIBDOTNET_COLLECTIONS_GENX = \
	System/Collections/Generic/SortedDictionary.vala \
	System/Collections/Generic/Comparer.vala \
	System/Collections/Generic/Dictionary.vala \
	System/Collections/Generic/EqualityComparer.vala \
	System/Collections/Generic/HashSet.vala \
	System/Collections/Generic/LinkedList.vala \
	System/Collections/Generic/List.vala \
	System/Collections/Generic/Queue.vala \
	System/Collections/Generic/SortedList.vala \
	System/Collections/Generic/SortedSet.vala \
	System/Collections/Generic/Stack.vala

LIBDOTNET_SYSTEM_NS = \
	System/Text/Text.vala \
	System/Globalization/Globalization.vala \
	System/Diagnostics/Diagnostics.vala \
	System/Reflection/Reflection.vala \
	System/Runtime/Runtime.vala \
	System/Security/Security.vala \
	System/Threading/Threading.vala

LIBDOTNET_SYSTEM = \
	System/Nullable.vala \
	System/Exceptions.vala \
	System/action.vala

LIBDOTNET_SYSTEM_IFACE = \
	System/idisposable.vala \
	System/icomparable.vala \
	System/iequatable.vala \
	System/icloneable.vala

LIBDOTNET_SERIAL = \
	System/Runtime/Serialization/iserializable.vala \
	System/Runtime/Serialization/ideserializationcallback.vala

LIBDOTNET_SYSTEM_MISC = \
	System/Linq/Errors.vala \
	System/Globalization/CultureInfo.vala

LIBDOTNET_SOURCES = \
	$(LIBDOTNET_COLLECTIONS_IFACE) \
	$(LIBDOTNET_COLLECTIONS) \
	$(LIBDOTNET_COLLECTIONS_GEN_IFACE) \
	$(LIBDOTNET_COLLECTIONS_GEN) \
	$(LIBDOTNET_SYSTEM_NS) \
	$(LIBDOTNET_SYSTEM) \
	$(LIBDOTNET_SYSTEM_IFACE) \
	$(LIBDOTNET_SYSTEM_MISC)

LIBDOTNET_SOURCESX = \
	$(LIBDOTNET_REGEX) \
	$(LIBDOTNET_COLLECTIONS_IFACE) \
	$(LIBDOTNET_COLLECTIONS) \
	$(LIBDOTNET_COLLECTIONS_GEN) \
	$(LIBDOTNET_SYSTEM_NS) \
	$(LIBDOTNET_SYSTEM) \
	$(LIBDOTNET_SYSTEM_IFACE) \
	$(LIBDOTNET_SYSTEM_MISC) \
	$(LIBDOTNET_SERIAL)

AM_CPPFLAGS = \
	-DPACKAGE_LOCALE_DIR=\""$(localedir)"\" \
	-DPACKAGE_SRC_DIR=\""$(srcdir)"\" \
	-DPACKAGE_DATA_DIR=\""$(pkgdatadir)"\" \
	$(LIBDOTNET_CFLAGS)

AM_CFLAGS = \
	 -Wall\
	 -g

lib_LTLIBRARIES = libdotnet.la
vapidir = $(datadir)/vala/vapi
dist_vapi_DATA = libdotnet-0.1.vapi
libdotnet_la_SOURCES = $(LIBDOTNET_SOURCES)
libdotnet_la_LDFLAGS = $(am__append_1) $(am__append_2)
libdotnet_la_VALAFLAGS = \
	--library libdotnet-0.1 --vapi libdotnet-0.1.vapi -H libdotnet.h \
	--pkg gobject-2.0 --pkg gee-0.8

libdotnet_la_LIBADD = $(LIBDOTNET_LIBS)
libdotnetincludedir = $(includedir)/libdotnet-0.1
libdotnetinclude_HEADERS = \
	libdotnet.h

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libdotnet-0.1.pc
EXTRA_DIST = \
	libdotnet-0.1.pc.in

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/sourcefiles.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/src/sourcefiles.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libdotnet-0.1.pc: $(top_builddir)/config.status $(srcdir)/libdotnet-0.1.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
System/Collections/$(am__dirstamp):
	@$(MKDIR_P) System/Collections
	@: > System/Collections/$(am__dirstamp)
System/Collections/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Collections/$(DEPDIR)
	@: > System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/icollection.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/icomparer.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/idictionary.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/idictionaryenumerator.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ienumerable.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ienumerator.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/iequalitycomparer.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ihashcodeprovider.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ilist.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/istructuralcomparable.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/istructuralequatable.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/DictionaryEntry.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/KeyValuePairs.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ArrayList.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/BitArray.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/CaseInsensitiveComparer.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/CaseInsensitiveHashCodeProvider.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/CollectionBase.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/Comparer.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/DictionaryBase.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/Hashtable.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/Queue.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/ReadOnlyCollectionBase.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/SortedList.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/Stack.lo: System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/StructuralComparisons.lo:  \
	System/Collections/$(am__dirstamp) \
	System/Collections/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/$(am__dirstamp):
	@$(MKDIR_P) System/Collections/Generic
	@: > System/Collections/Generic/$(am__dirstamp)
System/Collections/Generic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Collections/Generic/$(DEPDIR)
	@: > System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/icollection.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/icomparer.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/idictionary.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ienumerable.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ienumerator.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/iequalitycomparer.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ilist.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/iset.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ireadonlycollection.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ireadonlydictionary.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/ireadonlylist.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/KeyValuePair.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/Stack.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Collections/Generic/List.lo:  \
	System/Collections/Generic/$(am__dirstamp) \
	System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
System/Text/$(am__dirstamp):
	@$(MKDIR_P) System/Text
	@: > System/Text/$(am__dirstamp)
System/Text/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Text/$(DEPDIR)
	@: > System/Text/$(DEPDIR)/$(am__dirstamp)
System/Text/Text.lo: System/Text/$(am__dirstamp) \
	System/Text/$(DEPDIR)/$(am__dirstamp)
System/Globalization/$(am__dirstamp):
	@$(MKDIR_P) System/Globalization
	@: > System/Globalization/$(am__dirstamp)
System/Globalization/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Globalization/$(DEPDIR)
	@: > System/Globalization/$(DEPDIR)/$(am__dirstamp)
System/Globalization/Globalization.lo:  \
	System/Globalization/$(am__dirstamp) \
	System/Globalization/$(DEPDIR)/$(am__dirstamp)
System/Diagnostics/$(am__dirstamp):
	@$(MKDIR_P) System/Diagnostics
	@: > System/Diagnostics/$(am__dirstamp)
System/Diagnostics/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Diagnostics/$(DEPDIR)
	@: > System/Diagnostics/$(DEPDIR)/$(am__dirstamp)
System/Diagnostics/Diagnostics.lo: System/Diagnostics/$(am__dirstamp) \
	System/Diagnostics/$(DEPDIR)/$(am__dirstamp)
System/Reflection/$(am__dirstamp):
	@$(MKDIR_P) System/Reflection
	@: > System/Reflection/$(am__dirstamp)
System/Reflection/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Reflection/$(DEPDIR)
	@: > System/Reflection/$(DEPDIR)/$(am__dirstamp)
System/Reflection/Reflection.lo: System/Reflection/$(am__dirstamp) \
	System/Reflection/$(DEPDIR)/$(am__dirstamp)
System/Runtime/$(am__dirstamp):
	@$(MKDIR_P) System/Runtime
	@: > System/Runtime/$(am__dirstamp)
System/Runtime/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Runtime/$(DEPDIR)
	@: > System/Runtime/$(DEPDIR)/$(am__dirstamp)
System/Runtime/Runtime.lo: System/Runtime/$(am__dirstamp) \
	System/Runtime/$(DEPDIR)/$(am__dirstamp)
System/Security/$(am__dirstamp):
	@$(MKDIR_P) System/Security
	@: > System/Security/$(am__dirstamp)
System/Security/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Security/$(DEPDIR)
	@: > System/Security/$(DEPDIR)/$(am__dirstamp)
System/Security/Security.lo: System/Security/$(am__dirstamp) \
	System/Security/$(DEPDIR)/$(am__dirstamp)
System/Threading/$(am__dirstamp):
	@$(MKDIR_P) System/Threading
	@: > System/Threading/$(am__dirstamp)
System/Threading/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Threading/$(DEPDIR)
	@: > System/Threading/$(DEPDIR)/$(am__dirstamp)
System/Threading/Threading.lo: System/Threading/$(am__dirstamp) \
	System/Threading/$(DEPDIR)/$(am__dirstamp)
System/$(am__dirstamp):
	@$(MKDIR_P) System
	@: > System/$(am__dirstamp)
System/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/$(DEPDIR)
	@: > System/$(DEPDIR)/$(am__dirstamp)
System/Nullable.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/Exceptions.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/action.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/idisposable.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/icomparable.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/iequatable.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/icloneable.lo: System/$(am__dirstamp) \
	System/$(DEPDIR)/$(am__dirstamp)
System/Linq/$(am__dirstamp):
	@$(MKDIR_P) System/Linq
	@: > System/Linq/$(am__dirstamp)
System/Linq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) System/Linq/$(DEPDIR)
	@: > System/Linq/$(DEPDIR)/$(am__dirstamp)
System/Linq/Errors.lo: System/Linq/$(am__dirstamp) \
	System/Linq/$(DEPDIR)/$(am__dirstamp)
System/Globalization/CultureInfo.lo:  \
	System/Globalization/$(am__dirstamp) \
	System/Globalization/$(DEPDIR)/$(am__dirstamp)

libdotnet.la: $(libdotnet_la_OBJECTS) $(libdotnet_la_DEPENDENCIES) $(EXTRA_libdotnet_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libdotnet_la_LINK) -rpath $(libdir) $(libdotnet_la_OBJECTS) $(libdotnet_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f System/*.$(OBJEXT)
	-rm -f System/*.lo
	-rm -f System/Collections/*.$(OBJEXT)
	-rm -f System/Collections/*.lo
	-rm -f System/Collections/Generic/*.$(OBJEXT)
	-rm -f System/Collections/Generic/*.lo
	-rm -f System/Diagnostics/*.$(OBJEXT)
	-rm -f System/Diagnostics/*.lo
	-rm -f System/Globalization/*.$(OBJEXT)
	-rm -f System/Globalization/*.lo
	-rm -f System/Linq/*.$(OBJEXT)
	-rm -f System/Linq/*.lo
	-rm -f System/Reflection/*.$(OBJEXT)
	-rm -f System/Reflection/*.lo
	-rm -f System/Runtime/*.$(OBJEXT)
	-rm -f System/Runtime/*.lo
	-rm -f System/Security/*.$(OBJEXT)
	-rm -f System/Security/*.lo
	-rm -f System/Text/*.$(OBJEXT)
	-rm -f System/Text/*.lo
	-rm -f System/Threading/*.$(OBJEXT)
	-rm -f System/Threading/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/Exceptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/Nullable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/action.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/icloneable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/icomparable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/idisposable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/$(DEPDIR)/iequatable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ArrayList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/BitArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/CaseInsensitiveComparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/CaseInsensitiveHashCodeProvider.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/CollectionBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/Comparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/DictionaryBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/DictionaryEntry.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/Hashtable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/KeyValuePairs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/Queue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ReadOnlyCollectionBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/SortedList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/Stack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/StructuralComparisons.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/icollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/icomparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/idictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/idictionaryenumerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ienumerable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ienumerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/iequalitycomparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ihashcodeprovider.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/ilist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/istructuralcomparable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/$(DEPDIR)/istructuralequatable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/KeyValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/List.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/Stack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/icollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/icomparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/idictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ienumerable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ienumerator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/iequalitycomparer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ilist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ireadonlycollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ireadonlydictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/ireadonlylist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Collections/Generic/$(DEPDIR)/iset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Diagnostics/$(DEPDIR)/Diagnostics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Globalization/$(DEPDIR)/CultureInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Globalization/$(DEPDIR)/Globalization.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Linq/$(DEPDIR)/Errors.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Reflection/$(DEPDIR)/Reflection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Runtime/$(DEPDIR)/Runtime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Security/$(DEPDIR)/Security.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Text/$(DEPDIR)/Text.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@System/Threading/$(DEPDIR)/Threading.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
$(srcdir)/System/Collections/icollection.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/icomparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/idictionary.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/idictionaryenumerator.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ienumerable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ienumerator.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/iequalitycomparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ihashcodeprovider.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ilist.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/istructuralcomparable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/istructuralequatable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/DictionaryEntry.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/KeyValuePairs.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ArrayList.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/BitArray.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/CaseInsensitiveComparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/CaseInsensitiveHashCodeProvider.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/CollectionBase.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Comparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/DictionaryBase.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Hashtable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Queue.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/ReadOnlyCollectionBase.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/SortedList.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Stack.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/StructuralComparisons.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/icollection.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/icomparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/idictionary.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ienumerable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ienumerator.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/iequalitycomparer.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ilist.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/iset.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ireadonlycollection.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ireadonlydictionary.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/ireadonlylist.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/KeyValuePair.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/Stack.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Collections/Generic/List.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Text/Text.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Globalization/Globalization.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Diagnostics/Diagnostics.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Reflection/Reflection.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Runtime/Runtime.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Security/Security.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Threading/Threading.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Nullable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Exceptions.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/action.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/idisposable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/icomparable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/iequatable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/icloneable.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Linq/Errors.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/System/Globalization/CultureInfo.c: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/libdotnet-0.1.vapi: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/libdotnet.h: $(srcdir)/libdotnet_la_vala.stamp
	@if test -f $@; then :; else rm -f $(srcdir)/libdotnet_la_vala.stamp; fi
	@if test -f $@; then :; else \
	  $(MAKE) $(AM_MAKEFLAGS) $(srcdir)/libdotnet_la_vala.stamp; \
	fi
$(srcdir)/libdotnet_la_vala.stamp: System/Collections/icollection.vala System/Collections/icomparer.vala System/Collections/idictionary.vala System/Collections/idictionaryenumerator.vala System/Collections/ienumerable.vala System/Collections/ienumerator.vala System/Collections/iequalitycomparer.vala System/Collections/ihashcodeprovider.vala System/Collections/ilist.vala System/Collections/istructuralcomparable.vala System/Collections/istructuralequatable.vala System/Collections/DictionaryEntry.vala System/Collections/KeyValuePairs.vala System/Collections/ArrayList.vala System/Collections/BitArray.vala System/Collections/CaseInsensitiveComparer.vala System/Collections/CaseInsensitiveHashCodeProvider.vala System/Collections/CollectionBase.vala System/Collections/Comparer.vala System/Collections/DictionaryBase.vala System/Collections/Hashtable.vala System/Collections/Queue.vala System/Collections/ReadOnlyCollectionBase.vala System/Collections/SortedList.vala System/Collections/Stack.vala System/Collections/StructuralComparisons.vala System/Collections/Generic/icollection.vala System/Collections/Generic/icomparer.vala System/Collections/Generic/idictionary.vala System/Collections/Generic/ienumerable.vala System/Collections/Generic/ienumerator.vala System/Collections/Generic/iequalitycomparer.vala System/Collections/Generic/ilist.vala System/Collections/Generic/iset.vala System/Collections/Generic/ireadonlycollection.vala System/Collections/Generic/ireadonlydictionary.vala System/Collections/Generic/ireadonlylist.vala System/Collections/Generic/KeyValuePair.vala System/Collections/Generic/Stack.vala System/Collections/Generic/List.vala System/Text/Text.vala System/Globalization/Globalization.vala System/Diagnostics/Diagnostics.vala System/Reflection/Reflection.vala System/Runtime/Runtime.vala System/Security/Security.vala System/Threading/Threading.vala System/Nullable.vala System/Exceptions.vala System/action.vala System/idisposable.vala System/icomparable.vala System/iequatable.vala System/icloneable.vala System/Linq/Errors.vala System/Globalization/CultureInfo.vala
	$(AM_V_at)rm -f $@ && echo stamp > $@-t
	$(AM_V_VALAC)$(am__cd) $(srcdir) && $(VALAC) $(libdotnet_la_VALAFLAGS) $(VALAFLAGS) -C System/Collections/icollection.vala System/Collections/icomparer.vala System/Collections/idictionary.vala System/Collections/idictionaryenumerator.vala System/Collections/ienumerable.vala System/Collections/ienumerator.vala System/Collections/iequalitycomparer.vala System/Collections/ihashcodeprovider.vala System/Collections/ilist.vala System/Collections/istructuralcomparable.vala System/Collections/istructuralequatable.vala System/Collections/DictionaryEntry.vala System/Collections/KeyValuePairs.vala System/Collections/ArrayList.vala System/Collections/BitArray.vala System/Collections/CaseInsensitiveComparer.vala System/Collections/CaseInsensitiveHashCodeProvider.vala System/Collections/CollectionBase.vala System/Collections/Comparer.vala System/Collections/DictionaryBase.vala System/Collections/Hashtable.vala System/Collections/Queue.vala System/Collections/ReadOnlyCollectionBase.vala System/Collections/SortedList.vala System/Collections/Stack.vala System/Collections/StructuralComparisons.vala System/Collections/Generic/icollection.vala System/Collections/Generic/icomparer.vala System/Collections/Generic/idictionary.vala System/Collections/Generic/ienumerable.vala System/Collections/Generic/ienumerator.vala System/Collections/Generic/iequalitycomparer.vala System/Collections/Generic/ilist.vala System/Collections/Generic/iset.vala System/Collections/Generic/ireadonlycollection.vala System/Collections/Generic/ireadonlydictionary.vala System/Collections/Generic/ireadonlylist.vala System/Collections/Generic/KeyValuePair.vala System/Collections/Generic/Stack.vala System/Collections/Generic/List.vala System/Text/Text.vala System/Globalization/Globalization.vala System/Diagnostics/Diagnostics.vala System/Reflection/Reflection.vala System/Runtime/Runtime.vala System/Security/Security.vala System/Threading/Threading.vala System/Nullable.vala System/Exceptions.vala System/action.vala System/idisposable.vala System/icomparable.vala System/iequatable.vala System/icloneable.vala System/Linq/Errors.vala System/Globalization/CultureInfo.vala
	$(AM_V_at)mv -f $@-t $@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf System/.libs System/_libs
	-rm -rf System/Collections/.libs System/Collections/_libs
	-rm -rf System/Collections/Generic/.libs System/Collections/Generic/_libs
	-rm -rf System/Diagnostics/.libs System/Diagnostics/_libs
	-rm -rf System/Globalization/.libs System/Globalization/_libs
	-rm -rf System/Linq/.libs System/Linq/_libs
	-rm -rf System/Reflection/.libs System/Reflection/_libs
	-rm -rf System/Runtime/.libs System/Runtime/_libs
	-rm -rf System/Security/.libs System/Security/_libs
	-rm -rf System/Text/.libs System/Text/_libs
	-rm -rf System/Threading/.libs System/Threading/_libs
install-dist_vapiDATA: $(dist_vapi_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(vapidir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(vapidir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(vapidir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(vapidir)" || exit $$?; \
	done

uninstall-dist_vapiDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_vapi_DATA)'; test -n "$(vapidir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(vapidir)'; $(am__uninstall_files_from_dir)
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-libdotnetincludeHEADERS: $(libdotnetinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libdotnetinclude_HEADERS)'; test -n "$(libdotnetincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdotnetincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdotnetincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libdotnetincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libdotnetincludedir)" || exit $$?; \
	done

uninstall-libdotnetincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libdotnetinclude_HEADERS)'; test -n "$(libdotnetincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdotnetincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(vapidir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(libdotnetincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f System/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/$(am__dirstamp)
	-rm -f System/Collections/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Collections/$(am__dirstamp)
	-rm -f System/Collections/Generic/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Collections/Generic/$(am__dirstamp)
	-rm -f System/Diagnostics/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Diagnostics/$(am__dirstamp)
	-rm -f System/Globalization/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Globalization/$(am__dirstamp)
	-rm -f System/Linq/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Linq/$(am__dirstamp)
	-rm -f System/Reflection/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Reflection/$(am__dirstamp)
	-rm -f System/Runtime/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Runtime/$(am__dirstamp)
	-rm -f System/Security/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Security/$(am__dirstamp)
	-rm -f System/Text/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Text/$(am__dirstamp)
	-rm -f System/Threading/$(DEPDIR)/$(am__dirstamp)
	-rm -f System/Threading/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f $(srcdir)/System/Collections/ArrayList.c
	-rm -f $(srcdir)/System/Collections/BitArray.c
	-rm -f $(srcdir)/System/Collections/CaseInsensitiveComparer.c
	-rm -f $(srcdir)/System/Collections/CaseInsensitiveHashCodeProvider.c
	-rm -f $(srcdir)/System/Collections/CollectionBase.c
	-rm -f $(srcdir)/System/Collections/Comparer.c
	-rm -f $(srcdir)/System/Collections/DictionaryBase.c
	-rm -f $(srcdir)/System/Collections/DictionaryEntry.c
	-rm -f $(srcdir)/System/Collections/Generic/KeyValuePair.c
	-rm -f $(srcdir)/System/Collections/Generic/List.c
	-rm -f $(srcdir)/System/Collections/Generic/Stack.c
	-rm -f $(srcdir)/System/Collections/Generic/icollection.c
	-rm -f $(srcdir)/System/Collections/Generic/icomparer.c
	-rm -f $(srcdir)/System/Collections/Generic/idictionary.c
	-rm -f $(srcdir)/System/Collections/Generic/ienumerable.c
	-rm -f $(srcdir)/System/Collections/Generic/ienumerator.c
	-rm -f $(srcdir)/System/Collections/Generic/iequalitycomparer.c
	-rm -f $(srcdir)/System/Collections/Generic/ilist.c
	-rm -f $(srcdir)/System/Collections/Generic/ireadonlycollection.c
	-rm -f $(srcdir)/System/Collections/Generic/ireadonlydictionary.c
	-rm -f $(srcdir)/System/Collections/Generic/ireadonlylist.c
	-rm -f $(srcdir)/System/Collections/Generic/iset.c
	-rm -f $(srcdir)/System/Collections/Hashtable.c
	-rm -f $(srcdir)/System/Collections/KeyValuePairs.c
	-rm -f $(srcdir)/System/Collections/Queue.c
	-rm -f $(srcdir)/System/Collections/ReadOnlyCollectionBase.c
	-rm -f $(srcdir)/System/Collections/SortedList.c
	-rm -f $(srcdir)/System/Collections/Stack.c
	-rm -f $(srcdir)/System/Collections/StructuralComparisons.c
	-rm -f $(srcdir)/System/Collections/icollection.c
	-rm -f $(srcdir)/System/Collections/icomparer.c
	-rm -f $(srcdir)/System/Collections/idictionary.c
	-rm -f $(srcdir)/System/Collections/idictionaryenumerator.c
	-rm -f $(srcdir)/System/Collections/ienumerable.c
	-rm -f $(srcdir)/System/Collections/ienumerator.c
	-rm -f $(srcdir)/System/Collections/iequalitycomparer.c
	-rm -f $(srcdir)/System/Collections/ihashcodeprovider.c
	-rm -f $(srcdir)/System/Collections/ilist.c
	-rm -f $(srcdir)/System/Collections/istructuralcomparable.c
	-rm -f $(srcdir)/System/Collections/istructuralequatable.c
	-rm -f $(srcdir)/System/Diagnostics/Diagnostics.c
	-rm -f $(srcdir)/System/Exceptions.c
	-rm -f $(srcdir)/System/Globalization/CultureInfo.c
	-rm -f $(srcdir)/System/Globalization/Globalization.c
	-rm -f $(srcdir)/System/Linq/Errors.c
	-rm -f $(srcdir)/System/Nullable.c
	-rm -f $(srcdir)/System/Reflection/Reflection.c
	-rm -f $(srcdir)/System/Runtime/Runtime.c
	-rm -f $(srcdir)/System/Security/Security.c
	-rm -f $(srcdir)/System/Text/Text.c
	-rm -f $(srcdir)/System/Threading/Threading.c
	-rm -f $(srcdir)/System/action.c
	-rm -f $(srcdir)/System/icloneable.c
	-rm -f $(srcdir)/System/icomparable.c
	-rm -f $(srcdir)/System/idisposable.c
	-rm -f $(srcdir)/System/iequatable.c
	-rm -f $(srcdir)/libdotnet-0.1.vapi
	-rm -f $(srcdir)/libdotnet.h
	-rm -f $(srcdir)/libdotnet_la_vala.stamp
	-rm -f System/Collections/ArrayList.c
	-rm -f System/Collections/BitArray.c
	-rm -f System/Collections/CaseInsensitiveComparer.c
	-rm -f System/Collections/CaseInsensitiveHashCodeProvider.c
	-rm -f System/Collections/CollectionBase.c
	-rm -f System/Collections/Comparer.c
	-rm -f System/Collections/DictionaryBase.c
	-rm -f System/Collections/DictionaryEntry.c
	-rm -f System/Collections/Generic/KeyValuePair.c
	-rm -f System/Collections/Generic/List.c
	-rm -f System/Collections/Generic/Stack.c
	-rm -f System/Collections/Generic/icollection.c
	-rm -f System/Collections/Generic/icomparer.c
	-rm -f System/Collections/Generic/idictionary.c
	-rm -f System/Collections/Generic/ienumerable.c
	-rm -f System/Collections/Generic/ienumerator.c
	-rm -f System/Collections/Generic/iequalitycomparer.c
	-rm -f System/Collections/Generic/ilist.c
	-rm -f System/Collections/Generic/ireadonlycollection.c
	-rm -f System/Collections/Generic/ireadonlydictionary.c
	-rm -f System/Collections/Generic/ireadonlylist.c
	-rm -f System/Collections/Generic/iset.c
	-rm -f System/Collections/Hashtable.c
	-rm -f System/Collections/KeyValuePairs.c
	-rm -f System/Collections/Queue.c
	-rm -f System/Collections/ReadOnlyCollectionBase.c
	-rm -f System/Collections/SortedList.c
	-rm -f System/Collections/Stack.c
	-rm -f System/Collections/StructuralComparisons.c
	-rm -f System/Collections/icollection.c
	-rm -f System/Collections/icomparer.c
	-rm -f System/Collections/idictionary.c
	-rm -f System/Collections/idictionaryenumerator.c
	-rm -f System/Collections/ienumerable.c
	-rm -f System/Collections/ienumerator.c
	-rm -f System/Collections/iequalitycomparer.c
	-rm -f System/Collections/ihashcodeprovider.c
	-rm -f System/Collections/ilist.c
	-rm -f System/Collections/istructuralcomparable.c
	-rm -f System/Collections/istructuralequatable.c
	-rm -f System/Diagnostics/Diagnostics.c
	-rm -f System/Exceptions.c
	-rm -f System/Globalization/CultureInfo.c
	-rm -f System/Globalization/Globalization.c
	-rm -f System/Linq/Errors.c
	-rm -f System/Nullable.c
	-rm -f System/Reflection/Reflection.c
	-rm -f System/Runtime/Runtime.c
	-rm -f System/Security/Security.c
	-rm -f System/Text/Text.c
	-rm -f System/Threading/Threading.c
	-rm -f System/action.c
	-rm -f System/icloneable.c
	-rm -f System/icomparable.c
	-rm -f System/idisposable.c
	-rm -f System/iequatable.c
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf System/$(DEPDIR) System/Collections/$(DEPDIR) System/Collections/Generic/$(DEPDIR) System/Diagnostics/$(DEPDIR) System/Globalization/$(DEPDIR) System/Linq/$(DEPDIR) System/Reflection/$(DEPDIR) System/Runtime/$(DEPDIR) System/Security/$(DEPDIR) System/Text/$(DEPDIR) System/Threading/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-dist_vapiDATA install-libdotnetincludeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf System/$(DEPDIR) System/Collections/$(DEPDIR) System/Collections/Generic/$(DEPDIR) System/Diagnostics/$(DEPDIR) System/Globalization/$(DEPDIR) System/Linq/$(DEPDIR) System/Reflection/$(DEPDIR) System/Runtime/$(DEPDIR) System/Security/$(DEPDIR) System/Text/$(DEPDIR) System/Threading/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-dist_vapiDATA uninstall-libLTLIBRARIES \
	uninstall-libdotnetincludeHEADERS uninstall-pkgconfigDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dist_vapiDATA install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libdotnetincludeHEADERS \
	install-man install-pdf install-pdf-am install-pkgconfigDATA \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-dist_vapiDATA \
	uninstall-libLTLIBRARIES uninstall-libdotnetincludeHEADERS \
	uninstall-pkgconfigDATA


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
